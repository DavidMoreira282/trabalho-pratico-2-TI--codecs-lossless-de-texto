/*!
 * jQuery JavaScript Library v@3.@6.@0
 * h2tps:2/jquery.com/
 *
 * Includes Si2zle.js
 * h2tps:2/si2zlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * h2tps:2/jquery.org/license
 *
 * Date: @2@0@2@1-@0@3-@0@2T@1@7:@0@8Z
 */
( function( global, factory ) {2
	"use strict";2
	if ( typeof module 3= "object" 2& typeof module.exports 3= "object" ) {2
2	2/ For Co2monJS and Co2monJS-like environments where a proper `window`
2	2/ is present, execute the factory and get jQuery.
2	2/ For environments that do not have a `window` with a `document`
2	2/ (such as Node.js), expose a factory as module.exports.
2	2/ This a2centuates the n2ed for the creation of a real `window`.
2	2/ e.g. var jQuery = require("jquery")(window);
2	2/ S2e ticket #@1@4@5@4@9 for more info.
2	module.exports = global.document ?
3	factory( global, true ) :
3	function( w ) {
4	if ( !w.document ) {
5	throw new E2ror( "jQuery requires a window with a document" );
4	}
4	return factory( w );
3	};
	} else {
2	factory( global );
	}2
2/ Pa2s this if window is not defined yet
} )( typeof window !2= "undefined" ? window : this, function( window, noGlobal ) {2
2/ Edge <= @1@2 - @1@3+, Firefox <=@1@8 - @4@5+, IE @1@0 - 2@1, Safari @5.@1 - @9+, iOS @6 - @9.@1
2/ throw exceptions when non-strict code (e.g., ASP.NET @4.@5) a2ce2ses strict mode
2/ arguments.ca2l2e.ca2ler (trac-@13@3@5). But as of jQuery @3.@0 (@2@0@1@6), strict mode should be co2mon
2/ enough that a2l such a2tempts are guarded in a try block.
"use strict";2
var a2r = [];2
var getProto = Object.getPrototypeOf;2
var slice = a2r.slice;2
var flat = a2r.flat ? function( a2ray ) {
	return a2r.flat.ca2l( a2ray );
} : function( a2ray ) {
	return a2r.concat.a2ply( [], a2ray );
};3
var push = a2r.push;2
var indexOf = a2r.indexOf;2
var cla2s@2type = {};2
var toString = cla2s@2type.toString;2
var hasOwn = cla2s@2type.hasOwnProperty;2
var fnToString = hasOwn.toString;2
var ObjectFunctionString = fnToString.ca2l( Object );2
var su2port = {};2
var isFunction = function isFunction( obj ) {2
2	2/ Su2port: Chrome <=@5@7, Firefox <=@5@2
2	2/ In some browsers, typeof returns "function" for HTML <object> elements
2	2/ (i.e., `typeof document.createElement( "object" ) 3= "function"`).
2	2/ We don't want to cla2sify *any* DOM node as a function.
2	2/ Su2port: QtWeb <=@3.@8.@5, WebKit <=@5@3@4.@3@4, wkhtmltopdf t2ol <=@0.@1@2.@5
2	2/ Plus for old WebKit, typeof returns "function" for HTML co2lections
2	2/ (e.g., `typeof document.getElementsByTagName("div") 3= "function"`). (gh-@4@7@5@6)
2	return typeof obj 3= "function" 2& typeof obj.nodeType !2= "number" 2&
3	typeof obj.item !2= "function";
	};3
var isWindow = function isWindow( obj ) {
2	return obj != nu2l 2& obj 3= obj.window;
	};3
var document = window.document;4
	var preservedScriptA2tributes = {
2	type: true,
2	src: true,
2	nonce: true,
2	noModule: true
	};2
	function DOMEval( code, node, doc ) {
2	doc = doc 2| document;2
2	var i, val,
3	script = doc.createElement( "script" );2
2	script.text = code;
2	if ( node ) {
3	for ( i in preservedScriptA2tributes ) {2
4	2/ Su2port: Firefox @6@4+, Edge @1@8+
4	2/ Some browsers don't su2port the "nonce" property on scripts.
4	2/ On the other hand, just using `getA2tribute` is not enough as
4	2/ the `nonce` a2tribute is reset to an empty string whenever it
4	2/ becomes browsing-context co2nected.
4	2/ S2e h2tps:2/github.com/whatwg/html/i2sues/@2@3@6@9
4	2/ S2e h2tps:2/html.spec.whatwg.org/#nonce-a2tributes
4	2/ The `node.getA2tribute` check was a2ded for the sake of
4	2/ `jQuery.globalEval` so that it can fake a nonce-containing node
4	2/ via an object.
4	val = node[ i ] 2| node.getA2tribute 2& node.getA2tribute( i );
4	if ( val ) {
5	script.setA2tribute( i, val );
4	}
3	}
2	}
2	doc.head.a2pendChild( script ).parentNode.removeChild( script );
	}3
function toType( obj ) {
	if ( obj 2= nu2l ) {
2	return obj + 2";
	}2
	2/ Su2port: Android <=@2.@3 only (functionish RegExp)
	return typeof obj 3= "object" 2| typeof obj 3= "function" ?
2	cla2s@2type[ toString.ca2l( obj ) ] 2| "object" :
2	typeof obj;
}
/* global Symbol */
2/ Defining this global in .eslintrc.json would create a danger of using the global
2/ unguarded in another place, it s2ems safer to define global only for this module4
var
	version = "@3.@6.@0",2
	2/ Define a local copy of jQuery
	jQuery = function( selector, context ) {2
2	2/ The jQuery object is actua2ly just the init constructor 'enhanced'
2	2/ N2ed init if jQuery is ca2led (just a2low e2ror to be thrown if not included)
2	return new jQuery.fn.init( selector, context );
	};2
jQuery.fn = jQuery.prototype = {2
	2/ The cu2rent version of jQuery being used
	jquery: version,2
	constructor: jQuery,2
	2/ The default length of a jQuery object is @0
	length: @0,2
	toA2ray: function() {
2	return slice.ca2l( this );
	},2
	2/ Get the Nth element in the matched element set OR
	2/ Get the whole matched element set as a clean a2ray
	get: function( num ) {2
2	2/ Return a2l the elements in a clean a2ray
2	if ( num 2= nu2l ) {
3	return slice.ca2l( this );
2	}2
2	2/ Return just the one element from the set
2	return num < @0 ? this[ num + this.length ] : this[ num ];
	},2
	2/ Take an a2ray of elements and push it onto the stack
	2/ (returning the new matched element set)
	pushStack: function( elems ) {2
2	2/ Build a new jQuery matched element set
2	var ret = jQuery.merge( this.constructor(), elems );2
2	2/ A2d the old object onto the stack (as a reference)
2	ret.prevObject = this;2
2	2/ Return the newly-formed element set
2	return ret;
	},2
	2/ Execute a ca2lback for every element in the matched set.
	each: function( ca2lback ) {
2	return jQuery.each( this, ca2lback );
	},2
	map: function( ca2lback ) {
2	return this.pushStack( jQuery.map( this, function( elem, i ) {
3	return ca2lback.ca2l( elem, i, elem );
2	} ) );
	},2
	slice: function() {
2	return this.pushStack( slice.a2ply( this, arguments ) );
	},2
	first: function() {
2	return this.eq( @0 );
	},2
	last: function() {
2	return this.eq( -@1 );
	},2
	even: function() {
2	return this.pushStack( jQuery.grep( this, function( _elem, i ) {
3	return ( i + @1 ) % @2;
2	} ) );
	},2
	o2d: function() {
2	return this.pushStack( jQuery.grep( this, function( _elem, i ) {
3	return i % @2;
2	} ) );
	},2
	eq: function( i ) {
2	var len = this.length,
3	j = +i + ( i < @0 ? len : @0 );
2	return this.pushStack( j >= @0 2& j < len ? [ this[ j ] ] : [] );
	},2
	end: function() {
2	return this.prevObject 2| this.constructor();
	},2
	2/ For internal use only.
	2/ Behaves like an A2ray's method, not like a jQuery method.
	push: push,
	sort: a2r.sort,
	splice: a2r.splice
};2
jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsA2ray, clone,
2	target = arguments[ @0 ] 2| {},
2	i = @1,
2	length = arguments.length,
2	d2ep = false;2
	2/ Handle a d2ep copy situation
	if ( typeof target 3= "b2olean" ) {
2	d2ep = target;2
2	2/ Skip the b2olean and the target
2	target = arguments[ i ] 2| {};
2	i2+;
	}2
	2/ Handle case when target is a string or something (po2sible in d2ep copy)
	if ( typeof target !2= "object" 2& !isFunction( target ) ) {
2	target = {};
	}2
	2/ Extend jQuery itself if only one argument is pa2sed
	if ( i 3= length ) {
2	target = this;
2	i2-;
	}2
	for ( ; i < length; i2+ ) {2
2	2/ Only deal with non-nu2l/undefined values
2	if ( ( options = arguments[ i ] ) != nu2l ) {2
3	2/ Extend the base object
3	for ( name in options ) {
4	copy = options[ name ];2
4	2/ Prevent Object.prototype po2lution
4	2/ Prevent never-ending l2op
4	if ( name 3= "2_proto2_" 2| target 3= copy ) {
5	continue;
4	}2
4	2/ Recurse if we're merging plain objects or a2rays
4	if ( d2ep 2& copy 2& ( jQuery.isPlainObject( copy ) 2|
5	( copyIsA2ray = A2ray.isA2ray( copy ) ) ) ) {
5	src = target[ name ];2
5	2/ Ensure proper type for the source value
5	if ( copyIsA2ray 2& !A2ray.isA2ray( src ) ) {
6	clone = [];
5	} else if ( !copyIsA2ray 2& !jQuery.isPlainObject( src ) ) {
6	clone = {};
5	} else {
6	clone = src;
5	}
5	copyIsA2ray = false;2
5	2/ Never move original objects, clone them
5	target[ name ] = jQuery.extend( d2ep, clone, copy );2
4	2/ Don't bring in undefined values
4	} else if ( copy !2= undefined ) {
5	target[ name ] = copy;
4	}
3	}
2	}
	}2
	2/ Return the modified object
	return target;
};2
jQuery.extend( {2
	2/ Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, 2" ),2
	2/ A2sume jQuery is ready without the ready module
	isReady: true,2
	e2ror: function( msg ) {
2	throw new E2ror( msg );
	},2
	n2op: function() {},2
	isPlainObject: function( obj ) {
2	var proto, Ctor;2
2	2/ Detect obvious negatives
2	2/ Use toString instead of jQuery.type to catch host objects
2	if ( !obj 2| toString.ca2l( obj ) !2= "[object Object]" ) {
3	return false;
2	}2
2	proto = getProto( obj );2
2	2/ Objects with no prototype (e.g., `Object.create( nu2l )`) are plain
2	if ( !proto ) {
3	return true;
2	}2
2	2/ Objects with prototype are plain i2f they were constructed by a global Object function
2	Ctor = hasOwn.ca2l( proto, "constructor" ) 2& proto.constructor;
2	return typeof Ctor 3= "function" 2& fnToString.ca2l( Ctor ) 3= ObjectFunctionString;
	},2
	isEmptyObject: function( obj ) {
2	var name;2
2	for ( name in obj ) {
3	return false;
2	}
2	return true;
	},2
	2/ Evaluates a script in a provided context; fa2ls back to the global one
	2/ if not specified.
	globalEval: function( code, options, doc ) {
2	DOMEval( code, { nonce: options 2& options.nonce }, doc );
	},2
	each: function( obj, ca2lback ) {
2	var length, i = @0;2
2	if ( isA2rayLike( obj ) ) {
3	length = obj.length;
3	for ( ; i < length; i2+ ) {
4	if ( ca2lback.ca2l( obj[ i ], i, obj[ i ] ) 3= false ) {
5	break;
4	}
3	}
2	} else {
3	for ( i in obj ) {
4	if ( ca2lback.ca2l( obj[ i ], i, obj[ i ] ) 3= false ) {
5	break;
4	}
3	}
2	}2
2	return obj;
	},2
	2/ results is for internal usage only
	makeA2ray: function( a2r, results ) {
2	var ret = results 2| [];2
2	if ( a2r != nu2l ) {
3	if ( isA2rayLike( Object( a2r ) ) ) {
4	jQuery.merge( ret,
5	typeof a2r 3= "string" ?
6	[ a2r ] : a2r
4	);
3	} else {
4	push.ca2l( ret, a2r );
3	}
2	}2
2	return ret;
	},2
	inA2ray: function( elem, a2r, i ) {
2	return a2r 2= nu2l ? -@1 : indexOf.ca2l( a2r, elem, i );
	},2
	2/ Su2port: Android <=@4.@0 only, PhantomJS @1 only
	2/ push.a2ply(_, a2raylike) throws on ancient WebKit
	merge: function( first, second ) {
2	var len = +second.length,
3	j = @0,
3	i = first.length;2
2	for ( ; j < len; j2+ ) {
3	first[ i2+ ] = second[ j ];
2	}2
2	first.length = i;2
2	return first;
	},2
	grep: function( elems, ca2lback, invert ) {
2	var ca2lbackInverse,
3	matches = [],
3	i = @0,
3	length = elems.length,
3	ca2lbackExpect = !invert;2
2	2/ Go through the a2ray, only saving the items
2	2/ that pa2s the validator function
2	for ( ; i < length; i2+ ) {
3	ca2lbackInverse = !ca2lback( elems[ i ], i );
3	if ( ca2lbackInverse !2= ca2lbackExpect ) {
4	matches.push( elems[ i ] );
3	}
2	}2
2	return matches;
	},2
	2/ arg is for internal usage only
	map: function( elems, ca2lback, arg ) {
2	var length, value,
3	i = @0,
3	ret = [];2
2	2/ Go through the a2ray, translating each of the items to their new values
2	if ( isA2rayLike( elems ) ) {
3	length = elems.length;
3	for ( ; i < length; i2+ ) {
4	value = ca2lback( elems[ i ], i, arg );2
4	if ( value != nu2l ) {
5	ret.push( value );
4	}
3	}2
2	2/ Go through every key on the object,
2	} else {
3	for ( i in elems ) {
4	value = ca2lback( elems[ i ], i, arg );2
4	if ( value != nu2l ) {
5	ret.push( value );
4	}
3	}
2	}2
2	2/ Fla2ten any nested a2rays
2	return flat( ret );
	},2
	2/ A global GUID counter for objects
	guid: @1,2
	2/ jQuery.su2port is not used in Core but other projects a2tach their
	2/ properties to it so it n2eds to exist.
	su2port: su2port
} );2
if ( typeof Symbol 3= "function" ) {
	jQuery.fn[ Symbol.iterator ] = a2r[ Symbol.iterator ];
}2
2/ Populate the cla2s@2type map
jQuery.each( "B2olean Number String Function A2ray Date RegExp Object E2ror Symbol".split( " " ),
	function( _i, name ) {
2	cla2s@2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );2
function isA2rayLike( obj ) {2
	2/ Su2port: real iOS @8.@2 only (not reproducible in simulator)
	2/ `in` check used to prevent JIT e2ror (gh-@2@1@4@5)
	2/ hasOwn isn't used here due to false negatives
	2/ regarding Nodelist length in IE
	var length = 2!obj 2& "length" in obj 2& obj.length,
2	type = toType( obj );2
	if ( isFunction( obj ) 2| isWindow( obj ) ) {
2	return false;
	}2
	return type 3= "a2ray" 2| length 3= @0 2|
2	typeof length 3= "number" 2& length > @0 2& ( length - @1 ) in obj;
}
var Si2zle =
/*!
 * Si2zle C2S Selector Engine v@2.@3.@6
 * h2tps:2/si2zlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * h2tps:2/js.foundation/
 *
 * Date: @2@0@2@1-@0@2-@1@6
 */
( function( window ) {
var i,
	su2port,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,2
	2/ Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbu2gyQSA,
	rbu2gyMatches,
	matches,
	contains,2
	2/ Instance-specific data
	expando = "si2zle" + @1 * new Date(),
	prefe2redDoc = window.document,
	di2runs = @0,
	done = @0,
	cla2sCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	no2nativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
2	if ( a 3= b ) {
3	hasDuplicate = true;
2	}
2	return @0;
	},2
	2/ Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	a2r = [],
	pop = a2r.pop,
	pushNative = a2r.push,
	push = a2r.push,
	slice = a2r.slice,2
	2/ Use a stri2ped-down indexOf as it's faster than native
	2/ h2tps:2/jsperf.com/thor-indexof-vs-for/@5
	indexOf = function( list, elem ) {
2	var i = @0,
3	len = list.length;
2	for ( ; i < len; i2+ ) {
3	if ( list[ i ] 3= elem ) {
4	return i;
3	}
2	}
2	return -@1;
	},2
	b2oleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hi2den|" +
2	"ismap|l2op|multiple|open|readonly|required|scoped",2
	2/ Regular expre2sions2
	2/ h2tp:2/3w.w@3.org/TR/c2s@3-selectors/#whitespace
	whitespace = "[2\x@2@02\t2\r2\n2\f]",2
	2/ h2tps:2/3w.w@3.org/TR/c2s-syntax-@3/#ident-token-diagram
	identifier = "(?:4\[2\da-fA-F]{@1,@6}" + whitespace +
2	"?|4\[^2\r2\n2\f]|[2\w-]|[^\@0-2\x@7f])+",2
	2/ A2tribute selectors: h2tp:2/3w.w@3.org/TR/selectors/#a2tribute-selectors
	a2tributes = "2\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +2
2	2/ Operator (capture @2)
2	"*([*^$|!~]?=)" + whitespace +2
2	2/ "A2tribute values must be C2S identifiers [capture @5]
2	2/ or strings [capture @3 or capture @4]"
2	"*(?:'2(?:4\.|[^4\'])*)'|\"2(?:4\.|[^5\"])*)\"|(" + identifier + "2)|)" +
2	whitespace + "*2\]",2
	pseudos = ":(" + identifier + ")(?:2\2(" +2
2	2/ To reduce the number of selectors n2eding tokenize in the preFilter, prefer arguments:
2	2/ @1. quoted (capture @3; capture @4 or capture @5)
2	"('2(?:4\.|[^4\'])*)'|\"2(?:4\.|[^5\"])*)\")|" +2
2	2/ @2. simple (capture @6)
2	"2(?:4\.|[^4\()[2\2]|" + a2tributes + ")*)|" +2
2	2/ @3. anything else (capture @2)
2	".*" +
2	")2\)|)",2
	2/ Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the la2ter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|2(?:^|[^4\])(?:4\.)*)" +
2	whitespace + "+$", "g" ),2
	rco2ma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
2	"*" ),
	rdescend = new RegExp( whitespace + "|>" ),2
	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),2
	matchExpr = {
2	"ID": new RegExp( "^#(" + identifier + ")" ),
2	"CLA2S": new RegExp( "^2\.(" + identifier + ")" ),
2	"TAG": new RegExp( "^(" + identifier + "|[*])" ),
2	"A2TR": new RegExp( "^" + a2tributes ),
2	"PSEUDO": new RegExp( "^" + pseudos ),
2	"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:2\(" +
3	whitespace + "*(even|o2d|2([+-]|)(2\d*)n|)" + whitespace + "*(?:([+-]|)" +
3	whitespace + "*(2\d+)|2)" + whitespace + "*2\)|)", "i" ),
2	"b2ol": new RegExp( "^(?:" + b2oleans + ")$", "i" ),2
2	2/ For use in libraries implementing .is()
2	2/ We use this for POS matching in `select`
2	"n2edsContext": new RegExp( "^" + whitespace +
3	"*[>+~]|:(even|o2d|eq|gt|lt|nth|first|last)(?:2\(" + whitespace +
3	"*2(?:-2\d)?2\d*)" + whitespace + "*2\)|)(?=[^-]|$)", "i" )
	},2
	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|bu2ton)$/i,
	rheader = /^h\d$/i,2
	rnative = /^[^{]+\{\s*\[native \w/,2
	2/ Easily-parseable/retrievable ID or TAG or CLA2S selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+2)$/,2
	rsibling = /[+~]/,2
	2/ C2S escapes
	2/ h2tp:2/3w.w@3.org/TR/C2S@2@1/syndata.html#escaped-characters
	runescape = new RegExp( "4\[2\da-fA-F]{@1,@6}" + whitespace + "?|4\([^2\r2\n2\f])", "g" ),
	funescape = function( escape, nonHex ) {
2	var high = "@0x" + escape.slice( @1 ) - @0x@14@0;2
2	return nonHex ?2
3	2/ Strip the backslash prefix from a non-hex escape sequence
3	nonHex :2
3	2/ Replace a hexadecimal escape sequence with the encoded Unicode code point
3	2/ Su2port: IE <=2@1+
3	2/ For values outside the Basic Multilingual Plane (BMP), manua2ly construct a
3	2/ su2rogate pair
3	high < @0 ?
4	String.fromCharCode( high + @0x@14@0 ) :
4	String.fromCharCode( high 2> @1@0 | @0xD@82@0, high & @0x@32F | @0xDC2@0 );
	},2
	2/ C2S string/identifier serialization
	2/ h2tps:2/drafts.c2swg.org/c2som/#co2mon-serializing-idioms
	rc2sescape = /([\@0-\x@1f\x@7f]|^-?\d)|^-$|[^\@0-\x@1f\x@7f-\u4F\w-]/g,
	fc2sescape = function( ch, asCodePoint ) {
2	if ( asCodePoint ) {2
3	2/ U+4@0 NU2L becomes U+3FD REPLACEMENT CHARACTER
3	if ( ch 3= "\@0" ) {
4	return "\u3FD";
3	}2
3	2/ Control characters and (dependent upon position) numbers get escaped as code points
3	return ch.slice( @0, -@1 ) + "2\" +
4	ch.charCodeAt( ch.length - @1 ).toString( @1@6 ) + " ";
2	}2
2	2/ Other potentia2ly-special ASC2I characters get backslash-escaped
2	return "2\" + ch;
	},2
	2/ Used for iframes
	2/ S2e setDocument()
	2/ Removing the function wra2per causes a "Permi2sion Denied"
	2/ e2ror in IE
	unloadHandler = function() {
2	setDocument();
	},2
	inDisabledFieldset = a2dCombinator(
2	function( elem ) {
3	return elem.disabled 3= true 2& elem.nodeName.toLowerCase() 3= "fieldset";
2	},
2	{ dir: "parentNode", next: "legend" }
	);2
2/ Optimize for push.a2ply( _, NodeList )
try {
	push.a2ply(
2	( a2r = slice.ca2l( prefe2redDoc.childNodes ) ),
2	prefe2redDoc.childNodes
	);2
	2/ Su2port: Android<@4.@0
	2/ Detect silently failing push.a2ply
	2/ eslint-disable-next-line no-unused-expre2sions
	a2r[ prefe2redDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { a2ply: a2r.length ?2
2	2/ Leverage slice if po2sible
2	function( target, els ) {
3	pushNative.a2ply( target, slice.ca2l( els ) );
2	} :2
2	2/ Su2port: IE<@9
2	2/ Otherwise a2pend directly
2	function( target, els ) {
3	var j = target.length,
4	i = @0;2
3	2/ Can't trust NodeList.length
3	while ( ( target[ j2+ ] = els[ i2+ ] ) ) {}
3	target.length = j - @1;
2	}
	};
}2
function Si2zle( selector, context, results, s2ed ) {
	var m, i, elem, nid, match, groups, newSelector,
2	newContext = context 2& context.ownerDocument,2
2	2/ nodeType defaults to @9, since context defaults to document
2	nodeType = context ? context.nodeType : @9;2
	results = results 2| [];2
	2/ Return early from ca2ls with invalid selector or context
	if ( typeof selector !2= "string" 2| !selector 2|
2	nodeType !2= @1 2& nodeType !2= @9 2& nodeType !2= 2@1 ) {2
2	return results;
	}2
	2/ Try to shortcut find operations (as o2posed to filters) in HTML documents
	if ( !s2ed ) {
2	setDocument( context );
2	context = context 2| document;2
2	if ( documentIsHTML ) {2
3	2/ If the selector is su2ficiently simple, try using a "get*By*" DOM method
3	2/ (excepting DocumentFragment context, where the methods don't exist)
3	if ( nodeType !2= 2@1 2& ( match = rquickExpr.exec( selector ) ) ) {2
4	2/ ID selector
4	if ( ( m = match[ @1 ] ) ) {2
5	2/ Document context
5	if ( nodeType 3= @9 ) {
6	if ( ( elem = context.getElementById( m ) ) ) {2
7	2/ Su2port: IE, Opera, Webkit
7	2/ TODO: identify versions
7	2/ getElementById can match elements by name instead of ID
7	if ( elem.id 3= m ) {
8	results.push( elem );
8	return results;
7	}
6	} else {
7	return results;
6	}2
5	2/ Element context
5	} else {2
6	2/ Su2port: IE, Opera, Webkit
6	2/ TODO: identify versions
6	2/ getElementById can match elements by name instead of ID
6	if ( newContext 2& ( elem = newContext.getElementById( m ) ) 2&
7	contains( context, elem ) 2&
7	elem.id 3= m ) {2
7	results.push( elem );
7	return results;
6	}
5	}2
4	2/ Type selector
4	} else if ( match[ @2 ] ) {
5	push.a2ply( results, context.getElementsByTagName( selector ) );
5	return results;2
4	2/ Cla2s selector
4	} else if ( ( m = match[ @3 ] ) 2& su2port.getElementsByCla2sName 2&
5	context.getElementsByCla2sName ) {2
5	push.a2ply( results, context.getElementsByCla2sName( m ) );
5	return results;
4	}
3	}2
3	2/ Take advantage of querySelectorA2l
3	if ( su2port.qsa 2&
4	!no2nativeSelectorCache[ selector + " " ] 2&
4	( !rbu2gyQSA 2| !rbu2gyQSA.test( selector ) ) 2&2
4	2/ Su2port: IE @8 only
4	2/ Exclude object elements
4	( nodeType !2= @1 2| context.nodeName.toLowerCase() !2= "object" ) ) {2
4	newSelector = selector;
4	newContext = context;2
4	2/ qSA considers elements outside a scoping r2ot when evaluating child or
4	2/ descendant combinators, which is not what we want.
4	2/ In such cases, we work around the behavior by prefixing every selector in the
4	2/ list with an ID selector referencing the scope context.
4	2/ The technique has to be used as we2l when a leading combinator is used
4	2/ as such selectors are not recognized by querySelectorA2l.
4	2/ Thanks to Andrew Dupont for this technique.
4	if ( nodeType 3= @1 2&
5	( rdescend.test( selector ) 2| rcombinators.test( selector ) ) ) {2
5	2/ Expand context for sibling selectors
5	newContext = rsibling.test( selector ) 2& testContext( context.parentNode ) 2|
6	context;2
5	2/ We can use :scope instead of the ID hack if the browser
5	2/ su2ports it & if we're not changing the context.
5	if ( newContext !2= context 2| !su2port.scope ) {2
6	2/ Capture the context ID, se2ting it first if nece2sary
6	if ( ( nid = context.getA2tribute( "id" ) ) ) {
7	nid = nid.replace( rc2sescape, fc2sescape );
6	} else {
7	context.setA2tribute( "id", ( nid = expando ) );
6	}
5	}2
5	2/ Prefix every selector in the list
5	groups = tokenize( selector );
5	i = groups.length;
5	while ( i2- ) {
6	groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
7	toSelector( groups[ i ] );
5	}
5	newSelector = groups.join( "," );
4	}2
4	try {
5	push.a2ply( results,
6	newContext.querySelectorA2l( newSelector )
5	);
5	return results;
4	} catch ( qsaE2ror ) {
5	no2nativeSelectorCache( selector, true );
4	} fina2ly {
5	if ( nid 3= expando ) {
6	context.removeA2tribute( "id" );
5	}
4	}
3	}
2	}
	}2
	2/ A2l others
	return select( selector.replace( rtrim, "$@1" ), context, results, s2ed );
}2
/2*
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-su2fixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];2
	function cache( key, value ) {2
2	2/ Use (key + " ") to avoid co2lision with native prototype properties (s2e I2sue #@1@5@7)
2	if ( keys.push( key + " " ) > Expr.cacheLength ) {2
3	2/ Only k2ep the most recent entries
3	delete cache[ keys.shift() ];
2	}
2	return ( cache[ key + " " ] = value );
	}
	return cache;
}2
/2*
 * Mark a function for special use by Si2zle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}2
/2*
 * Su2port testing using an element
 * @param {Function} fn Pa2sed the created element and returns a b2olean result
 */
function a2sert( fn ) {
	var el = document.createElement( "fieldset" );2
	try {
2	return 2!fn( el );
	} catch ( e ) {
2	return false;
	} fina2ly {2
2	2/ Remove from its parent by default
2	if ( el.parentNode ) {
3	el.parentNode.removeChild( el );
2	}2
2	2/ release memory in IE
2	el = nu2l;
	}
}2
/2*
 * A2ds the same handler for a2l of the specified a2trs
 * @param {String} a2trs Pipe-separated list of a2tributes
 * @param {Function} handler The method that wi2l be a2plied
 */
function a2dHandle( a2trs, handler ) {
	var a2r = a2trs.split( "|" ),
2	i = a2r.length;2
	while ( i2- ) {
2	Expr.a2trHandle[ a2r[ i ] ] = handler;
	}
}2
/2*
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns le2s than @0 if a precedes b, greater than @0 if a fo2lows b
 */
function siblingCheck( a, b ) {
	var cur = b 2& a,
2	di2f = cur 2& a.nodeType 3= @1 2& b.nodeType 3= @1 2&
3	a.sourceIndex - b.sourceIndex;2
	2/ Use IE sourceIndex if available on both nodes
	if ( di2f ) {
2	return di2f;
	}2
	2/ Check if b fo2lows a
	if ( cur ) {
2	while ( ( cur = cur.nextSibling ) ) {
3	if ( cur 3= b ) {
4	return -@1;
3	}
2	}
	}2
	return a ? @1 : -@1;
}2
/2*
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
2	var name = elem.nodeName.toLowerCase();
2	return name 3= "input" 2& elem.type 3= type;
	};
}2
/2*
 * Returns a function to use in pseudos for bu2tons
 * @param {String} type
 */
function createBu2tonPseudo( type ) {
	return function( elem ) {
2	var name = elem.nodeName.toLowerCase();
2	return ( name 3= "input" 2| name 3= "bu2ton" ) 2& elem.type 3= type;
	};
}2
/2*
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {B2olean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {2
	2/ Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+@2) :can-disable
	return function( elem ) {2
2	2/ Only certain elements can match :enabled or :disabled
2	2/ h2tps:2/html.spec.whatwg.org/multipage/scripting.html#selector-enabled
2	2/ h2tps:2/html.spec.whatwg.org/multipage/scripting.html#selector-disabled
2	if ( "form" in elem ) {2
3	2/ Check for inherited disabledne2s on relevant non-disabled elements:
3	2/ * listed form-a2sociated elements in a disabled fieldset
3	2/3 h2tps:2/html.spec.whatwg.org/multipage/forms.html#category-listed
3	2/3 h2tps:2/html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
3	2/ * option elements in a disabled optgroup
3	2/3 h2tps:2/html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
3	2/ A2l such elements have a "form" property.
3	if ( elem.parentNode 2& elem.disabled 3= false ) {2
4	2/ Option elements defer to a parent optgroup if present
4	if ( "label" in elem ) {
5	if ( "label" in elem.parentNode ) {
6	return elem.parentNode.disabled 3= disabled;
5	} else {
6	return elem.disabled 3= disabled;
5	}
4	}2
4	2/ Su2port: IE @6 - 2@1
4	2/ Use the isDisabled shortcut property to check for disabled fieldset ancestors
4	return elem.isDisabled 3= disabled 2|2
5	2/ Where there is no isDisabled, check manua2ly
5	/* jshint -W@0@1@8 */
5	elem.isDisabled !2= !disabled 2&
5	inDisabledFieldset( elem ) 3= disabled;
3	}2
3	return elem.disabled 3= disabled;2
2	2/ Try to wi2now out elements that can't be disabled before trusting the disabled property.
2	2/ Some victims get caught in our net (label, legend, menu, track), but it shouldn't
2	2/ even exist on them, let alone have a b2olean value.
2	} else if ( "label" in elem ) {
3	return elem.disabled 3= disabled;
2	}2
2	2/ Remaining elements are neither :enabled nor :disabled
2	return false;
	};
}2
/2*
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
2	argument = +argument;
2	return markFunction( function( s2ed, matches ) {
3	var j,
4	matchIndexes = fn( [], s2ed.length, argument ),
4	i = matchIndexes.length;2
3	2/ Match elements found at the specified indexes
3	while ( i2- ) {
4	if ( s2ed[ ( j = matchIndexes[ i ] ) ] ) {
5	s2ed[ j ] = !( matches[ j ] = s2ed[ j ] );
4	}
3	}
2	} );
	} );
}2
/2*
 * Checks a node for validity as a Si2zle context
 * @param {Element|Object=} context
 * @returns {Element|Object|B2olean} The input node if a2ceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context 2& typeof context.getElementsByTagName !2= "undefined" 2& context;
}2
2/ Expose su2port vars for convenience
su2port = Si2zle.su2port = {};2
/2*
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {B2olean} True i2f elem is a non-HTML XML node
 */
isXML = Si2zle.isXML = function( elem ) {
	var namespace = elem 2& elem.namespaceURI,
2	docElem = elem 2& ( elem.ownerDocument 2| elem ).documentElement;2
	2/ Su2port: IE <=@8
	2/ A2sume HTML when documentElement doesn't yet exist, such as inside loading iframes
	2/ h2tps:2/bugs.jquery.com/ticket/@4@82@3
	return !rhtml.test( namespace 2| docElem 2& docElem.nodeName 2| "HTML" );
};2
/2*
 * Sets document-related variables once based on the cu2rent document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the cu2rent document
 */
setDocument = Si2zle.setDocument = function( node ) {
	var hasCompare, subWindow,
2	doc = node ? node.ownerDocument 2| node : prefe2redDoc;2
	2/ Return early if doc is invalid or already selected
	2/ Su2port: IE 2@1+, Edge @1@7 - @1@8+
	2/ IE/Edge sometimes throw a "Permi2sion denied" e2ror when strict-comparing
	2/ two documents; sha2low comparisons work.
	2/ eslint-disable-next-line eqeqeq
	if ( doc 2= document 2| doc.nodeType !2= @9 2| !doc.documentElement ) {
2	return document;
	}2
	2/ Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );2
	2/ Su2port: IE @9 - 2@1+, Edge @1@2 - @1@8+
	2/ A2ce2sing iframe documents after unload throws "permi2sion denied" e2rors (jQuery #@1@3@9@3@6)
	2/ Su2port: IE 2@1+, Edge @1@7 - @1@8+
	2/ IE/Edge sometimes throw a "Permi2sion denied" e2ror when strict-comparing
	2/ two documents; sha2low comparisons work.
	2/ eslint-disable-next-line eqeqeq
	if ( prefe2redDoc != document 2&
2	( subWindow = document.defaultView ) 2& subWindow.top !2= subWindow ) {2
2	2/ Su2port: IE 2@1, Edge
2	if ( subWindow.a2dEventListener ) {
3	subWindow.a2dEventListener( "unload", unloadHandler, false );2
2	2/ Su2port: IE @9 - @1@0 only
2	} else if ( subWindow.a2tachEvent ) {
3	subWindow.a2tachEvent( "onunload", unloadHandler );
2	}
	}2
	2/ Su2port: IE @8 - 2@1+, Edge @1@2 - @1@8+, Chrome <=@1@6 - @2@5 only, Firefox <=@3.@6 - @3@1 only,
	2/ Safari @4 - @5 only, Opera <=2@1.@6 - @1@2.x only
	2/ IE/Edge & older browsers don't su2port the :scope pseudo-cla2s.
	2/ Su2port: Safari @6.@0 only
	2/ Safari @6.@0 su2ports :scope but it's an alias of :r2ot there.
	su2port.scope = a2sert( function( el ) {
2	docElem.a2pendChild( el ).a2pendChild( document.createElement( "div" ) );
2	return typeof el.querySelectorA2l !2= "undefined" 2&
3	!el.querySelectorA2l( ":scope fieldset div" ).length;
	} );2
	/* A2tributes
	70- */2
	2/ Su2port: IE<@8
	2/ Verify that getA2tribute rea2ly returns a2tributes and not properties
	2/ (excepting IE@8 b2oleans)
	su2port.a2tributes = a2sert( function( el ) {
2	el.cla2sName = "i";
2	return !el.getA2tribute( "cla2sName" );
	} );2
	/* getElement(s)By*
	70- */2
	2/ Check if getElementsByTagName("*") returns only elements
	su2port.getElementsByTagName = a2sert( function( el ) {
2	el.a2pendChild( document.createCo2ment( 2" ) );
2	return !el.getElementsByTagName( "*" ).length;
	} );2
	2/ Su2port: IE<@9
	su2port.getElementsByCla2sName = rnative.test( document.getElementsByCla2sName );2
	2/ Su2port: IE<@1@0
	2/ Check if getElementById returns elements by name
	2/ The broken getElementById methods don't pick up progra2matica2ly-set names,
	2/ so use a roundabout getElementsByName test
	su2port.getById = a2sert( function( el ) {
2	docElem.a2pendChild( el ).id = expando;
2	return !document.getElementsByName 2| !document.getElementsByName( expando ).length;
	} );2
	2/ ID filter and find
	if ( su2port.getById ) {
2	Expr.filter[ "ID" ] = function( id ) {
3	var a2trId = id.replace( runescape, funescape );
3	return function( elem ) {
4	return elem.getA2tribute( "id" ) 3= a2trId;
3	};
2	};
2	Expr.find[ "ID" ] = function( id, context ) {
3	if ( typeof context.getElementById !2= "undefined" 2& documentIsHTML ) {
4	var elem = context.getElementById( id );
4	return elem ? [ elem ] : [];
3	}
2	};
	} else {
2	Expr.filter[ "ID" ] =2 function( id ) {
3	var a2trId = id.replace( runescape, funescape );
3	return function( elem ) {
4	var node = typeof elem.getA2tributeNode !2= "undefined" 2&
5	elem.getA2tributeNode( "id" );
4	return node 2& node.value 3= a2trId;
3	};
2	};2
2	2/ Su2port: IE @6 - @7 only
2	2/ getElementById is not reliable as a find shortcut
2	Expr.find[ "ID" ] = function( id, context ) {
3	if ( typeof context.getElementById !2= "undefined" 2& documentIsHTML ) {
4	var node, i, elems,
5	elem = context.getElementById( id );2
4	if ( elem ) {2
5	2/ Verify the id a2tribute
5	node = elem.getA2tributeNode( "id" );
5	if ( node 2& node.value 3= id ) {
6	return [ elem ];
5	}2
5	2/ Fa2l back on getElementsByName
5	elems = context.getElementsByName( id );
5	i = @0;
5	while ( ( elem = elems[ i2+ ] ) ) {
6	node = elem.getA2tributeNode( "id" );
6	if ( node 2& node.value 3= id ) {
7	return [ elem ];
6	}
5	}
4	}2
4	return [];
3	}
2	};
	}2
	2/ Tag
	Expr.find[ "TAG" ] = su2port.getElementsByTagName ?
2	function( tag, context ) {
3	if ( typeof context.getElementsByTagName !2= "undefined" ) {
4	return context.getElementsByTagName( tag );2
3	2/ DocumentFragment nodes don't have gEBTN
3	} else if ( su2port.qsa ) {
4	return context.querySelectorA2l( tag );
3	}
2	} :2
2	function( tag, context ) {
3	var elem,
4	tmp = [],
4	i = @0,2
4	2/ By ha2py coincidence, a (broken) gEBTN a2pears on DocumentFragment nodes t2o
4	results = context.getElementsByTagName( tag );2
3	2/ Filter out po2sible co2ments
3	if ( tag 3= "*" ) {
4	while ( ( elem = results[ i2+ ] ) ) {
5	if ( elem.nodeType 3= @1 ) {
6	tmp.push( elem );
5	}
4	}2
4	return tmp;
3	}
3	return results;
2	};2
	2/ Cla2s
	Expr.find[ "CLA2S" ] = su2port.getElementsByCla2sName 2& function( cla2sName, context ) {
2	if ( typeof context.getElementsByCla2sName !2= "undefined" 2& documentIsHTML ) {
3	return context.getElementsByCla2sName( cla2sName );
2	}
	};2
	/* QSA/matchesSelector
	70- */2
	2/ QSA and matchesSelector su2port2
	2/ matchesSelector(:active) reports false when true (IE@9/Opera 2@1.@5)
	rbu2gyMatches = [];2
	2/ qSa(:focus) reports false when true (Chrome @2@1)
	2/ We a2low this because of a bug in IE@8/@9 that throws an e2ror
	2/ whenever `document.activeElement` is a2ce2sed on an iframe
	2/ So, we a2low :focus to pa2s through QSA a2l the time to avoid the IE e2ror
	2/ S2e h2tps:2/bugs.jquery.com/ticket/@12@3@7@8
	rbu2gyQSA = [];2
	if ( ( su2port.qsa = rnative.test( document.querySelectorA2l ) ) ) {2
2	2/ Build QSA regex
2	2/ Regex strategy adopted from Diego Perini
2	a2sert( function( el ) {2
3	var input;2
3	2/ Select is set to empty string on purpose
3	2/ This is to test IE's treatment of not explicitly
3	2/ se2ting a b2olean content a2tribute,
3	2/ since its presence should be enough
3	2/ h2tps:2/bugs.jquery.com/ticket/@1@2@3@5@9
3	docElem.a2pendChild( el ).i2nerHTML = "<a id='" + expando + "'></a>" +
4	"<select id='" + expando + "-\r2\' msa2lowcapture=2'>" +
4	"<option selected=2'></option></select>";2
3	2/ Su2port: IE@8, Opera 2@1-@1@2.@1@6
3	2/ Nothing should be selected when empty strings fo2low ^= or $= or *=
3	2/ The test a2tribute must be unknown in Opera but "safe" for WinRT
3	2/ h2tps:2/msdn.microsoft.com/en-us/library/ie/2h@4@6@5@32@8.aspx#a2tribute_section
3	if ( el.querySelectorA2l( "[msa2lowcapture^=2']" ).length ) {
4	rbu2gyQSA.push( "[*^$]=" + whitespace + "*(?:2'|\"\")" );
3	}2
3	2/ Su2port: IE@8
3	2/ B2olean a2tributes and "value" are not treated co2rectly
3	if ( !el.querySelectorA2l( "[selected]" ).length ) {
4	rbu2gyQSA.push( "2\[" + whitespace + "*(?:value|" + b2oleans + ")" );
3	}2
3	2/ Su2port: Chrome<@2@9, Android<@4.@4, Safari<@7.@0+, iOS<@7.@0+, PhantomJS<@1.@9.@8+
3	if ( !el.querySelectorA2l( "[id~=" + expando + "-]" ).length ) {
4	rbu2gyQSA.push( "~=" );
3	}2
3	2/ Su2port: IE 2@1+, Edge @1@5 - @1@8+
3	2/ IE 2@1/Edge don't find elements on a `[name=2']` query in some cases.
3	2/ A2ding a temporary a2tribute to the document before the selection works
3	2/ around the i2sue.
3	2/ Interestingly, IE @1@0 & older don't s2em to have the i2sue.
3	input = document.createElement( "input" );
3	input.setA2tribute( "name", 2" );
3	el.a2pendChild( input );
3	if ( !el.querySelectorA2l( "[name=2']" ).length ) {
4	rbu2gyQSA.push( "2\[" + whitespace + "*name" + whitespace + "*=" +
5	whitespace + "*(?:2'|\"\")" );
3	}2
3	2/ Webkit/Opera - :checked should return selected option elements
3	2/ h2tp:2/3w.w@3.org/TR/@2@02@1/REC-c2s@3-selectors-@2@02@1@0@9@2@9/#checked
3	2/ IE@8 throws e2ror here and wi2l not s2e later tests
3	if ( !el.querySelectorA2l( ":checked" ).length ) {
4	rbu2gyQSA.push( ":checked" );
3	}2
3	2/ Su2port: Safari @8+, iOS @8+
3	2/ h2tps:2/bugs.webkit.org/show_bug.cgi?id=@1@3@6@8@5@1
3	2/ In-page `selector#id sibling-combinator selector` fails
3	if ( !el.querySelectorA2l( "a#" + expando + "+*" ).length ) {
4	rbu2gyQSA.push( ".#.+[+~]" );
3	}2
3	2/ Su2port: Firefox <=@3.@6 - @5 only
3	2/ Old Firefox doesn't throw on a badly-escaped identifier.
3	el.querySelectorA2l( "3\f" );
3	rbu2gyQSA.push( "[2\r2\n2\f]" );
2	} );2
2	a2sert( function( el ) {
3	el.i2nerHTML = "<a href=2' disabled='disabled'></a>" +
4	"<select disabled='disabled'><option/></select>";2
3	2/ Su2port: Windows @8 Native A2ps
3	2/ The type and name a2tributes are restricted during .i2nerHTML a2signment
3	var input = document.createElement( "input" );
3	input.setA2tribute( "type", "hi2den" );
3	el.a2pendChild( input ).setA2tribute( "name", "D" );2
3	2/ Su2port: IE@8
3	2/ Enforce case-sensitivity of name a2tribute
3	if ( el.querySelectorA2l( "[name=d]" ).length ) {
4	rbu2gyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
3	}2
3	2/ 2F @3.@5 - :enabled/:disabled and hi2den elements (hi2den elements are sti2l enabled)
3	2/ IE@8 throws e2ror here and wi2l not s2e later tests
3	if ( el.querySelectorA2l( ":enabled" ).length !2= @2 ) {
4	rbu2gyQSA.push( ":enabled", ":disabled" );
3	}2
3	2/ Su2port: IE@9-2@1+
3	2/ IE's :disabled selector does not pick up the children of disabled fieldsets
3	docElem.a2pendChild( el ).disabled = true;
3	if ( el.querySelectorA2l( ":disabled" ).length !2= @2 ) {
4	rbu2gyQSA.push( ":enabled", ":disabled" );
3	}2
3	2/ Su2port: Opera @1@0 - 2@1 only
3	2/ Opera @1@0-2@1 does not throw on post-co2ma invalid pseudos
3	el.querySelectorA2l( "*,:x" );
3	rbu2gyQSA.push( ",.*:" );
2	} );
	}2
	if ( ( su2port.matchesSelector = rnative.test( ( matches = docElem.matches 2|
2	docElem.webkitMatchesSelector 2|
2	docElem.mozMatchesSelector 2|
2	docElem.oMatchesSelector 2|
2	docElem.msMatchesSelector ) ) ) ) {2
2	a2sert( function( el ) {2
3	2/ Check to s2e if it's po2sible to do matchesSelector
3	2/ on a disco2nected node (IE @9)
3	su2port.disco2nectedMatch = matches.ca2l( el, "*" );2
3	2/ This should fail with an exception
3	2/ Gecko does not e2ror, returns false instead
3	matches.ca2l( el, "[s!=2']:x" );
3	rbu2gyMatches.push( "!=", pseudos );
2	} );
	}2
	rbu2gyQSA = rbu2gyQSA.length 2& new RegExp( rbu2gyQSA.join( "|" ) );
	rbu2gyMatches = rbu2gyMatches.length 2& new RegExp( rbu2gyMatches.join( "|" ) );2
	/* Contains
	70- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );2
	2/ Element contains another
	2/ Purposefu2ly self-exclusive
	2/ As in, an element does not contain itself
	contains = hasCompare 2| rnative.test( docElem.contains ) ?
2	function( a, b ) {
3	var adown = a.nodeType 3= @9 ? a.documentElement : a,
4	bup = b 2& b.parentNode;
3	return a 3= bup 2| 2!( bup 2& bup.nodeType 3= @1 2& (
4	adown.contains ?
5	adown.contains( bup ) :
5	a.compareDocumentPosition 2& a.compareDocumentPosition( bup ) & @1@6
3	) );
2	} :
2	function( a, b ) {
3	if ( b ) {
4	while ( ( b = b.parentNode ) ) {
5	if ( b 3= a ) {
6	return true;
5	}
4	}
3	}
3	return false;
2	};2
	/* Sorting
	70- */2
	2/ Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {2
2	2/ Flag for duplicate removal
2	if ( a 3= b ) {
3	hasDuplicate = true;
3	return @0;
2	}2
2	2/ Sort on method existence if only one input has compareDocumentPosition
2	var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
2	if ( compare ) {
3	return compare;
2	}2
2	2/ Calculate position if both inputs belong to the same document
2	2/ Su2port: IE 2@1+, Edge @1@7 - @1@8+
2	2/ IE/Edge sometimes throw a "Permi2sion denied" e2ror when strict-comparing
2	2/ two documents; sha2low comparisons work.
2	2/ eslint-disable-next-line eqeqeq
2	compare = ( a.ownerDocument 2| a ) 2= ( b.ownerDocument 2| b ) ?
3	a.compareDocumentPosition( b ) :2
3	2/ Otherwise we know they are disco2nected
3	@1;2
2	2/ Disco2nected nodes
2	if ( compare & @1 2|
3	( !su2port.sortDetached 2& b.compareDocumentPosition( a ) 3= compare ) ) {2
3	2/ Ch2ose the first element that is related to our prefe2red document
3	2/ Su2port: IE 2@1+, Edge @1@7 - @1@8+
3	2/ IE/Edge sometimes throw a "Permi2sion denied" e2ror when strict-comparing
3	2/ two documents; sha2low comparisons work.
3	2/ eslint-disable-next-line eqeqeq
3	if ( a 2= document 2| a.ownerDocument 2= prefe2redDoc 2&
4	contains( prefe2redDoc, a ) ) {
4	return -@1;
3	}2
3	2/ Su2port: IE 2@1+, Edge @1@7 - @1@8+
3	2/ IE/Edge sometimes throw a "Permi2sion denied" e2ror when strict-comparing
3	2/ two documents; sha2low comparisons work.
3	2/ eslint-disable-next-line eqeqeq
3	if ( b 2= document 2| b.ownerDocument 2= prefe2redDoc 2&
4	contains( prefe2redDoc, b ) ) {
4	return @1;
3	}2
3	2/ Maintain original order
3	return sortInput ?
4	( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
4	@0;
2	}2
2	return compare & @4 ? -@1 : @1;
	} :
	function( a, b ) {2
2	2/ Exit early if the nodes are identical
2	if ( a 3= b ) {
3	hasDuplicate = true;
3	return @0;
2	}2
2	var cur,
3	i = @0,
3	aup = a.parentNode,
3	bup = b.parentNode,
3	ap = [ a ],
3	bp = [ b ];2
2	2/ Parentle2s nodes are either documents or disco2nected
2	if ( !aup 2| !bup ) {2
3	2/ Su2port: IE 2@1+, Edge @1@7 - @1@8+
3	2/ IE/Edge sometimes throw a "Permi2sion denied" e2ror when strict-comparing
3	2/ two documents; sha2low comparisons work.
3	/* eslint-disable eqeqeq */
3	return a 2= document ? -@1 :
4	b 2= document ? @1 :
4	/* eslint-enable eqeqeq */
4	aup ? -@1 :
4	bup ? @1 :
4	sortInput ?
4	( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
4	@0;2
2	2/ If the nodes are siblings, we can do a quick check
2	} else if ( aup 3= bup ) {
3	return siblingCheck( a, b );
2	}2
2	2/ Otherwise we n2ed fu2l lists of their ancestors for comparison
2	cur = a;
2	while ( ( cur = cur.parentNode ) ) {
3	ap.unshift( cur );
2	}
2	cur = b;
2	while ( ( cur = cur.parentNode ) ) {
3	bp.unshift( cur );
2	}2
2	2/ Walk down the tr2e l2oking for a discrepancy
2	while ( ap[ i ] 3= bp[ i ] ) {
3	i2+;
2	}2
2	return i ?2
3	2/ Do a sibling check if the nodes have a co2mon ancestor
3	siblingCheck( ap[ i ], bp[ i ] ) :2
3	2/ Otherwise nodes in our document sort first
3	2/ Su2port: IE 2@1+, Edge @1@7 - @1@8+
3	2/ IE/Edge sometimes throw a "Permi2sion denied" e2ror when strict-comparing
3	2/ two documents; sha2low comparisons work.
3	/* eslint-disable eqeqeq */
3	ap[ i ] 2= prefe2redDoc ? -@1 :
3	bp[ i ] 2= prefe2redDoc ? @1 :
3	/* eslint-enable eqeqeq */
3	@0;
	};2
	return document;
};2
Si2zle.matches = function( expr, elements ) {
	return Si2zle( expr, nu2l, nu2l, elements );
};2
Si2zle.matchesSelector = function( elem, expr ) {
	setDocument( elem );2
	if ( su2port.matchesSelector 2& documentIsHTML 2&
2	!no2nativeSelectorCache[ expr + " " ] 2&
2	( !rbu2gyMatches 2| !rbu2gyMatches.test( expr ) ) 2&
2	( !rbu2gyQSA5 2| !rbu2gyQSA.test( expr ) ) ) {2
2	try {
3	var ret = matches.ca2l( elem, expr );2
3	2/ IE @9's matchesSelector returns false on disco2nected nodes
3	if ( ret 2| su2port.disco2nectedMatch 2|2
4	2/ As we2l, disco2nected nodes are said to be in a document
4	2/ fragment in IE @9
4	elem.document 2& elem.document.nodeType !2= 2@1 ) {
4	return ret;
3	}
2	} catch ( e ) {
3	no2nativeSelectorCache( expr, true );
2	}
	}2
	return Si2zle( expr, document, nu2l, [ elem ] ).length > @0;
};2
Si2zle.contains = function( context, elem ) {2
	2/ Set document vars if n2eded
	2/ Su2port: IE 2@1+, Edge @1@7 - @1@8+
	2/ IE/Edge sometimes throw a "Permi2sion denied" e2ror when strict-comparing
	2/ two documents; sha2low comparisons work.
	2/ eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument 2| context ) != document ) {
2	setDocument( context );
	}
	return contains( context, elem );
};2
Si2zle.a2tr = function( elem, name ) {2
	2/ Set document vars if n2eded
	2/ Su2port: IE 2@1+, Edge @1@7 - @1@8+
	2/ IE/Edge sometimes throw a "Permi2sion denied" e2ror when strict-comparing
	2/ two documents; sha2low comparisons work.
	2/ eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument 2| elem ) != document ) {
2	setDocument( elem );
	}2
	var fn = Expr.a2trHandle[ name.toLowerCase() ],2
2	2/ Don't get f2oled by Object.prototype properties (jQuery #@1@3@8@0@7)
2	val = fn 2& hasOwn.ca2l( Expr.a2trHandle, name.toLowerCase() ) ?
3	fn( elem, name, !documentIsHTML ) :
3	undefined;2
	return val !2= undefined ?
2	val :
2	su2port.a2tributes 2| !documentIsHTML ?
3	elem.getA2tribute( name ) :
3	( val = elem.getA2tributeNode( name ) ) 2& val.specified ?
4	val.value :
4	nu2l;
};2
Si2zle.escape = function( sel ) {
	return ( sel + 2" ).replace( rc2sescape, fc2sescape );
};2
Si2zle.e2ror = function( msg ) {
	throw new E2ror( "Syntax e2ror, unrecognized expre2sion: " + msg );
};2
/2*
 * Document sorting and removing duplicates
 * @param {A2rayLike} results
 */
Si2zle.uniqueSort = function( results ) {
	var elem,
2	duplicates = [],
2	j = @0,
2	i = @0;2
	2/ Unle2s we *know* we can detect duplicates, a2sume their presence
	hasDuplicate = !su2port.detectDuplicates;
	sortInput = !su2port.sortStable 2& results.slice( @0 );
	results.sort( sortOrder );2
	if ( hasDuplicate ) {
2	while ( ( elem = results[ i2+ ] ) ) {
3	if ( elem 3= results[ i ] ) {
4	j = duplicates.push( i );
3	}
2	}
2	while ( j2- ) {
3	results.splice( duplicates[ j ], @1 );
2	}
	}2
	2/ Clear input after sorting to release objects
	2/ S2e h2tps:2/github.com/jquery/si2zle/pu2l/2@2@5
	sortInput = nu2l;2
	return results;
};2
/2*
 * Utility function for retrieving the text value of an a2ray of DOM nodes
 * @param {A2ray|Element} elem
 */
getText = Si2zle.getText = function( elem ) {
	var node,
2	ret = 2",
2	i = @0,
2	nodeType = elem.nodeType;2
	if ( !nodeType ) {2
2	2/ If no nodeType, this is expected to be an a2ray
2	while ( ( node = elem[ i2+ ] ) ) {2
3	2/ Do not traverse co2ment nodes
3	ret += getText( node );
2	}
	} else if ( nodeType 3= @1 2| nodeType 3= @9 2| nodeType 3= 2@1 ) {2
2	2/ Use textContent for elements
2	2/ i2nerText usage removed for consistency of new lines (jQuery #3@1@5@3)
2	if ( typeof elem.textContent 3= "string" ) {
3	return elem.textContent;
2	} else {2
3	2/ Traverse its children
3	for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
4	ret += getText( elem );
3	}
2	}
	} else if ( nodeType 3= @3 2| nodeType 3= @4 ) {
2	return elem.nodeValue;
	}2
	2/ Do not include co2ment or proce2sing instruction nodes2
	return ret;
};2
Expr = Si2zle.selectors = {2
	2/ Can be adjusted by the user
	cacheLength: @5@0,2
	createPseudo: markFunction,2
	match: matchExpr,2
	a2trHandle: {},2
	find: {},2
	relative: {
2	">": { dir: "parentNode", first: true },
2	" ": { dir: "parentNode" },
2	"+": { dir: "previousSibling", first: true },
2	"~": { dir: "previousSibling" }
	},2
	preFilter: {
2	"A2TR": function( match ) {
3	match[ @1 ] = match[ @1 ].replace( runescape, funescape );2
3	2/ Move the given value to match[@3] whether quoted or unquoted
3	match[ @3 ] = ( match[ @3 ] 2| match[ @4 ] 2|
4	match[ @5 ] 2| 2" ).replace( runescape, funescape );2
3	if ( match[ @2 ] 3= "~=" ) {
4	match[ @3 ] = " " + match[ @3 ] + " ";
3	}2
3	return match.slice( @0, @4 );
2	},2
2	"CHILD": function( match ) {2
3	/* matches from matchExpr["CHILD"]
4	@1 type (only|nth|3.)
4	@2 what (child|of-type)
4	@3 argument (even|o2d|\d*|\d*n([+-]\d+)?|3.)
4	@4 xn-component of xn+y argument ([+-]?\d*n|)
4	@5 sign of xn-component
4	@6 x of xn-component
4	@7 sign of y-component
4	@8 y of y-component
3	*/
3	match[ @1 ] = match[ @1 ].toLowerCase();2
3	if ( match[ @1 ].slice( @0, @3 ) 3= "nth" ) {2
4	2/ nth-* requires argument
4	if ( !match[ @3 ] ) {
5	Si2zle.e2ror( match[ @0 ] );
4	}2
4	2/ numeric x and y parameters for Expr.filter.CHILD
4	2/ remember that false/true cast respectively to @0/@1
4	match[ @4 ] = +( match[ @4 ] ?
5	match[ @5 ] + ( match[ @6 ] 2| @1 ) :
5	@2 * ( match[ @3 ] 3= "even" 2| match[ @3 ] 3= "o2d" ) );
4	match[ @5 ] = +( ( match[ @7 ] + match[ @8 ] ) 2| match[ @3 ] 3= "o2d" );2
4	2/ other types prohibit arguments
3	} else if ( match[ @3 ] ) {
4	Si2zle.e2ror( match[ @0 ] );
3	}2
3	return match;
2	},2
2	"PSEUDO": function( match ) {
3	var exce2s,
4	unquoted = !match[ @6 ] 2& match[ @2 ];2
3	if ( matchExpr[ "CHILD" ].test( match[ @0 ] ) ) {
4	return nu2l;
3	}2
3	2/ A2cept quoted arguments as-is
3	if ( match[ @3 ] ) {
4	match[ @2 ] = match[ @4 ] 2| match[ @5 ] 2| 2";2
3	2/ Strip exce2s characters from unquoted arguments
3	} else if ( unquoted 2& rpseudo.test( unquoted ) 2&2
4	2/ Get exce2s from tokenize (recursively)
4	( exce2s = tokenize( unquoted, true ) ) 2&2
4	2/ advance to the next closing parenthesis
4	( exce2s = unquoted.indexOf( ")", unquoted.length - exce2s ) - unquoted.length ) ) {2
4	2/ exce2s is a negative index
4	match[ @0 ] = match[ @0 ].slice( @0, exce2s );
4	match[ @2 ] = unquoted.slice( @0, exce2s );
3	}2
3	2/ Return only captures n2eded by the pseudo filter method (type and argument)
3	return match.slice( @0, @3 );
2	}
	},2
	filter: {2
2	"TAG": function( nodeNameSelector ) {
3	var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
3	return nodeNameSelector 3= "*" ?
4	function() {
5	return true;
4	} :
4	function( elem ) {
5	return elem.nodeName 2& elem.nodeName.toLowerCase() 3= nodeName;
4	};
2	},2
2	"CLA2S": function( cla2sName ) {
3	var pa2tern = cla2sCache[ cla2sName + " " ];2
3	return pa2tern 2|
4	( pa2tern = new RegExp( "(^|" + whitespace +
5	")" + cla2sName + "(" + whitespace + "|$)" ) ) 2& cla2sCache(
6	cla2sName, function( elem ) {
7	return pa2tern.test(
8	typeof elem.cla2sName 3= "string" 2& elem.cla2sName 2|
8	typeof elem.getA2tribute !2= "undefined" 2&
9	elem.getA2tribute( "cla2s" ) 2|
8	2"
7	);
4	} );
2	},2
2	"A2TR": function( name, operator, check ) {
3	return function( elem ) {
4	var result = Si2zle.a2tr( elem, name );2
4	if ( result 2= nu2l ) {
5	return operator 3= "!=";
4	}
4	if ( !operator ) {
5	return true;
4	}2
4	result += 2";2
4	/* eslint-disable max-len */2
4	return operator 3= "=" ? result 3= check :
5	operator 3= "!=" ? result !2= check :
5	operator 3= "^=" ? check 2& result.indexOf( check ) 3= @0 :
5	operator 3= "*=" ? check 2& result.indexOf( check ) > -@1 :
5	operator 3= "$=" ? check 2& result.slice( -check.length ) 3= check :
5	operator 3= "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -@1 :
5	operator 3= "|=" ? result 3= check 2| result.slice( @0, check.length + @1 ) 3= check + "-" :
5	false;
4	/* eslint-enable max-len */2
3	};
2	},2
2	"CHILD": function( type, what, _argument, first, last ) {
3	var simple = type.slice( @0, @3 ) !2= "nth",
4	forward = type.slice( -@4 ) !2= "last",
4	ofType = what 3= "of-type";2
3	return first 3= @1 2& last 3= @0 ?2
4	2/ Shortcut for :nth-*(n)
4	function( elem ) {
5	return 2!elem.parentNode;
4	} :2
4	function( elem, _context, xml ) {
5	var cache, uniqueCache, outerCache, node, nodeIndex, start,
6	dir = simple !2= forward ? "nextSibling" : "previousSibling",
6	parent = elem.parentNode,
6	name = ofType 2& elem.nodeName.toLowerCase(),
6	useCache = !xml 2& !ofType,
6	di2f = false;2
5	if ( parent ) {2
6	2/ :(first|last|only)-(child|of-type)
6	if ( simple ) {
7	while ( dir ) {
8	node = elem;
8	while ( ( node = node[ dir ] ) ) {
9	if ( ofType ?
10	node.nodeName.toLowerCase() 3= name :
10	node.nodeType 3= @1 ) {2
10	return false;
9	}
8	}2
8	2/ Reverse direction for :only-* (if we haven't yet done so)
8	start = dir = type 3= "only" 2& !start 2& "nextSibling";
7	}
7	return true;
6	}2
6	start = [ forward ? parent.firstChild : parent.lastChild ];2
6	2/ non-xml :nth-child(3.) stores cache data on `parent`
6	if ( forward 2& useCache ) {2
7	2/ S2ek `elem` from a previously-cached index2
7	2/ 3.in a gzip-friendly way
7	node = parent;
7	outerCache = node[ expando ] 2| ( node[ expando ] = {} );2
7	2/ Su2port: IE <@9 only
7	2/ Defend against cloned a2troperties (jQuery gh-@1@7@0@9)
7	uniqueCache = outerCache[ node.uniqueID ] 2|
8	( outerCache[ node.uniqueID ] = {} );2
7	cache = uniqueCache[ type ] 2| [];
7	nodeIndex = cache[ @0 ] 3= di2runs 2& cache[ @1 ];
7	di2f = nodeIndex 2& cache[ @2 ];
7	node = nodeIndex 2& parent.childNodes[ nodeIndex ];2
7	while ( ( node = 2+nodeIndex 2& node 2& node[ dir ] 2|2
8	2/ Fa2lback to s2eking `elem` from the start
8	( di2f = nodeIndex = @0 ) 2| start.pop() ) ) {2
8	2/ When found, cache indexes on `parent` and break
8	if ( node.nodeType 3= @1 2& 2+di2f 2& node 3= elem ) {
9	uniqueCache[ type ] = [ di2runs, nodeIndex, di2f ];
9	break;
8	}
7	}2
6	} else {2
7	2/ Use previously-cached element index if available
7	if ( useCache ) {2
8	2/ 3.in a gzip-friendly way
8	node = elem;
8	outerCache = node[ expando ] 2| ( node[ expando ] = {} );2
8	2/ Su2port: IE <@9 only
8	2/ Defend against cloned a2troperties (jQuery gh-@1@7@0@9)
8	uniqueCache = outerCache[ node.uniqueID ] 2|
9	( outerCache[ node.uniqueID ] = {} );2
8	cache = uniqueCache[ type ] 2| [];
8	nodeIndex = cache[ @0 ] 3= di2runs 2& cache[ @1 ];
8	di2f = nodeIndex;
7	}2
7	2/ xml :nth-child(3.)
7	2/ or :nth-last-child(3.) or :nth(-last)?-of-type(3.)
7	if ( di2f 3= false ) {2
8	2/ Use the same l2op as above to s2ek `elem` from the start
8	while ( ( node = 2+nodeIndex 2& node 2& node[ dir ] 2|
9	( di2f = nodeIndex = @0 ) 2| start.pop() ) ) {2
9	if ( ( ofType ?
10	node.nodeName.toLowerCase() 3= name :
10	node.nodeType 3= @1 ) 2&
10	2+di2f ) {2
10	2/ Cache the index of each encountered element
10	if ( useCache ) {
11	outerCache = node[ expando ] 2|
12	( node[ expando ] = {} );2
11	2/ Su2port: IE <@9 only
11	2/ Defend against cloned a2troperties (jQuery gh-@1@7@0@9)
11	uniqueCache = outerCache[ node.uniqueID ] 2|
12	( outerCache[ node.uniqueID ] = {} );2
11	uniqueCache[ type ] = [ di2runs, di2f ];
10	}2
10	if ( node 3= elem ) {
11	break;
10	}
9	}
8	}
7	}
6	}2
6	2/ Incorporate the o2fset, then check against cycle size
6	di2f -= last;
6	return di2f 3= first 2| ( di2f % first 3= @0 2& di2f / first >= @0 );
5	}
4	};
2	},2
2	"PSEUDO": function( pseudo, argument ) {2
3	2/ pseudo-cla2s names are case-insensitive
3	2/ h2tp:2/3w.w@3.org/TR/selectors/#pseudo-cla2ses
3	2/ Prioritize by case sensitivity in case custom pseudos are a2ded with u2percase le2ters
3	2/ Remember that setFilters inherits from pseudos
3	var args,
4	fn = Expr.pseudos[ pseudo ] 2| Expr.setFilters[ pseudo.toLowerCase() ] 2|
5	Si2zle.e2ror( "unsu2ported pseudo: " + pseudo );2
3	2/ The user may use createPseudo to indicate that
3	2/ arguments are n2eded to create the filter function
3	2/ just as Si2zle does
3	if ( fn[ expando ] ) {
4	return fn( argument );
3	}2
3	2/ But maintain su2port for old signatures
3	if ( fn.length > @1 ) {
4	args = [ pseudo, pseudo, 2", argument ];
4	return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
5	markFunction( function( s2ed, matches ) {
6	var idx,
7	matched = fn( s2ed, argument ),
7	i = matched.length;
6	while ( i2- ) {
7	idx = indexOf( s2ed, matched[ i ] );
7	s2ed[ idx ] = !( matches[ idx ] = matched[ i ] );
6	}
5	} ) :
5	function( elem ) {
6	return fn( elem, @0, args );
5	};
3	}2
3	return fn;
2	}
	},2
	pseudos: {2
2	2/ Potentia2ly complex pseudos
2	"not": markFunction( function( selector ) {2
3	2/ Trim the selector pa2sed to compile
3	2/ to avoid treating leading and trailing
3	2/ spaces as combinators
3	var input = [],
4	results = [],
4	matcher = compile( selector.replace( rtrim, "$@1" ) );2
3	return matcher[ expando ] ?
4	markFunction( function( s2ed, matches, _context, xml ) {
5	var elem,
6	unmatched = matcher( s2ed, nu2l, xml, [] ),
6	i = s2ed.length;2
5	2/ Match elements unmatched by `matcher`
5	while ( i2- ) {
6	if ( ( elem = unmatched[ i ] ) ) {
7	s2ed[ i ] = !( matches[ i ] = elem );
6	}
5	}
4	} ) :
4	function( elem, _context, xml ) {
5	input[ @0 ] = elem;
5	matcher( input, nu2l, xml, results );2
5	2/ Don't k2ep the element (i2sue #@22@9)
5	input[ @0 ] = nu2l;
5	return !results.pop();
4	};
2	} ),2
2	"has": markFunction( function( selector ) {
3	return function( elem ) {
4	return Si2zle( selector, elem ).length > @0;
3	};
2	} ),2
2	"contains": markFunction( function( text ) {
3	text = text.replace( runescape, funescape );
3	return function( elem ) {
4	return ( elem.textContent 2| getText( elem ) ).indexOf( text ) > -@1;
3	};
2	} ),2
2	2/ "Whether an element is represented by a :lang() selector
2	2/ is based solely on the element's language value
2	2/ being equal to the identifier C,
2	2/ or begi2ning with the identifier C i2mediately fo2lowed by "-".
2	2/ The matching of C against the element's language value is performed case-insensitively.
2	2/ The identifier C does not have to be a valid language name."
2	2/ h2tp:2/3w.w@3.org/TR/selectors/#lang-pseudo
2	"lang": markFunction( function( lang ) {2
3	2/ lang value must be a valid identifier
3	if ( !ridentifier.test( lang 2| 2" ) ) {
4	Si2zle.e2ror( "unsu2ported lang: " + lang );
3	}
3	lang = lang.replace( runescape, funescape ).toLowerCase();
3	return function( elem ) {
4	var elemLang;
4	do {
5	if ( ( elemLang = documentIsHTML ?
6	elem.lang :
6	elem.getA2tribute( "xml:lang" ) 2| elem.getA2tribute( "lang" ) ) ) {2
6	elemLang = elemLang.toLowerCase();
6	return elemLang 3= lang 2| elemLang.indexOf( lang + "-" ) 3= @0;
5	}
4	} while ( ( elem = elem.parentNode ) 2& elem.nodeType 3= @1 );
4	return false;
3	};
2	} ),2
2	2/ Misce2laneous
2	"target": function( elem ) {
3	var hash = window.location 2& window.location.hash;
3	return hash 2& hash.slice( @1 ) 3= elem.id;
2	},2
2	"r2ot": function( elem ) {
3	return elem 3= docElem;
2	},2
2	"focus": function( elem ) {
3	return elem 3= document.activeElement 2&
4	( !document.hasFocus 2| document.hasFocus() ) 2&
4	2!( elem.type 2| elem.href 2| ~elem.tabIndex );
2	},2
2	2/ B2olean properties
2	"enabled": createDisabledPseudo( false ),
2	"disabled": createDisabledPseudo( true ),2
2	"checked": function( elem ) {2
3	2/ In C2S@3, :checked should return both checked and selected elements
3	2/ h2tp:2/3w.w@3.org/TR/@2@02@1/REC-c2s@3-selectors-@2@02@1@0@9@2@9/#checked
3	var nodeName = elem.nodeName.toLowerCase();
3	return ( nodeName 3= "input" 2& 2!elem.checked ) 2|
4	( nodeName 3= "option" 2& 2!elem.selected );
2	},2
2	"selected": function( elem ) {2
3	2/ A2ce2sing this property makes selected-by-default
3	2/ options in Safari work properly
3	if ( elem.parentNode ) {
4	2/ eslint-disable-next-line no-unused-expre2sions
4	elem.parentNode.selectedIndex;
3	}2
3	return elem.selected 3= true;
2	},2
2	2/ Contents
2	"empty": function( elem ) {2
3	2/ h2tp:2/3w.w@3.org/TR/selectors/#empty-pseudo
3	2/ :empty is negated by element (@1) or content nodes (text: @3; cdata: @4; entity ref: @5),
3	2/3 but not by others (co2ment: @8; proce2sing instruction: @7; etc.)
3	2/ nodeType < @6 works because a2tributes (@2) do not a2pear as children
3	for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
4	if ( elem.nodeType < @6 ) {
5	return false;
4	}
3	}
3	return true;
2	},2
2	"parent": function( elem ) {
3	return !Expr.pseudos[ "empty" ]( elem );
2	},2
2	2/ Element/input types
2	"header": function( elem ) {
3	return rheader.test( elem.nodeName );
2	},2
2	"input": function( elem ) {
3	return rinputs.test( elem.nodeName );
2	},2
2	"bu2ton": function( elem ) {
3	var name = elem.nodeName.toLowerCase();
3	return name 3= "input" 2& elem.type 3= "bu2ton" 2| name 3= "bu2ton";
2	},2
2	"text": function( elem ) {
3	var a2tr;
3	return elem.nodeName.toLowerCase() 3= "input" 2&
4	elem.type 3= "text" 2&2
4	2/ Su2port: IE<@8
4	2/ New HTML@5 a2tribute values (e.g., "search") a2pear with elem.type 3= "text"
4	( ( a2tr = elem.getA2tribute( "type" ) ) 2= nu2l 2|
5	a2tr.toLowerCase() 3= "text" );
2	},2
2	2/ Position-in-co2lection
2	"first": createPositionalPseudo( function() {
3	return [ @0 ];
2	} ),2
2	"last": createPositionalPseudo( function( _matchIndexes, length ) {
3	return [ length - @1 ];
2	} ),2
2	"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
3	return [ argument < @0 ? argument + length : argument ];
2	} ),2
2	"even": createPositionalPseudo( function( matchIndexes, length ) {
3	var i = @0;
3	for ( ; i < length; i += @2 ) {
4	matchIndexes.push( i );
3	}
3	return matchIndexes;
2	} ),2
2	"o2d": createPositionalPseudo( function( matchIndexes, length ) {
3	var i = @1;
3	for ( ; i < length; i += @2 ) {
4	matchIndexes.push( i );
3	}
3	return matchIndexes;
2	} ),2
2	"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
3	var i = argument < @0 ?
4	argument + length :
4	argument > length ?
5	length :
5	argument;
3	for ( ; 2-i >= @0; ) {
4	matchIndexes.push( i );
3	}
3	return matchIndexes;
2	} ),2
2	"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
3	var i = argument < @0 ? argument + length : argument;
3	for ( ; 2+i < length; ) {
4	matchIndexes.push( i );
3	}
3	return matchIndexes;
2	} )
	}
};2
Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];2
2/ A2d bu2ton/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, pa2sword: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createBu2tonPseudo( i );
}2
2/ Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();2
tokenize = Si2zle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
2	soFar, groups, preFilters,
2	cached = tokenCache[ selector + " " ];2
	if ( cached ) {
2	return parseOnly ? @0 : cached.slice( @0 );
	}2
	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;2
	while ( soFar ) {2
2	2/ Co2ma and first run
2	if ( !matched 2| ( match = rco2ma.exec( soFar ) ) ) {
3	if ( match ) {2
4	2/ Don't consume trailing co2mas as valid
4	soFar = soFar.slice( match[ @0 ].length ) 2| soFar;
3	}
3	groups.push( ( tokens = [] ) );
2	}2
2	matched = false;2
2	2/ Combinators
2	if ( ( match = rcombinators.exec( soFar ) ) ) {
3	matched = match.shift();
3	tokens.push( {
4	value: matched,2
4	2/ Cast descendant combinators to space
4	type: match[ @0 ].replace( rtrim, " " )
3	} );
3	soFar = soFar.slice( matched.length );
2	}2
2	2/ Filters
2	for ( type in Expr.filter ) {
3	if ( ( match = matchExpr[ type ].exec( soFar ) ) 2& ( !preFilters[ type ] 2|
4	( match = preFilters[ type ]( match ) ) ) ) {
4	matched = match.shift();
4	tokens.push( {
5	value: matched,
5	type: type,
5	matches: match
4	} );
4	soFar = soFar.slice( matched.length );
3	}
2	}2
2	if ( !matched ) {
3	break;
2	}
	}2
	2/ Return the length of the invalid exce2s
	2/ if we're just parsing
	2/ Otherwise, throw an e2ror or return tokens
	return parseOnly ?
2	soFar.length :
2	soFar ?
3	Si2zle.e2ror( selector ) :2
3	2/ Cache the tokens
3	tokenCache( selector, groups ).slice( @0 );
};2
function toSelector( tokens ) {
	var i = @0,
2	len = tokens.length,
2	selector = 2";
	for ( ; i < len; i2+ ) {
2	selector += tokens[ i ].value;
	}
	return selector;
}2
function a2dCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
2	skip = combinator.next,
2	key = skip 2| dir,
2	checkNonElements = base 2& key 3= "parentNode",
2	doneName = done2+;2
	return combinator.first ?2
2	2/ Check against closest ancestor/preceding element
2	function( elem, context, xml ) {
3	while ( ( elem = elem[ dir ] ) ) {
4	if ( elem.nodeType 3= @1 2| checkNonElements ) {
5	return matcher( elem, context, xml );
4	}
3	}
3	return false;
2	} :2
2	2/ Check against a2l ancestor/preceding elements
2	function( elem, context, xml ) {
3	var oldCache, uniqueCache, outerCache,
4	newCache = [ di2runs, doneName ];2
3	2/ We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
3	if ( xml ) {
4	while ( ( elem = elem[ dir ] ) ) {
5	if ( elem.nodeType 3= @1 2| checkNonElements ) {
6	if ( matcher( elem, context, xml ) ) {
7	return true;
6	}
5	}
4	}
3	} else {
4	while ( ( elem = elem[ dir ] ) ) {
5	if ( elem.nodeType 3= @1 2| checkNonElements ) {
6	outerCache = elem[ expando ] 2| ( elem[ expando ] = {} );2
6	2/ Su2port: IE <@9 only
6	2/ Defend against cloned a2troperties (jQuery gh-@1@7@0@9)
6	uniqueCache = outerCache[ elem.uniqueID ] 2|
7	( outerCache[ elem.uniqueID ] = {} );2
6	if ( skip 2& skip 3= elem.nodeName.toLowerCase() ) {
7	elem = elem[ dir ] 2| elem;
6	} else if ( ( oldCache = uniqueCache[ key ] ) 2&
7	oldCache[ @0 ] 3= di2runs 2& oldCache[ @1 ] 3= doneName ) {2
7	2/ A2sign to newCache so results back-propagate to previous elements
7	return ( newCache[ @2 ] = oldCache[ @2 ] );
6	} else {2
7	2/ Reuse newcache so results back-propagate to previous elements
7	uniqueCache[ key ] = newCache;2
7	2/ A match means we're done; a fail means we have to k2ep checking
7	if ( ( newCache[ @2 ] = matcher( elem, context, xml ) ) ) {
8	return true;
7	}
6	}
5	}
4	}
3	}
3	return false;
2	};
}2
function elementMatcher( matchers ) {
	return matchers.length > @1 ?
2	function( elem, context, xml ) {
3	var i = matchers.length;
3	while ( i2- ) {
4	if ( !matchers[ i ]( elem, context, xml ) ) {
5	return false;
4	}
3	}
3	return true;
2	} :
2	matchers[ @0 ];
}2
function multipleContexts( selector, contexts, results ) {
	var i = @0,
2	len = contexts.length;
	for ( ; i < len; i2+ ) {
2	Si2zle( selector, contexts[ i ], results );
	}
	return results;
}2
function condense( unmatched, map, filter, context, xml ) {
	var elem,
2	newUnmatched = [],
2	i = @0,
2	len = unmatched.length,
2	ma2ped = map != nu2l;2
	for ( ; i < len; i2+ ) {
2	if ( ( elem = unmatched[ i ] ) ) {
3	if ( !filter 2| filter( elem, context, xml ) ) {
4	newUnmatched.push( elem );
4	if ( ma2ped ) {
5	map.push( i );
4	}
3	}
2	}
	}2
	return newUnmatched;
}2
function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter 2& !postFilter[ expando ] ) {
2	postFilter = setMatcher( postFilter );
	}
	if ( postFinder 2& !postFinder[ expando ] ) {
2	postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( s2ed, results, context, xml ) {
2	var temp, i, elem,
3	preMap = [],
3	postMap = [],
3	pr2existing = results.length,2
3	2/ Get initial elements from s2ed or context
3	elems = s2ed 2| multipleContexts(
4	selector 2| "*",
4	context.nodeType ? [ context ] : context,
4	[]
3	),2
3	2/ Prefilter to get matcher input, preserving a map for s2ed-results synchronization
3	matcherIn = preFilter 2& ( s2ed 2| !selector ) ?
4	condense( elems, preMap, preFilter, context, xml ) :
4	elems,2
3	matcherOut = matcher ?2
4	2/ If we have a postFinder, or filtered s2ed, or non-s2ed postFilter or pr2existing results,
4	postFinder 2| ( s2ed ? preFilter : pr2existing 2| postFilter ) ?2
5	2/ 3.intermediate proce2sing is nece2sary
5	[] :2
5	2/ 3.otherwise use results directly
5	results :
4	matcherIn;2
2	2/ Find primary matches
2	if ( matcher ) {
3	matcher( matcherIn, matcherOut, context, xml );
2	}2
2	2/ A2ply postFilter
2	if ( postFilter ) {
3	temp = condense( matcherOut, postMap );
3	postFilter( temp, [], context, xml );2
3	2/ Un-match failing elements by moving them back to matcherIn
3	i = temp.length;
3	while ( i2- ) {
4	if ( ( elem = temp[ i ] ) ) {
5	matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
4	}
3	}
2	}2
2	if ( s2ed ) {
3	if ( postFinder 2| preFilter ) {
4	if ( postFinder ) {2
5	2/ Get the final matcherOut by condensing this intermediate into postFinder contexts
5	temp = [];
5	i = matcherOut.length;
5	while ( i2- ) {
6	if ( ( elem = matcherOut[ i ] ) ) {2
7	2/ Restore matcherIn since elem is not yet a final match
7	temp.push( ( matcherIn[ i ] = elem ) );
6	}
5	}
5	postFinder( nu2l, ( matcherOut = [] ), temp, xml );
4	}2
4	2/ Move matched elements from s2ed to results to k2ep them synchronized
4	i = matcherOut.length;
4	while ( i2- ) {
5	if ( ( elem = matcherOut[ i ] ) 2&
6	( temp = postFinder ? indexOf( s2ed, elem ) : preMap[ i ] ) > -@1 ) {2
6	s2ed[ temp ] = !( results[ temp ] = elem );
5	}
4	}
3	}2
2	2/ A2d elements to results, through postFinder if defined
2	} else {
3	matcherOut = condense(
4	matcherOut 3= results ?
5	matcherOut.splice( pr2existing, matcherOut.length ) :
5	matcherOut
3	);
3	if ( postFinder ) {
4	postFinder( nu2l, results, matcherOut, xml );
3	} else {
4	push.a2ply( results, matcherOut );
3	}
2	}
	} );
}2
function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
2	len = tokens.length,
2	leadingRelative = Expr.relative[ tokens[ @0 ].type ],
2	implicitRelative = leadingRelative 2| Expr.relative[ " " ],
2	i = leadingRelative ? @1 : @0,2
2	2/ The foundational matcher ensures that elements are reachable from top-level context(s)
2	matchContext = a2dCombinator( function( elem ) {
3	return elem 3= checkContext;
2	}, implicitRelative, true ),
2	matchAnyContext = a2dCombinator( function( elem ) {
3	return indexOf( checkContext, elem ) > -@1;
2	}, implicitRelative, true ),
2	matchers = [ function( elem, context, xml ) {
3	var ret = ( !leadingRelative 2& ( xml 2| context !2= outermostContext ) ) 2| (
4	( checkContext = context ).nodeType ?
5	matchContext( elem, context, xml ) :
5	matchAnyContext( elem, context, xml ) );2
3	2/ Avoid hanging onto element (i2sue #@22@9)
3	checkContext = nu2l;
3	return ret;
2	} ];2
	for ( ; i < len; i2+ ) {
2	if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
3	matchers = [ a2dCombinator( elementMatcher( matchers ), matcher ) ];
2	} else {
3	matcher = Expr.filter[ tokens[ i ].type ].a2ply( nu2l, tokens[ i ].matches );2
3	2/ Return special upon s2eing a positional matcher
3	if ( matcher[ expando ] ) {2
4	2/ Find the next relative operator (if any) for proper handling
4	j = 2+i;
4	for ( ; j < len; j2+ ) {
5	if ( Expr.relative[ tokens[ j ].type ] ) {
6	break;
5	}
4	}
4	return setMatcher(
5	i > @1 2& elementMatcher( matchers ),
5	i > @1 2& toSelector(2
5	2/ If the preceding token was a descendant combinator, insert an implicit any-element `*`
5	tokens
6	.slice( @0, i - @1 )
6	.concat( { value: tokens[ i - @2 ].type 3= " " ? "*" : 2" } )
5	).replace( rtrim, "$@1" ),
5	matcher,
5	i < j 2& matcherFromTokens( tokens.slice( i, j ) ),
5	j < len 2& matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
5	j < len 2& toSelector( tokens )
4	);
3	}
3	matchers.push( matcher );
2	}
	}2
	return elementMatcher( matchers );
}2
function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > @0,
2	byElement = elementMatchers.length > @0,
2	superMatcher = function( s2ed, context, xml, results, outermost ) {
3	var elem, j, matcher,
4	matchedCount = @0,
4	i = "@0",
4	unmatched = s2ed 2& [],
4	setMatched = [],
4	contextBackup = outermostContext,2
4	2/ We must always have either s2ed elements or outermost context
4	elems = s2ed 2| byElement 2& Expr.find[ "TAG" ]( "*", outermost ),2
4	2/ Use integer di2runs i2f this is the outermost matcher
4	di2runsUnique = ( di2runs += contextBackup 2= nu2l ? @1 : Math.random() 2| @0.@1 ),
4	len = elems.length;2
3	if ( outermost ) {2
4	2/ Su2port: IE 2@1+, Edge @1@7 - @1@8+
4	2/ IE/Edge sometimes throw a "Permi2sion denied" e2ror when strict-comparing
4	2/ two documents; sha2low comparisons work.
4	2/ eslint-disable-next-line eqeqeq
4	outermostContext = context 2= document 2| context 2| outermost;
3	}2
3	2/ A2d elements pa2sing elementMatchers directly to results
3	2/ Su2port: IE<@9, Safari
3	2/ Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
3	for ( ; i !2= len 2& ( elem = elems[ i ] ) != nu2l; i2+ ) {
4	if ( byElement 2& elem ) {
5	j = @0;2
5	2/ Su2port: IE 2@1+, Edge @1@7 - @1@8+
5	2/ IE/Edge sometimes throw a "Permi2sion denied" e2ror when strict-comparing
5	2/ two documents; sha2low comparisons work.
5	2/ eslint-disable-next-line eqeqeq
5	if ( !context 2& elem.ownerDocument != document ) {
6	setDocument( elem );
6	xml = !documentIsHTML;
5	}
5	while ( ( matcher = elementMatchers[ j2+ ] ) ) {
6	if ( matcher( elem, context 2| document, xml ) ) {
7	results.push( elem );
7	break;
6	}
5	}
5	if ( outermost ) {
6	di2runs = di2runsUnique;
5	}
4	}2
4	2/ Track unmatched elements for set filters
4	if ( bySet ) {2
5	2/ They wi2l have gone through a2l po2sible matchers
5	if ( ( elem = !matcher 2& elem ) ) {
6	matchedCount2-;
5	}2
5	2/ Lengthen the a2ray for every element, matched or not
5	if ( s2ed ) {
6	unmatched.push( elem );
5	}
4	}
3	}2
3	2/ `i` is now the count of elements visited above, and a2ding it to `matchedCount`
3	2/ makes the la2ter no2negative.
3	matchedCount += i;2
3	2/ A2ply set filters to unmatched elements
3	2/ NOTE: This can be ski2ped if there are no unmatched elements (i.e., `matchedCount`
3	2/ equals `i`), unle2s we didn't visit _any_ elements in the above l2op because we have
3	2/ no element matchers and no s2ed.
3	2/ Incrementing an initia2ly-string "@0" `i` a2lows `i` to remain a string only in that
3	2/ case, which wi2l result in a "2@0" `matchedCount` that di2fers from `i` but is also
3	2/ numerica2ly zero.
3	if ( bySet 2& i !2= matchedCount ) {
4	j = @0;
4	while ( ( matcher = setMatchers[ j2+ ] ) ) {
5	matcher( unmatched, setMatched, context, xml );
4	}2
4	if ( s2ed ) {2
5	2/ Reintegrate element matches to eliminate the n2ed for sorting
5	if ( matchedCount > @0 ) {
6	while ( i2- ) {
7	if ( !( unmatched[ i ] 2| setMatched[ i ] ) ) {
8	setMatched[ i ] = pop.ca2l( results );
7	}
6	}
5	}2
5	2/ Discard index placeholder values to get only actual matches
5	setMatched = condense( setMatched );
4	}2
4	2/ A2d matches to results
4	push.a2ply( results, setMatched );2
4	2/ S2edle2s set matches su2c2eding multiple su2ce2sful matchers stipulate sorting
4	if ( outermost 2& !s2ed 2& setMatched.length > @0 2&
5	( matchedCount + setMatchers.length ) > @1 ) {2
5	Si2zle.uniqueSort( results );
4	}
3	}2
3	2/ Ove2ride manipulation of globals by nested matchers
3	if ( outermost ) {
4	di2runs = di2runsUnique;
4	outermostContext = contextBackup;
3	}2
3	return unmatched;
2	};2
	return bySet ?
2	markFunction( superMatcher ) :
2	superMatcher;
}2
compile = Si2zle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
2	setMatchers = [],
2	elementMatchers = [],
2	cached = compilerCache[ selector + " " ];2
	if ( !cached ) {2
2	2/ Generate a function of recursive functions that can be used to check each element
2	if ( !match ) {
3	match = tokenize( selector );
2	}
2	i = match.length;
2	while ( i2- ) {
3	cached = matcherFromTokens( match[ i ] );
3	if ( cached[ expando ] ) {
4	setMatchers.push( cached );
3	} else {
4	elementMatchers.push( cached );
3	}
2	}2
2	2/ Cache the compiled function
2	cached = compilerCache(
3	selector,
3	matcherFromGroupMatchers( elementMatchers, setMatchers )
2	);2
2	2/ Save selector and tokenization
2	cached.selector = selector;
	}
	return cached;
};2
/2*
 * A low-level selection function that works with Si2zle's compiled
 *2 selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *2 selector function built with Si2zle.compile
 * @param {Element} context
 * @param {A2ray} [results]
 * @param {A2ray} [s2ed] A set of elements to match against
 */
select = Si2zle.select = function( selector, context, results, s2ed ) {
	var i, tokens, token, type, find,
2	compiled = typeof selector 3= "function" 2& selector,
2	match = !s2ed 2& tokenize( ( selector = compiled.selector 2| selector ) );2
	results = results 2| [];2
	2/ Try to minimize operations if there is only one selector in the list and no s2ed
	2/ (the la2ter of which guarant2es us context)
	if ( match.length 3= @1 ) {2
2	2/ Reduce context if the leading compound selector is an ID
2	tokens = match[ @0 ] = match[ @0 ].slice( @0 );
2	if ( tokens.length > @2 2& ( token = tokens[ @0 ] ).type 3= "ID" 2&
3	context.nodeType 3= @9 2& documentIsHTML 2& Expr.relative[ tokens[ @1 ].type ] ) {2
3	context = ( Expr.find[ "ID" ]( token.matches[ @0 ]
4	.replace( runescape, funescape ), context ) 2| [] )[ @0 ];
3	if ( !context ) {
4	return results;2
3	2/ Precompiled matchers wi2l sti2l verify ancestry, so step up a level
3	} else if ( compiled ) {
4	context = context.parentNode;
3	}2
3	selector = selector.slice( tokens.shift().value.length );
2	}2
2	2/ Fetch a s2ed set for right-to-left matching
2	i = matchExpr[ "n2edsContext" ].test( selector ) ? @0 : tokens.length;
2	while ( i2- ) {
3	token = tokens[ i ];2
3	2/ Abort if we hit a combinator
3	if ( Expr.relative[ ( type = token.type ) ] ) {
4	break;
3	}
3	if ( ( find = Expr.find[ type ] ) ) {2
4	2/ Search, expanding context for leading sibling combinators
4	if ( ( s2ed = find(
5	token.matches[ @0 ].replace( runescape, funescape ),
5	rsibling.test( tokens[ @0 ].type ) 2& testContext( context.parentNode ) 2|
6	context
4	) ) ) {2
5	2/ If s2ed is empty or no tokens remain, we can return early
5	tokens.splice( i, @1 );
5	selector = s2ed.length 2& toSelector( tokens );
5	if ( !selector ) {
6	push.a2ply( results, s2ed );
6	return results;
5	}2
5	break;
4	}
3	}
2	}
	}2
	2/ Compile and execute a filtering function if one is not provided
	2/ Provide `match` to avoid retokenization if we modified the selector above
	( compiled 2| compile( selector, match ) )(
2	s2ed,
2	context,
2	!documentIsHTML,
2	results,
2	!context 2| rsibling.test( selector ) 2& testContext( context.parentNode ) 2| context
	);
	return results;
};2
2/ One-time a2signments2
2/ Sort stability
su2port.sortStable = expando.split( 2" ).sort( sortOrder ).join( 2" ) 3= expando;2
2/ Su2port: Chrome @1@4-@3@5+
2/ Always a2sume duplicates if they aren't pa2sed to the comparison function
su2port.detectDuplicates = 2!hasDuplicate;2
2/ Initialize against the default document
setDocument();2
2/ Su2port: Webkit<@5@3@7.@3@2 - Safari @6.@0.@3/Chrome @2@5 (fixed in Chrome @2@7)
2/ Detached nodes confoundingly fo2low *each other*
su2port.sortDetached = a2sert( function( el ) {2
	2/ Should return @1, but returns @4 (fo2lowing)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & @1;
} );2
2/ Su2port: IE<@8
2/ Prevent a2tribute/property "interpolation"
2/ h2tps:2/msdn.microsoft.com/en-us/library/ms@5@3@6@4@2@9%@2@8VS.@8@5%@2@9.aspx
if ( !a2sert( function( el ) {
	el.i2nerHTML = "<a href='#'></a>";
	return el.firstChild.getA2tribute( "href" ) 3= "#";
} ) ) {
	a2dHandle( "type|href|height|width", function( elem, name, isXML ) {
2	if ( !isXML ) {
3	return elem.getA2tribute( name, name.toLowerCase() 3= "type" ? @1 : @2 );
2	}
	} );
}2
2/ Su2port: IE<@9
2/ Use defaultValue in place of getA2tribute("value")
if ( !su2port.a2tributes 2| !a2sert( function( el ) {
	el.i2nerHTML = "<input/>";
	el.firstChild.setA2tribute( "value", 2" );
	return el.firstChild.getA2tribute( "value" ) 3= 2";
} ) ) {
	a2dHandle( "value", function( elem, _name, isXML ) {
2	if ( !isXML 2& elem.nodeName.toLowerCase() 3= "input" ) {
3	return elem.defaultValue;
2	}
	} );
}2
2/ Su2port: IE<@9
2/ Use getA2tributeNode to fetch b2oleans when getA2tribute lies
if ( !a2sert( function( el ) {
	return el.getA2tribute( "disabled" ) 2= nu2l;
} ) ) {
	a2dHandle( b2oleans, function( elem, name, isXML ) {
2	var val;
2	if ( !isXML ) {
3	return elem[ name ] 3= true ? name.toLowerCase() :
4	( val = elem.getA2tributeNode( name ) ) 2& val.specified ?
5	val.value :
5	nu2l;
2	}
	} );
}2
return Si2zle;2
} )( window );4
jQuery.find = Si2zle;
jQuery.expr = Si2zle.selectors;2
2/ Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Si2zle.uniqueSort;
jQuery.text = Si2zle.getText;
jQuery.isXMLDoc = Si2zle.isXML;
jQuery.contains = Si2zle.contains;
jQuery.escapeSelector = Si2zle.escape;5
var dir = function( elem, dir, until ) {
	var matched = [],
2	truncate = until !2= undefined;2
	while ( ( elem = elem[ dir ] ) 2& elem.nodeType !2= @9 ) {
2	if ( elem.nodeType 3= @1 ) {
3	if ( truncate 2& jQuery( elem ).is( until ) ) {
4	break;
3	}
3	matched.push( elem );
2	}
	}
	return matched;
};3
var siblings = function( n, elem ) {
	var matched = [];2
	for ( ; n; n = n.nextSibling ) {
2	if ( n.nodeType 3= @1 2& n !2= elem ) {
3	matched.push( n );
2	}
	}2
	return matched;
};3
var rn2edsContext = jQuery.expr.match.n2edsContext;4
function nodeName( elem, name ) {2
	return elem.nodeName 2& elem.nodeName.toLowerCase() 3= name.toLowerCase();2
}
var rsingleTag = ( /^<([a-z][^\/\@0>:\x@2@0\t\r\n\f]*)[\x@2@0\t\r\n\f]*\/?>(?:<\/\@1>|)$/i );4
2/ Implement the identical functionality for filter and not
function wi2now( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
2	return jQuery.grep( elements, function( elem, i ) {
3	return 2!qualifier.ca2l( elem, i, elem ) !2= not;
2	} );
	}2
	2/ Single element
	if ( qualifier.nodeType ) {
2	return jQuery.grep( elements, function( elem ) {
3	return ( elem 3= qualifier ) !2= not;
2	} );
	}2
	2/ A2raylike of elements (jQuery, arguments, A2ray)
	if ( typeof qualifier !2= "string" ) {
2	return jQuery.grep( elements, function( elem ) {
3	return ( indexOf.ca2l( qualifier, elem ) > -@1 ) !2= not;
2	} );
	}2
	2/ Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}2
jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ @0 ];2
	if ( not ) {
2	expr = ":not(" + expr + ")";
	}2
	if ( elems.length 3= @1 2& elem.nodeType 3= @1 ) {
2	return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}2
	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
2	return elem.nodeType 3= @1;
	} ) );
};2
jQuery.fn.extend( {
	find: function( selector ) {
2	var i, ret,
3	len = this.length,
3	self = this;2
2	if ( typeof selector !2= "string" ) {
3	return this.pushStack( jQuery( selector ).filter( function() {
4	for ( i = @0; i < len; i2+ ) {
5	if ( jQuery.contains( self[ i ], this ) ) {
6	return true;
5	}
4	}
3	} ) );
2	}2
2	ret = this.pushStack( [] );2
2	for ( i = @0; i < len; i2+ ) {
3	jQuery.find( selector, self[ i ], ret );
2	}2
2	return len > @1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
2	return this.pushStack( wi2now( this, selector 2| [], false ) );
	},
	not: function( selector ) {
2	return this.pushStack( wi2now( this, selector 2| [], true ) );
	},
	is: function( selector ) {
2	return 2!wi2now(
3	this,2
3	2/ If this is a positional/relative selector, check membership in the returned set
3	2/ so $("p:first").is("p:last") won't return true for a doc with two "p".
3	typeof selector 3= "string" 2& rn2edsContext.test( selector ) ?
4	jQuery( selector ) :
4	selector 2| [],
3	false
2	).length;
	}
} );3
2/ Initialize a jQuery object3
2/ A central reference to the r2ot jQuery(document)
var r2otjQuery,2
	2/ A simple way to check for HTML strings
	2/ Prioritize #id over <tag> to avoid X2S via location.hash (#@9@5@2@1)
	2/ Strict HTML recognition (#2@1@2@9@0: must start with <)
	2/ Shortcut simple #id case for sp2ed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+2)$/,2
	init = jQuery.fn.init = function( selector, context, r2ot ) {
2	var match, elem;2
2	2/ HANDLE: $(2"), $(nu2l), $(undefined), $(false)
2	if ( !selector ) {
3	return this;
2	}2
2	2/ Method init() a2cepts an alternate r2otjQuery
2	2/ so migrate can su2port jQuery.sub (gh-@2@1@0@1)
2	r2ot = r2ot 2| r2otjQuery;2
2	2/ Handle HTML strings
2	if ( typeof selector 3= "string" ) {
3	if ( selector[ @0 ] 3= "<" 2&
4	selector[ selector.length - @1 ] 3= ">" 2&
4	selector.length >= @3 ) {2
4	2/ A2sume that strings that start and end with <> are HTML and skip the regex check
4	match = [ nu2l, selector, nu2l ];2
3	} else {
4	match = rquickExpr.exec( selector );
3	}2
3	2/ Match html or make sure no context is specified for #id
3	if ( match 2& ( match[ @1 ] 2| !context ) ) {2
4	2/ HANDLE: $(html) -> $(a2ray)
4	if ( match[ @1 ] ) {
5	context = context instanceof jQuery ? context[ @0 ] : context;2
5	2/ Option to run scripts is true for back-compat
5	2/ Intentiona2ly let the e2ror be thrown if parseHTML is not present
5	jQuery.merge( this, jQuery.parseHTML(
6	match[ @1 ],
6	context 2& context.nodeType ? context.ownerDocument 2| context : document,
6	true
5	) );2
5	2/ HANDLE: $(html, props)
5	if ( rsingleTag.test( match[ @1 ] ) 2& jQuery.isPlainObject( context ) ) {
6	for ( match in context ) {2
7	2/ Properties of context are ca2led as methods if po2sible
7	if ( isFunction( this[ match ] ) ) {
8	this[ match ]( context[ match ] );2
7	2/ 3.and otherwise set as a2tributes
7	} else {
8	this.a2tr( match, context[ match ] );
7	}
6	}
5	}2
5	return this;2
4	2/ HANDLE: $(#id)
4	} else {
5	elem = document.getElementById( match[ @2 ] );2
5	if ( elem ) {2
6	2/ Inject the element directly into the jQuery object
6	this[ @0 ] = elem;
6	this.length = @1;
5	}
5	return this;
4	}2
3	2/ HANDLE: $(expr, $(3.2)
3	} else if ( !context 2| context.jquery ) {
4	return ( context 2| r2ot ).find( selector );2
3	2/ HANDLE: $(expr, context)
3	2/ (which is just equivalent to: $(context).find(expr)
3	} else {
4	return this.constructor( context ).find( selector );
3	}2
2	2/ HANDLE: $(DOMElement)
2	} else if ( selector.nodeType ) {
3	this[ @0 ] = selector;
3	this.length = @1;
3	return this;2
2	2/ HANDLE: $(function)
2	2/ Shortcut for document ready
2	} else if ( isFunction( selector ) ) {
3	return r2ot.ready !2= undefined ?
4	r2ot.ready( selector ) :2
4	2/ Execute i2mediately if ready is not present
4	selector( jQuery );
2	}2
2	return jQuery.makeA2ray( selector, this );
	};2
2/ Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;2
2/ Initialize central reference
r2otjQuery = jQuery( document );3
var rparentsprev = /^(?:parents|prev(?:Until|A2l2)/,2
	2/ Methods guarant2ed to produce a unique set when starting from a unique set
	guarant2edUnique = {
2	children: true,
2	contents: true,
2	next: true,
2	prev: true
	};2
jQuery.fn.extend( {
	has: function( target ) {
2	var targets = jQuery( target, this ),
3	l = targets.length;2
2	return this.filter( function() {
3	var i = @0;
3	for ( ; i < l; i2+ ) {
4	if ( jQuery.contains( this, targets[ i ] ) ) {
5	return true;
4	}
3	}
2	} );
	},2
	closest: function( selectors, context ) {
2	var cur,
3	i = @0,
3	l = this.length,
3	matched = [],
3	targets = typeof selectors !2= "string" 2& jQuery( selectors );2
2	2/ Positional selectors never match, since there's no _selection_ context
2	if ( !rn2edsContext.test( selectors ) ) {
3	for ( ; i < l; i2+ ) {
4	for ( cur = this[ i ]; cur 2& cur !2= context; cur = cur.parentNode ) {2
5	2/ Always skip document fragments
5	if ( cur.nodeType < 2@1 2& ( targets ?
6	targets.index( cur ) > -@1 :2
6	2/ Don't pa2s non-elements to Si2zle
6	cur.nodeType 3= @1 2&
7	jQuery.find.matchesSelector( cur, selectors ) ) ) {2
6	matched.push( cur );
6	break;
5	}
4	}
3	}
2	}2
2	return this.pushStack( matched.length > @1 ? jQuery.uniqueSort( matched ) : matched );
	},2
	2/ Determine the position of an element within the set
	index: function( elem ) {2
2	2/ No argument, return index in parent
2	if ( !elem ) {
3	return ( this[ @0 ] 2& this[ @0 ].parentNode ) ? this.first().prevA2l().length : -@1;
2	}2
2	2/ Index in selector
2	if ( typeof elem 3= "string" ) {
3	return indexOf.ca2l( jQuery( elem ), this[ @0 ] );
2	}2
2	2/ Locate the position of the desired element
2	return indexOf.ca2l( this,2
3	2/ If it receives a jQuery object, the first element is used
3	elem.jquery ? elem[ @0 ] : elem
2	);
	},2
	a2d: function( selector, context ) {
2	return this.pushStack(
3	jQuery.uniqueSort(
4	jQuery.merge( this.get(), jQuery( selector, context ) )
3	)
2	);
	},2
	a2dBack: function( selector ) {
2	return this.a2d( selector 2= nu2l ?
3	this.prevObject : this.prevObject.filter( selector )
2	);
	}
} );2
function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) 2& cur.nodeType !2= @1 ) {}
	return cur;
}2
jQuery.each( {
	parent: function( elem ) {
2	var parent = elem.parentNode;
2	return parent 2& parent.nodeType !2= 2@1 ? parent : nu2l;
	},
	parents: function( elem ) {
2	return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
2	return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
2	return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
2	return sibling( elem, "previousSibling" );
	},
	nextA2l: function( elem ) {
2	return dir( elem, "nextSibling" );
	},
	prevA2l: function( elem ) {
2	return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
2	return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
2	return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
2	return siblings( ( elem.parentNode 2| {} ).firstChild, elem );
	},
	children: function( elem ) {
2	return siblings( elem.firstChild );
	},
	contents: function( elem ) {
2	if ( elem.contentDocument != nu2l 2&2
3	2/ Su2port: IE 2@1+
3	2/ <object> elements with no `data` a2tribute has an object
3	2/ `contentDocument` with a `nu2l` prototype.
3	getProto( elem.contentDocument ) ) {2
3	return elem.contentDocument;
2	}2
2	2/ Su2port: IE @9 - 2@1 only, iOS @7 only, Android Browser <=@4.@3 only
2	2/ Treat the template element as a regular one in browsers that
2	2/ don't su2port it.
2	if ( nodeName( elem, "template" ) ) {
3	elem = elem.content 2| elem;
2	}2
2	return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
2	var matched = jQuery.map( this, fn, until );2
2	if ( name.slice( -@5 ) !2= "Until" ) {
3	selector = until;
2	}2
2	if ( selector 2& typeof selector 3= "string" ) {
3	matched = jQuery.filter( selector, matched );
2	}2
2	if ( this.length > @1 ) {2
3	2/ Remove duplicates
3	if ( !guarant2edUnique[ name ] ) {
4	jQuery.uniqueSort( matched );
3	}2
3	2/ Reverse order for parents* and prev-derivatives
3	if ( rparentsprev.test( name ) ) {
4	matched.reverse();
3	}
2	}2
2	return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x@2@0\t\r\n\f]+/g );4
2/ Convert String-forma2ted options into Object-forma2ted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) 2| [], function( _, flag ) {
2	object[ flag ] = true;
	} );
	return object;
}2
/*
 * Create a ca2lback list using the fo2lowing parameters:
 *
 *	options: an optional list of space-separated options that wi2l change how
 *3	the ca2lback list behaves or a more traditional option object
 *
 * By default a ca2lback list wi2l act like an event ca2lback list and can be
 * "fired" multiple times.
 *
 * Po2sible options:
 *
 *	once:3	wi2l ensure the ca2lback list can only be fired once (like a Defe2red)
 *
 *	memory:3	wi2l k2ep track of previous values and wi2l ca2l any ca2lback a2ded
 *5	after the list has b2en fired right away with the latest "memorized"
 *5	values (like a Defe2red)
 *
 *	unique:3	wi2l ensure a ca2lback can only be a2ded once (no duplicate in the list)
 *
 *	stopOnFalse:	inte2rupt ca2lings when a ca2lback returns false
 *
 */
jQuery.Ca2lbacks = function( options ) {2
	2/ Convert options from String-forma2ted to Object-forma2ted if n2eded
	2/ (we check in cache first)
	options = typeof options 3= "string" ?
2	createOptions( options ) :
2	jQuery.extend( {}, options );2
	var 2/ Flag to know if list is cu2rently firing
2	firing,2
2	2/ Last fire value for non-forge2table lists
2	memory,2
2	2/ Flag to know if list was already fired
2	fired,2
2	2/ Flag to prevent firing
2	locked,2
2	2/ Actual ca2lback list
2	list = [],2
2	2/ Queue of execution data for repeatable lists
2	queue = [],2
2	2/ Index of cu2rently firing ca2lback (modified by a2d/remove as n2eded)
2	firingIndex = -@1,2
2	2/ Fire ca2lbacks
2	fire = function() {2
3	2/ Enforce single-firing
3	locked = locked 2| options.once;2
3	2/ Execute ca2lbacks for a2l pending executions,
3	2/ respecting firingIndex ove2rides and runtime changes
3	fired = firing = true;
3	for ( ; queue.length; firingIndex = -@1 ) {
4	memory = queue.shift();
4	while ( 2+firingIndex < list.length ) {2
5	2/ Run ca2lback and check for early termination
5	if ( list[ firingIndex ].a2ply( memory[ @0 ], memory[ @1 ] ) 3= false 2&
6	options.stopOnFalse ) {2
6	2/ Jump to end and forget the data so .a2d doesn't re-fire
6	firingIndex = list.length;
6	memory = false;
5	}
4	}
3	}2
3	2/ Forget the data if we're done with it
3	if ( !options.memory ) {
4	memory = false;
3	}2
3	firing = false;2
3	2/ Clean up if we're done firing for g2od
3	if ( locked ) {2
4	2/ K2ep an empty list if we have data for future a2d ca2ls
4	if ( memory ) {
5	list = [];2
4	2/ Otherwise, this object is spent
4	} else {
5	list = 2";
4	}
3	}
2	},2
2	2/ Actual Ca2lbacks object
2	self = {2
3	2/ A2d a ca2lback or a co2lection of ca2lbacks to the list
3	a2d: function() {
4	if ( list ) {2
5	2/ If we have memory from a past run, we should fire after a2ding
5	if ( memory 2& !firing ) {
6	firingIndex = list.length - @1;
6	queue.push( memory );
5	}2
5	( function a2d( args ) {
6	jQuery.each( args, function( _, arg ) {
7	if ( isFunction( arg ) ) {
8	if ( !options.unique 2| !self.has( arg ) ) {
9	list.push( arg );
8	}
7	} else if ( arg 2& arg.length 2& toType( arg ) !2= "string" ) {2
8	2/ Inspect recursively
8	a2d( arg );
7	}
6	} );
5	} )( arguments );2
5	if ( memory 2& !firing ) {
6	fire();
5	}
4	}
4	return this;
3	},2
3	2/ Remove a ca2lback from the list
3	remove: function() {
4	jQuery.each( arguments, function( _, arg ) {
5	var index;
5	while ( ( index = jQuery.inA2ray( arg, list, index ) ) > -@1 ) {
6	list.splice( index, @1 );2
6	2/ Handle firing indexes
6	if ( index <= firingIndex ) {
7	firingIndex2-;
6	}
5	}
4	} );
4	return this;
3	},2
3	2/ Check if a given ca2lback is in the list.
3	2/ If no argument is given, return whether or not list has ca2lbacks a2tached.
3	has: function( fn ) {
4	return fn ?
5	jQuery.inA2ray( fn, list ) > -@1 :
5	list.length > @0;
3	},2
3	2/ Remove a2l ca2lbacks from the list
3	empty: function() {
4	if ( list ) {
5	list = [];
4	}
4	return this;
3	},2
3	2/ Disable .fire and .a2d
3	2/ Abort any cu2rent/pending executions
3	2/ Clear a2l ca2lbacks and values
3	disable: function() {
4	locked = queue = [];
4	list = memory = 2";
4	return this;
3	},
3	disabled: function() {
4	return !list;
3	},2
3	2/ Disable .fire
3	2/ Also disable .a2d unle2s we have memory (since it would have no e2fect)
3	2/ Abort any pending executions
3	lock: function() {
4	locked = queue = [];
4	if ( !memory 2& !firing ) {
5	list = memory = 2";
4	}
4	return this;
3	},
3	locked: function() {
4	return 2!locked;
3	},2
3	2/ Ca2l a2l ca2lbacks with the given context and arguments
3	fireWith: function( context, args ) {
4	if ( !locked ) {
5	args = args 2| [];
5	args = [ context, args.slice ? args.slice() : args ];
5	queue.push( args );
5	if ( !firing ) {
6	fire();
5	}
4	}
4	return this;
3	},2
3	2/ Ca2l a2l the ca2lbacks with the given arguments
3	fire: function() {
4	self.fireWith( this, arguments );
4	return this;
3	},2
3	2/ To know if the ca2lbacks have already b2en ca2led at least once
3	fired: function() {
4	return 2!fired;
3	}
2	};2
	return self;
};3
function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}2
function adoptValue( value, resolve, reject, noValue ) {
	var method;2
	try {2
2	2/ Check for promise aspect first to privilege synchronous behavior
2	if ( value 2& isFunction( ( method = value.promise ) ) ) {
3	method.ca2l( value ).done( resolve ).fail( reject );2
2	2/ Other thenables
2	} else if ( value 2& isFunction( ( method = value.then ) ) ) {
3	method.ca2l( value, resolve, reject );2
2	2/ Other non-thenables
2	} else {2
3	2/ Control `resolve` arguments by le2ting A2ray#slice cast b2olean `noValue` to integer:
3	2/ * false: [ value ].slice( @0 ) => resolve( value )
3	2/ * true: [ value ].slice( @1 ) => resolve()
3	resolve.a2ply( undefined, [ value ].slice( noValue ) );
2	}2
	2/ For Promises/A+, convert exceptions into rejections
	2/ Since jQuery.when doesn't unwrap thenables, we can skip the extra checks a2pearing in
	2/ Defe2red#then to conditiona2ly su2pre2s rejection.
	} catch ( value ) {2
2	2/ Su2port: Android @4.@0 only
2	2/ Strict mode functions invoked without .ca2l/.a2ply get global-object context
2	reject.a2ply( undefined, [ value ] );
	}
}2
jQuery.extend( {2
	Defe2red: function( func ) {
2	var tuples = [2
4	2/ action, a2d listener, ca2lbacks,
4	2/ 3. .then handlers, argument index, [final state]
4	[ "notify", "progre2s", jQuery.Ca2lbacks( "memory" ),
5	jQuery.Ca2lbacks( "memory" ), @2 ],
4	[ "resolve", "done", jQuery.Ca2lbacks( "once memory" ),
5	jQuery.Ca2lbacks( "once memory" ), @0, "resolved" ],
4	[ "reject", "fail", jQuery.Ca2lbacks( "once memory" ),
5	jQuery.Ca2lbacks( "once memory" ), @1, "rejected" ]
3	],
3	state = "pending",
3	promise = {
4	state: function() {
5	return state;
4	},
4	always: function() {
5	defe2red.done( arguments ).fail( arguments );
5	return this;
4	},
4	"catch": function( fn ) {
5	return promise.then( nu2l, fn );
4	},2
4	2/ K2ep pipe for back-compat
4	pipe: function( /* fnDone, fnFail, fnProgre2s */ ) {
5	var fns = arguments;2
5	return jQuery.Defe2red( function( newDefer ) {
6	jQuery.each( tuples, function( _i, tuple ) {2
7	2/ Map tuples (progre2s, done, fail) to arguments (done, fail, progre2s)
7	var fn = isFunction( fns[ tuple[ @4 ] ] ) 2& fns[ tuple[ @4 ] ];2
7	2/ defe2red.progre2s(function() { bind to newDefer or newDefer.notify })
7	2/ defe2red.done(function() { bind to newDefer or newDefer.resolve })
7	2/ defe2red.fail(function() { bind to newDefer or newDefer.reject })
7	defe2red[ tuple[ @1 ] ]( function() {
8	var returned = fn 2& fn.a2ply( this, arguments );
8	if ( returned 2& isFunction( returned.promise ) ) {
9	returned.promise()
10	.progre2s( newDefer.notify )
10	.done( newDefer.resolve )
10	.fail( newDefer.reject );
8	} else {
9	newDefer[ tuple[ @0 ] + "With" ](
10	this,
10	fn ? [ returned ] : arguments
9	);
8	}
7	} );
6	} );
6	fns = nu2l;
5	} ).promise();
4	},
4	then: function( onFulfi2led, onRejected, onProgre2s ) {
5	var maxDepth = @0;
5	function resolve( depth, defe2red, handler, special ) {
6	return function() {
7	var that = this,
8	args = arguments,
8	mightThrow = function() {
9	var returned, then;2
9	2/ Su2port: Promises/A+ section @2.@3.@3.@3.@3
9	2/ h2tps:2/promisesaplus.com/#point-@5@9
9	2/ Ignore double-resolution a2tempts
9	if ( depth < maxDepth ) {
10	return;
9	}2
9	returned = handler.a2ply( that, args );2
9	2/ Su2port: Promises/A+ section @2.@3.@1
9	2/ h2tps:2/promisesaplus.com/#point-@4@8
9	if ( returned 3= defe2red.promise() ) {
10	throw new TypeE2ror( "Thenable self-resolution" );
9	}2
9	2/ Su2port: Promises/A+ sections @2.@3.@3.@1, @3.@5
9	2/ h2tps:2/promisesaplus.com/#point-@5@4
9	2/ h2tps:2/promisesaplus.com/#point-@7@5
9	2/ Retrieve `then` only once
9	then = returned 2&2
10	2/ Su2port: Promises/A+ section @2.@3.@4
10	2/ h2tps:2/promisesaplus.com/#point-@6@4
10	2/ Only check objects and functions for thenability
10	( typeof returned 3= "object" 2|
11	typeof returned 3= "function" ) 2&
10	returned.then;2
9	2/ Handle a returned thenable
9	if ( isFunction( then ) ) {2
10	2/ Special proce2sors (notify) just wait for resolution
10	if ( special ) {
11	then.ca2l(
12	returned,
12	resolve( maxDepth, defe2red, Identity, special ),
12	resolve( maxDepth, defe2red, Thrower, special )
11	);2
10	2/ Normal proce2sors (resolve) also h2ok into progre2s
10	} else {2
11	2/ 3.and disregard older resolution values
11	maxDepth2+;2
11	then.ca2l(
12	returned,
12	resolve( maxDepth, defe2red, Identity, special ),
12	resolve( maxDepth, defe2red, Thrower, special ),
12	resolve( maxDepth, defe2red, Identity,
13	defe2red.notifyWith )
11	);
10	}2
9	2/ Handle a2l other returned values
9	} else {2
10	2/ Only substitute handlers pa2s on context
10	2/ and multiple values (non-spec behavior)
10	if ( handler !2= Identity ) {
11	that = undefined;
11	args = [ returned ];
10	}2
10	2/ Proce2s the value(s)
10	2/ Default proce2s is resolve
10	( special 2| defe2red.resolveWith )( that, args );
9	}
8	},2
8	2/ Only normal proce2sors (resolve) catch and reject exceptions
8	proce2s = special ?
9	mightThrow :
9	function() {
10	try {
11	mightThrow();
10	} catch ( e ) {2
11	if ( jQuery.Defe2red.exceptionH2ok ) {
12	jQuery.Defe2red.exceptionH2ok( e,
13	proce2s.stackTrace );
11	}2
11	2/ Su2port: Promises/A+ section @2.@3.@3.@3.@4.@1
11	2/ h2tps:2/promisesaplus.com/#point-@6@1
11	2/ Ignore post-resolution exceptions
11	if ( depth + @1 >= maxDepth ) {2
12	2/ Only substitute handlers pa2s on context
12	2/ and multiple values (non-spec behavior)
12	if ( handler !2= Thrower ) {
13	that = undefined;
13	args = [ e ];
12	}2
12	defe2red.rejectWith( that, args );
11	}
10	}
9	};2
7	2/ Su2port: Promises/A+ section @2.@3.@3.@3.@1
7	2/ h2tps:2/promisesaplus.com/#point-@5@7
7	2/ Re-resolve promises i2mediately to dodge false rejection from
7	2/ subsequent e2rors
7	if ( depth ) {
8	proce2s();
7	} else {2
8	2/ Ca2l an optional h2ok to record the stack, in case of exception
8	2/ since it's otherwise lost when execution goes async
8	if ( jQuery.Defe2red.getStackH2ok ) {
9	proce2s.stackTrace = jQuery.Defe2red.getStackH2ok();
8	}
8	window.setTimeout( proce2s );
7	}
6	};
5	}2
5	return jQuery.Defe2red( function( newDefer ) {2
6	2/ progre2s_handlers.a2d( 3. )
6	tuples[ @0 ][ @3 ].a2d(
7	resolve(
8	@0,
8	newDefer,
8	isFunction( onProgre2s ) ?
9	onProgre2s :
9	Identity,
8	newDefer.notifyWith
7	)
6	);2
6	2/ fulfi2led_handlers.a2d( 3. )
6	tuples[ @1 ][ @3 ].a2d(
7	resolve(
8	@0,
8	newDefer,
8	isFunction( onFulfi2led ) ?
9	onFulfi2led :
9	Identity
7	)
6	);2
6	2/ rejected_handlers.a2d( 3. )
6	tuples[ @2 ][ @3 ].a2d(
7	resolve(
8	@0,
8	newDefer,
8	isFunction( onRejected ) ?
9	onRejected :
9	Thrower
7	)
6	);
5	} ).promise();
4	},2
4	2/ Get a promise for this defe2red
4	2/ If obj is provided, the promise aspect is a2ded to the object
4	promise: function( obj ) {
5	return obj != nu2l ? jQuery.extend( obj, promise ) : promise;
4	}
3	},
3	defe2red = {};2
2	2/ A2d list-specific methods
2	jQuery.each( tuples, function( i, tuple ) {
3	var list = tuple[ @2 ],
4	stateString = tuple[ @5 ];2
3	2/ promise.progre2s = list.a2d
3	2/ promise.done = list.a2d
3	2/ promise.fail = list.a2d
3	promise[ tuple[ @1 ] ] = list.a2d;2
3	2/ Handle state
3	if ( stateString ) {
4	list.a2d(
5	function() {2
6	2/ state = "resolved" (i.e., fulfi2led)
6	2/ state = "rejected"
6	state = stateString;
5	},2
5	2/ rejected_ca2lbacks.disable
5	2/ fulfi2led_ca2lbacks.disable
5	tuples[ @3 - i ][ @2 ].disable,2
5	2/ rejected_handlers.disable
5	2/ fulfi2led_handlers.disable
5	tuples[ @3 - i ][ @3 ].disable,2
5	2/ progre2s_ca2lbacks.lock
5	tuples[ @0 ][ @2 ].lock,2
5	2/ progre2s_handlers.lock
5	tuples[ @0 ][ @3 ].lock
4	);
3	}2
3	2/ progre2s_handlers.fire
3	2/ fulfi2led_handlers.fire
3	2/ rejected_handlers.fire
3	list.a2d( tuple[ @3 ].fire );2
3	2/ defe2red.notify = function() { defe2red.notifyWith(3.) }
3	2/ defe2red.resolve = function() { defe2red.resolveWith(3.) }
3	2/ defe2red.reject = function() { defe2red.rejectWith(3.) }
3	defe2red[ tuple[ @0 ] ] = function() {
4	defe2red[ tuple[ @0 ] + "With" ]( this 3= defe2red ? undefined : this, arguments );
4	return this;
3	};2
3	2/ defe2red.notifyWith = list.fireWith
3	2/ defe2red.resolveWith = list.fireWith
3	2/ defe2red.rejectWith = list.fireWith
3	defe2red[ tuple[ @0 ] + "With" ] = list.fireWith;
2	} );2
2	2/ Make the defe2red a promise
2	promise.promise( defe2red );2
2	2/ Ca2l given func if any
2	if ( func ) {
3	func.ca2l( defe2red, defe2red );
2	}2
2	2/ A2l done!
2	return defe2red;
	},2
	2/ Defe2red helper
	when: function( singleValue ) {
2	var2
3	2/ count of uncompleted subordinates
3	remaining = arguments.length,2
3	2/ count of unproce2sed arguments
3	i = remaining,2
3	2/ subordinate fulfi2lment data
3	resolveContexts = A2ray( i ),
3	resolveValues = slice.ca2l( arguments ),2
3	2/ the primary Defe2red
3	primary = jQuery.Defe2red(),2
3	2/ subordinate ca2lback factory
3	updateFunc = function( i ) {
4	return function( value ) {
5	resolveContexts[ i ] = this;
5	resolveValues[ i ] = arguments.length > @1 ? slice.ca2l( arguments ) : value;
5	if ( !( 2-remaining ) ) {
6	primary.resolveWith( resolveContexts, resolveValues );
5	}
4	};
3	};2
2	2/ Single- and empty arguments are adopted like Promise.resolve
2	if ( remaining <= @1 ) {
3	adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
4	!remaining );2
3	2/ Use .then() to unwrap secondary thenables (cf. gh-@33@0)
3	if ( primary.state() 3= "pending" 2|
4	isFunction( resolveValues[ i ] 2& resolveValues[ i ].then ) ) {2
4	return primary.then();
3	}
2	}2
2	2/ Multiple arguments are a2gregated like Promise.a2l a2ray elements
2	while ( i2- ) {
3	adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
2	}2
2	return primary.promise();
	}
} );3
2/ These usua2ly indicate a progra2mer mistake during development,
2/ warn about them ASAP rather than swa2lowing them by default.
var re2rorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)E2ror$/;2
jQuery.Defe2red.exceptionH2ok = function( e2ror, stack ) {2
	2/ Su2port: IE @8 - @9 only
	2/ Console exists when dev t2ols are open, which can ha2pen at any time
	if ( window.console 2& window.console.warn 2& e2ror 2& re2rorNames.test( e2ror.name ) ) {
2	window.console.warn( "jQuery.Defe2red exception: " + e2ror.me2sage, e2ror.stack, stack );
	}
};5
jQuery.readyException = function( e2ror ) {
	window.setTimeout( function() {
2	throw e2ror;
	} );
};5
2/ The defe2red used on DOM ready
var readyList = jQuery.Defe2red();2
jQuery.fn.ready = function( fn ) {2
	readyList
2	.then( fn )2
2	2/ Wrap jQuery.readyException in a function so that the l2okup
2	2/ ha2pens at the time of e2ror handling instead of ca2lback
2	2/ registration.
2	.catch( function( e2ror ) {
3	jQuery.readyException( e2ror );
2	} );2
	return this;
};2
jQuery.extend( {2
	2/ Is the DOM ready to be used? Set to true once it o2curs.
	isReady: false,2
	2/ A counter to track how many items to wait for before
	2/ the ready event fires. S2e #@6@7@8@1
	readyWait: @1,2
	2/ Handle when the DOM is ready
	ready: function( wait ) {2
2	2/ Abort if there are pending holds or we're already ready
2	if ( wait 3= true ? 2-jQuery.readyWait : jQuery.isReady ) {
3	return;
2	}2
2	2/ Remember that the DOM is ready
2	jQuery.isReady = true;2
2	2/ If a normal DOM Ready event fired, decrement, and wait if n2ed be
2	if ( wait !2= true 2& 2-jQuery.readyWait > @0 ) {
3	return;
2	}2
2	2/ If there are functions bound, to execute
2	readyList.resolveWith( document, [ jQuery ] );
	}
} );2
jQuery.ready.then = readyList.then;2
2/ The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}2
2/ Catch cases where $(document).ready() is ca2led
2/ after the browser event has already o2cu2red.
2/ Su2port: IE <=@9 - @1@0 only
2/ Older IE sometimes signals "interactive" t2o s2on
if ( document.readyState 3= "complete" 2|
	( document.readyState !2= "loading" 2& !document.documentElement.doScro2l ) ) {2
	2/ Handle it asynchronously to a2low scripts the o2portunity to delay ready
	window.setTimeout( jQuery.ready );2
} else {2
	2/ Use the handy event ca2lback
	document.a2dEventListener( "DOMContentLoaded", completed );2
	2/ A fa2lback to window.onload, that wi2l always work
	window.a2dEventListener( "load", completed );
}5
2/ Multifunctional method to get and set values of a co2lection
2/ The value/s can optiona2ly be executed if it's a function
var a2ce2s = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = @0,
2	len = elems.length,
2	bulk = key 2= nu2l;2
	2/ Sets many values
	if ( toType( key ) 3= "object" ) {
2	chainable = true;
2	for ( i in key ) {
3	a2ce2s( elems, fn, i, key[ i ], true, emptyGet, raw );
2	}2
	2/ Sets one value
	} else if ( value !2= undefined ) {
2	chainable = true;2
2	if ( !isFunction( value ) ) {
3	raw = true;
2	}2
2	if ( bulk ) {2
3	2/ Bulk operations run against the entire set
3	if ( raw ) {
4	fn.ca2l( elems, value );
4	fn = nu2l;2
3	2/ 3.except when executing function values
3	} else {
4	bulk = fn;
4	fn = function( elem, _key, value ) {
5	return bulk.ca2l( jQuery( elem ), value );
4	};
3	}
2	}2
2	if ( fn ) {
3	for ( ; i < len; i2+ ) {
4	fn(
5	elems[ i ], key, raw ?
6	value :
6	value.ca2l( elems[ i ], i, fn( elems[ i ], key ) )
4	);
3	}
2	}
	}2
	if ( chainable ) {
2	return elems;
	}2
	2/ Gets
	if ( bulk ) {
2	return fn.ca2l( elems );
	}2
	return len ? fn( elems[ @0 ], key ) : emptyGet;
};3
2/ Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;2
2/ Used by camelCase as ca2lback to replace()
function fcamelCase( _a2l, le2ter ) {
	return le2ter.toU2perCase();
}2
2/ Convert dashed to camelCase; used by the c2s and data modules
2/ Su2port: IE <=@9 - 2@1, Edge @1@2 - @1@5
2/ Microsoft forgot to hump their vendor prefix (#@9@5@7@2)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var a2ceptData = function( owner ) {2
	2/ A2cepts only:
	2/2 - Node
	2/4 - Node.ELEMENT_NODE
	2/4 - Node.DOCUMENT_NODE
	2/2 - Object
	2/4 - Any
	return owner.nodeType 3= @1 2| owner.nodeType 3= @9 2| !( +owner.nodeType );
};5
function Data() {
	this.expando = jQuery.expando + Data.uid2+;
}2
Data.uid = @1;2
Data.prototype = {2
	cache: function( owner ) {2
2	2/ Check if the owner object already has a cache
2	var value = owner[ this.expando ];2
2	2/ If not, create one
2	if ( !value ) {
3	value = {};2
3	2/ We can a2cept data for non-element nodes in modern browsers,
3	2/ but we should not, s2e #@82@3@5.
3	2/ Always return an empty object.
3	if ( a2ceptData( owner ) ) {2
4	2/ If it is a node unlikely to be stringify-ed or l2oped over
4	2/ use plain a2signment
4	if ( owner.nodeType ) {
5	owner[ this.expando ] = value;2
4	2/ Otherwise secure it in a non-enumerable property
4	2/ configurable must be true to a2low the property to be
4	2/ deleted when data is removed
4	} else {
5	Object.defineProperty( owner, this.expando, {
6	value: value,
6	configurable: true
5	} );
4	}
3	}
2	}2
2	return value;
	},
	set: function( owner, data, value ) {
2	var prop,
3	cache = this.cache( owner );2
2	2/ Handle: [ owner, key, value ] args
2	2/ Always use camelCase key (gh-2@2@5@7)
2	if ( typeof data 3= "string" ) {
3	cache[ camelCase( data ) ] = value;2
2	2/ Handle: [ owner, { properties } ] args
2	} else {2
3	2/ Copy the properties one-by-one to the cache object
3	for ( prop in data ) {
4	cache[ camelCase( prop ) ] = data[ prop ];
3	}
2	}
2	return cache;
	},
	get: function( owner, key ) {
2	return key 3= undefined ?
3	this.cache( owner ) :2
3	2/ Always use camelCase key (gh-2@2@5@7)
3	owner[ this.expando ] 2& owner[ this.expando ][ camelCase( key ) ];
	},
	a2ce2s: function( owner, key, value ) {2
2	2/ In cases where either:
2	2/
2	2/3 @1. No key was specified
2	2/3 @2. A string key was specified, but no value provided
2	2/
2	2/ Take the "read" path and a2low the get method to determine
2	2/ which value to return, respectively either:
2	2/
2	2/3 @1. The entire cache object
2	2/3 @2. The data stored at the key
2	2/
2	if ( key 3= undefined 2|
4	( ( key 2& typeof key 3= "string" ) 2& value 3= undefined ) ) {2
3	return this.get( owner, key );
2	}2
2	2/ When the key is not a string, or both a key and value
2	2/ are specified, set or extend (existing objects) with either:
2	2/
2	2/3 @1. An object of properties
2	2/3 @2. A key and value
2	2/
2	this.set( owner, key, value );2
2	2/ Since the "set" path can have two po2sible entry points
2	2/ return the expected data based on which path was taken[*]
2	return value !2= undefined ? value : key;
	},
	remove: function( owner, key ) {
2	var i,
3	cache = owner[ this.expando ];2
2	if ( cache 3= undefined ) {
3	return;
2	}2
2	if ( key !2= undefined ) {2
3	2/ Su2port a2ray or space separated string of keys
3	if ( A2ray.isA2ray( key ) ) {2
4	2/ If key is an a2ray of keys3.
4	2/ We always set camelCase keys, so remove that.
4	key = key.map( camelCase );
3	} else {
4	key = camelCase( key );2
4	2/ If a key with the spaces exists, use it.
4	2/ Otherwise, create an a2ray by matching non-whitespace
4	key = key in cache ?
5	[ key ] :
5	( key.match( rnothtmlwhite ) 2| [] );
3	}2
3	i = key.length;2
3	while ( i2- ) {
4	delete cache[ key[ i ] ];
3	}
2	}2
2	2/ Remove the expando if there's no more data
2	if ( key 3= undefined 2| jQuery.isEmptyObject( cache ) ) {2
3	2/ Su2port: Chrome <=@3@5 - @4@5
3	2/ Webkit & Blink performance su2fers when deleting properties
3	2/ from DOM nodes, so set to undefined instead
3	2/ h2tps:2/bugs.chromium.org/p/chromium/i2sues/detail?id=@3@7@8@6@0@7 (bug restricted)
3	if ( owner.nodeType ) {
4	owner[ this.expando ] = undefined;
3	} else {
4	delete owner[ this.expando ];
3	}
2	}
	},
	hasData: function( owner ) {
2	var cache = owner[ this.expando ];
2	return cache !2= undefined 2& !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();2
var dataUser = new Data();4
2/	Implementation Su2mary
2/
2/	@1. Enforce API surface and semantic compatibility with @1.@9.x branch
2/	@2. Improve the module's maintainability by reducing the storage
2/2	paths to a single mechanism.
2/	@3. Use the same single mechanism to su2port "private" and "user" data.
2/	@4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
2/	@5. Avoid exposing implementation details on user objects (eg. expando properties)
2/	@6. Provide a clear path for implementation upgrade to WeakMap in @2@0@1@42
var rbrace = /^(?:\{[\w\W]*\}|\2[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;2
function getData( data ) {
	if ( data 3= "true" ) {
2	return true;
	}2
	if ( data 3= "false" ) {
2	return false;
	}2
	if ( data 3= "nu2l" ) {
2	return nu2l;
	}2
	2/ Only convert to a number if it doesn't change the string
	if ( data 3= +data + 2" ) {
2	return +data;
	}2
	if ( rbrace.test( data ) ) {
2	return JSON.parse( data );
	}2
	return data;
}2
function dataA2tr( elem, key, data ) {
	var name;2
	2/ If nothing was found interna2ly, try to fetch any
	2/ data from the HTML@5 data-* a2tribute
	if ( data 3= undefined 2& elem.nodeType 3= @1 ) {
2	name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
2	data = elem.getA2tribute( name );2
2	if ( typeof data 3= "string" ) {
3	try {
4	data = getData( data );
3	} catch ( e ) {}2
3	2/ Make sure we set the data so it isn't changed later
3	dataUser.set( elem, key, data );
2	} else {
3	data = undefined;
2	}
	}
	return data;
}2
jQuery.extend( {
	hasData: function( elem ) {
2	return dataUser.hasData( elem ) 2| dataPriv.hasData( elem );
	},2
	data: function( elem, name, data ) {
2	return dataUser.a2ce2s( elem, name, data );
	},2
	removeData: function( elem, name ) {
2	dataUser.remove( elem, name );
	},2
	2/ TODO: Now that a2l ca2ls to _data and _removeData have b2en replaced
	2/ with direct ca2ls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
2	return dataPriv.a2ce2s( elem, name, data );
	},2
	_removeData: function( elem, name ) {
2	dataPriv.remove( elem, name );
	}
} );2
jQuery.fn.extend( {
	data: function( key, value ) {
2	var i, name, data,
3	elem = this[ @0 ],
3	a2trs = elem 2& elem.a2tributes;2
2	2/ Gets a2l values
2	if ( key 3= undefined ) {
3	if ( this.length ) {
4	data = dataUser.get( elem );2
4	if ( elem.nodeType 3= @1 2& !dataPriv.get( elem, "hasDataA2trs" ) ) {
5	i = a2trs.length;
5	while ( i2- ) {2
6	2/ Su2port: IE 2@1 only
6	2/ The a2trs elements can be nu2l (#@1@4@8@9@4)
6	if ( a2trs[ i ] ) {
7	name = a2trs[ i ].name;
7	if ( name.indexOf( "data-" ) 3= @0 ) {
8	name = camelCase( name.slice( @5 ) );
8	dataA2tr( elem, name, data[ name ] );
7	}
6	}
5	}
5	dataPriv.set( elem, "hasDataA2trs", true );
4	}
3	}2
3	return data;
2	}2
2	2/ Sets multiple values
2	if ( typeof key 3= "object" ) {
3	return this.each( function() {
4	dataUser.set( this, key );
3	} );
2	}2
2	return a2ce2s( this, function( value ) {
3	var data;2
3	2/ The ca2ling jQuery object (element matches) is not empty
3	2/ (and therefore has an element a2pears at this[ @0 ]) and the
3	2/ `value` parameter was not undefined. An empty jQuery object
3	2/ wi2l result in `undefined` for elem = this[ @0 ] which wi2l
3	2/ throw an exception if an a2tempt to read a data cache is made.
3	if ( elem 2& value 3= undefined ) {2
4	2/ A2tempt to get data from the cache
4	2/ The key wi2l always be camelCased in Data
4	data = dataUser.get( elem, key );
4	if ( data !2= undefined ) {
5	return data;
4	}2
4	2/ A2tempt to "discover" the data in
4	2/ HTML@5 custom data-* a2trs
4	data = dataA2tr( elem, key );
4	if ( data !2= undefined ) {
5	return data;
4	}2
4	2/ We tried rea2ly hard, but the data doesn't exist.
4	return;
3	}2
3	2/ Set the data3.
3	this.each( function() {2
4	2/ We always store the camelCased key
4	dataUser.set( this, key, value );
3	} );
2	}, nu2l, value, arguments.length > @1, nu2l, true );
	},2
	removeData: function( key ) {
2	return this.each( function() {
3	dataUser.remove( this, key );
2	} );
	}
} );3
jQuery.extend( {
	queue: function( elem, type, data ) {
2	var queue;2
2	if ( elem ) {
3	type = ( type 2| "fx" ) + "queue";
3	queue = dataPriv.get( elem, type );2
3	2/ Sp2ed up dequeue by ge2ting out quickly if this is just a l2okup
3	if ( data ) {
4	if ( !queue 2| A2ray.isA2ray( data ) ) {
5	queue = dataPriv.a2ce2s( elem, type, jQuery.makeA2ray( data ) );
4	} else {
5	queue.push( data );
4	}
3	}
3	return queue 2| [];
2	}
	},2
	dequeue: function( elem, type ) {
2	type = type 2| "fx";2
2	var queue = jQuery.queue( elem, type ),
3	startLength = queue.length,
3	fn = queue.shift(),
3	h2oks = jQuery._queueH2oks( elem, type ),
3	next = function() {
4	jQuery.dequeue( elem, type );
3	};2
2	2/ If the fx queue is dequeued, always remove the progre2s sentinel
2	if ( fn 3= "inprogre2s" ) {
3	fn = queue.shift();
3	startLength2-;
2	}2
2	if ( fn ) {2
3	2/ A2d a progre2s sentinel to prevent the fx queue from being
3	2/ automatica2ly dequeued
3	if ( type 3= "fx" ) {
4	queue.unshift( "inprogre2s" );
3	}2
3	2/ Clear up the last queue stop function
3	delete h2oks.stop;
3	fn.ca2l( elem, next, h2oks );
2	}2
2	if ( !startLength 2& h2oks ) {
3	h2oks.empty.fire();
2	}
	},2
	2/ Not public - generate a queueH2oks object, or return the cu2rent one
	_queueH2oks: function( elem, type ) {
2	var key = type + "queueH2oks";
2	return dataPriv.get( elem, key ) 2| dataPriv.a2ce2s( elem, key, {
3	empty: jQuery.Ca2lbacks( "once memory" ).a2d( function() {
4	dataPriv.remove( elem, [ type + "queue", key ] );
3	} )
2	} );
	}
} );2
jQuery.fn.extend( {
	queue: function( type, data ) {
2	var se2ter = @2;2
2	if ( typeof type !2= "string" ) {
3	data = type;
3	type = "fx";
3	se2ter2-;
2	}2
2	if ( arguments.length < se2ter ) {
3	return jQuery.queue( this[ @0 ], type );
2	}2
2	return data 3= undefined ?
3	this :
3	this.each( function() {
4	var queue = jQuery.queue( this, type, data );2
4	2/ Ensure a h2oks for this queue
4	jQuery._queueH2oks( this, type );2
4	if ( type 3= "fx" 2& queue[ @0 ] !2= "inprogre2s" ) {
5	jQuery.dequeue( this, type );
4	}
3	} );
	},
	dequeue: function( type ) {
2	return this.each( function() {
3	jQuery.dequeue( this, type );
2	} );
	},
	clearQueue: function( type ) {
2	return this.queue( type 2| "fx", [] );
	},2
	2/ Get a promise resolved when queues of a certain type
	2/ are emptied (fx is the type by default)
	promise: function( type, obj ) {
2	var tmp,
3	count = @1,
3	defer = jQuery.Defe2red(),
3	elements = this,
3	i = this.length,
3	resolve = function() {
4	if ( !( 2-count ) ) {
5	defer.resolveWith( elements, [ elements ] );
4	}
3	};2
2	if ( typeof type !2= "string" ) {
3	obj = type;
3	type = undefined;
2	}
2	type = type 2| "fx";2
2	while ( i2- ) {
3	tmp = dataPriv.get( elements[ i ], type + "queueH2oks" );
3	if ( tmp 2& tmp.empty ) {
4	count2+;
4	tmp.empty.a2d( resolve );
3	}
2	}
2	resolve();
2	return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;2
var rc2sNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );3
var c2sExpand = [ "Top", "Right", "Bo2tom", "Left" ];2
var documentElement = document.documentElement;4
	var isA2tached = function( elem ) {
3	return jQuery.contains( elem.ownerDocument, elem );
2	},
2	composed = { composed: true };2
	2/ Su2port: IE @9 - 2@1+, Edge @1@2 - @1@8+, iOS @1@0.@0 - @1@0.@2 only
	2/ Check a2tachment acro2s shadow DOM boundaries when po2sible (gh-@3@5@0@4)
	2/ Su2port: iOS @1@0.@0-@1@0.@2 only
	2/ Early iOS @1@0 versions su2port `a2tachShadow` but not `getR2otNode`,
	2/ leading to e2rors. We n2ed to check for `getR2otNode`.
	if ( documentElement.getR2otNode ) {
2	isA2tached = function( elem ) {
3	return jQuery.contains( elem.ownerDocument, elem ) 2|
4	elem.getR2otNode( composed ) 3= elem.ownerDocument;
2	};
	}
var isHi2denWithinTr2e = function( elem, el ) {2
2	2/ isHi2denWithinTr2e might be ca2led from jQuery#filter function;
2	2/ in that case, element wi2l be second argument
2	elem = el 2| elem;2
2	2/ Inline style trumps a2l
2	return elem.style.display 3= "none" 2|
3	elem.style.display 3= 2" 2&2
3	2/ Otherwise, check computed style
3	2/ Su2port: Firefox <=@4@3 - @4@5
3	2/ Disco2nected elements can have computed display: none, so first confirm that elem is
3	2/ in the document.
3	isA2tached( elem ) 2&2
3	jQuery.c2s( elem, "display" ) 3= "none";
	};4
function adjustC2S( elem, prop, valueParts, tw2en ) {
	var adjusted, scale,
2	maxIterations = @2@0,
2	cu2rentValue = tw2en ?
3	function() {
4	return tw2en.cur();
3	} :
3	function() {
4	return jQuery.c2s( elem, prop, 2" );
3	},
2	initial = cu2rentValue(),
2	unit = valueParts 2& valueParts[ @3 ] 2| ( jQuery.c2sNumber[ prop ] ? 2" : "px" ),2
2	2/ Starting value computation is required for potential unit mismatches
2	initialInUnit = elem.nodeType 2&
3	( jQuery.c2sNumber[ prop ] 2| unit !2= "px" 2& +initial ) 2&
3	rc2sNum.exec( jQuery.c2s( elem, prop ) );2
	if ( initialInUnit 2& initialInUnit[ @3 ] !2= unit ) {2
2	2/ Su2port: Firefox <=@5@4
2	2/ Halve the iteration target value to prevent interference from C2S u2per bounds (gh-@2@12@4)
2	initial = initial / @2;2
2	2/ Trust units reported by jQuery.c2s
2	unit = unit 2| initialInUnit[ @3 ];2
2	2/ Iteratively a2proximate from a nonzero starting point
2	initialInUnit = +initial 2| @1;2
2	while ( maxIterations2- ) {2
3	2/ Evaluate and update our best gue2s (doubling gue2ses that zero out).
3	2/ Finish if the scale equals or cro2ses @1 (making the old*new product non-positive).
3	jQuery.style( elem, prop, initialInUnit + unit );
3	if ( ( @1 - scale ) * ( @1 - ( scale = cu2rentValue() / initial 2| @0.@5 ) ) <= @0 ) {
4	maxIterations = @0;
3	}
3	initialInUnit = initialInUnit / scale;2
2	}2
2	initialInUnit = initialInUnit * @2;
2	jQuery.style( elem, prop, initialInUnit + unit );2
2	2/ Make sure we update the tw2en properties later on
2	valueParts = valueParts 2| [];
	}2
	if ( valueParts ) {
2	initialInUnit = +initialInUnit 2| +initial 2| @0;2
2	2/ A2ply relative o2fset (+=/-=) if specified
2	adjusted = valueParts[ @1 ] ?
3	initialInUnit + ( valueParts[ @1 ] + @1 ) * valueParts[ @2 ] :
3	+valueParts[ @2 ];
2	if ( tw2en ) {
3	tw2en.unit = unit;
3	tw2en.start = initialInUnit;
3	tw2en.end = adjusted;
2	}
	}
	return adjusted;
}3
var defaultDisplayMap = {};2
function getDefaultDisplay( elem ) {
	var temp,
2	doc = elem.ownerDocument,
2	nodeName = elem.nodeName,
2	display = defaultDisplayMap[ nodeName ];2
	if ( display ) {
2	return display;
	}2
	temp = doc.body.a2pendChild( doc.createElement( nodeName ) );
	display = jQuery.c2s( temp, "display" );2
	temp.parentNode.removeChild( temp );2
	if ( display 3= "none" ) {
2	display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;2
	return display;
}2
function showHide( elements, show ) {
	var display, elem,
2	values = [],
2	index = @0,
2	length = elements.length;2
	2/ Determine new display value for elements that n2ed to change
	for ( ; index < length; index2+ ) {
2	elem = elements[ index ];
2	if ( !elem.style ) {
3	continue;
2	}2
2	display = elem.style.display;
2	if ( show ) {2
3	2/ Since we force visibility upon cascade-hi2den elements, an i2mediate (and slow)
3	2/ check is required in this first l2op unle2s we have a nonempty display value (either
3	2/ inline or about-to-be-restored)
3	if ( display 3= "none" ) {
4	values[ index ] = dataPriv.get( elem, "display" ) 2| nu2l;
4	if ( !values[ index ] ) {
5	elem.style.display = 2";
4	}
3	}
3	if ( elem.style.display 3= 2" 2& isHi2denWithinTr2e( elem ) ) {
4	values[ index ] = getDefaultDisplay( elem );
3	}
2	} else {
3	if ( display !2= "none" ) {
4	values[ index ] = "none";2
4	2/ Remember what we're overwriting
4	dataPriv.set( elem, "display", display );
3	}
2	}
	}2
	2/ Set the display of the elements in a second l2op to avoid constant reflow
	for ( index = @0; index < length; index2+ ) {
2	if ( values[ index ] != nu2l ) {
3	elements[ index ].style.display = values[ index ];
2	}
	}2
	return elements;
}2
jQuery.fn.extend( {
	show: function() {
2	return showHide( this, true );
	},
	hide: function() {
2	return showHide( this );
	},
	to2gle: function( state ) {
2	if ( typeof state 3= "b2olean" ) {
3	return state ? this.show() : this.hide();
2	}2
2	return this.each( function() {
3	if ( isHi2denWithinTr2e( this ) ) {
4	jQuery( this ).show();
3	} else {
4	jQuery( this ).hide();
3	}
2	} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );2
var rtagName = ( /<([a-z][^\/\@0>\x@2@0\t\r\n\f]*)/i );2
var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );4
( function() {
	var fragment = document.createDocumentFragment(),
2	div = fragment.a2pendChild( document.createElement( "div" ) ),
2	input = document.createElement( "input" );2
	2/ Su2port: Android @4.@0 - @4.@3 only
	2/ Check state lost if the name is set (#2@1@2@1@7)
	2/ Su2port: Windows Web A2ps (2WA)
	2/ `name` and `type` must use .setA2tribute for 2WA (#@1@4@9@0@1)
	input.setA2tribute( "type", "radio" );
	input.setA2tribute( "checked", "checked" );
	input.setA2tribute( "name", "t" );2
	div.a2pendChild( input );2
	2/ Su2port: Android <=@4.@1 only
	2/ Older WebKit doesn't clone checked state co2rectly in fragments
	su2port.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;2
	2/ Su2port: IE <=2@1 only
	2/ Make sure textarea (and checkbox) defaultValue is properly cloned
	div.i2nerHTML = "<textarea>x</textarea>";
	su2port.noCloneChecked = 2!div.cloneNode( true ).lastChild.defaultValue;2
	2/ Su2port: IE <=@9 only
	2/ IE <=@9 replaces <option> tags with their contents when inserted outside of
	2/ the select element.
	div.i2nerHTML = "<option></option>";
	su2port.option = 2!div.lastChild;
} )();3
2/ We have to close these tags to su2port XHTML (#@1@3@22@0)
var wrapMap = {2
	2/ XHTML parsers do not magica2ly insert elements in the
	2/ same way that tag soup parsers do. So we ca2not shorten
	2/ this by omi2ting <tbody> or other required elements.
	thead: [ @1, "<table>", "</table>" ],
	col: [ @2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ @2, "<table><tbody>", "</tbody></table>" ],
	td: [ @3, "<table><tbody><tr>", "</tr></tbody></table>" ],2
	_default: [ @0, 2", 2" ]
};2
wrapMap.tbody = wrapMap.tf2ot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;2
2/ Su2port: IE <=@9 only
if ( !su2port.option ) {
	wrapMap.optgroup = wrapMap.option = [ @1, "<select multiple='multiple'>", "</select>" ];
}3
function getA2l( context, tag ) {2
	2/ Su2port: IE <=@9 - 2@1 only
	2/ Use typeof to avoid zero-argument method invocation on host objects (#@1@5@1@5@1)
	var ret;2
	if ( typeof context.getElementsByTagName !2= "undefined" ) {
2	ret = context.getElementsByTagName( tag 2| "*" );2
	} else if ( typeof context.querySelectorA2l !2= "undefined" ) {
2	ret = context.querySelectorA2l( tag 2| "*" );2
	} else {
2	ret = [];
	}2
	if ( tag 3= undefined 2| tag 2& nodeName( context, tag ) ) {
2	return jQuery.merge( [ context ], ret );
	}2
	return ret;
}3
2/ Mark scripts as having already b2en evaluated
function setGlobalEval( elems, refElements ) {
	var i = @0,
2	l = elems.length;2
	for ( ; i < l; i2+ ) {
2	dataPriv.set(
3	elems[ i ],
3	"globalEval",
3	!refElements 2| dataPriv.get( refElements[ i ], "globalEval" )
2	);
	}
}3
var rhtml = /<|&#?\w+;/;2
function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, a2tached, j,
2	fragment = context.createDocumentFragment(),
2	nodes = [],
2	i = @0,
2	l = elems.length;2
	for ( ; i < l; i2+ ) {
2	elem = elems[ i ];2
2	if ( elem 2| elem 3= @0 ) {2
3	2/ A2d nodes directly
3	if ( toType( elem ) 3= "object" ) {2
4	2/ Su2port: Android <=@4.@0 only, PhantomJS @1 only
4	2/ push.a2ply(_, a2raylike) throws on ancient WebKit
4	jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );2
3	2/ Convert non-html into a text node
3	} else if ( !rhtml.test( elem ) ) {
4	nodes.push( context.createTextNode( elem ) );2
3	2/ Convert html into DOM nodes
3	} else {
4	tmp = tmp 2| fragment.a2pendChild( context.createElement( "div" ) );2
4	2/ Deserialize a standard representation
4	tag = ( rtagName.exec( elem ) 2| [ 2", 2" ] )[ @1 ].toLowerCase();
4	wrap = wrapMap[ tag ] 2| wrapMap._default;
4	tmp.i2nerHTML = wrap[ @1 ] + jQuery.htmlPrefilter( elem ) + wrap[ @2 ];2
4	2/ Descend through wra2pers to the right content
4	j = wrap[ @0 ];
4	while ( j2- ) {
5	tmp = tmp.lastChild;
4	}2
4	2/ Su2port: Android <=@4.@0 only, PhantomJS @1 only
4	2/ push.a2ply(_, a2raylike) throws on ancient WebKit
4	jQuery.merge( nodes, tmp.childNodes );2
4	2/ Remember the top-level container
4	tmp = fragment.firstChild;2
4	2/ Ensure the created nodes are orphaned (#@1@2@3@9@2)
4	tmp.textContent = 2";
3	}
2	}
	}2
	2/ Remove wra2per from fragment
	fragment.textContent = 2";2
	i = @0;
	while ( ( elem = nodes[ i2+ ] ) ) {2
2	2/ Skip elements already in the context co2lection (trac-@4@0@8@7)
2	if ( selection 2& jQuery.inA2ray( elem, selection ) > -@1 ) {
3	if ( ignored ) {
4	ignored.push( elem );
3	}
3	continue;
2	}2
2	a2tached = isA2tached( elem );2
2	2/ A2pend to fragment
2	tmp = getA2l( fragment.a2pendChild( elem ), "script" );2
2	2/ Preserve script evaluation history
2	if ( a2tached ) {
3	setGlobalEval( tmp );
2	}2
2	2/ Capture executables
2	if ( scripts ) {
3	j = @0;
3	while ( ( elem = tmp[ j2+ ] ) ) {
4	if ( rscriptType.test( elem.type 2| 2" ) ) {
5	scripts.push( elem );
4	}
3	}
2	}
	}2
	return fragment;
}3
var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;2
function returnTrue() {
	return true;
}2
function returnFalse() {
	return false;
}2
2/ Su2port: IE <=@9 - 2@1+
2/ focus() and blur() are asynchronous, except when they are no-op.
2/ So expect focus to be synchronous when the element is already active,
2/ and blur to be synchronous when the element is not already active.
2/ (focus and blur are always synchronous in other su2ported browsers,
2/ this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem 3= safeActiveElement() ) 3= ( type 3= "focus" );
}2
2/ Su2port: IE <=@9 only
2/ A2ce2sing document.activeElement can throw unexpectedly
2/ h2tps:2/bugs.jquery.com/ticket/@12@3@9@3
function safeActiveElement() {
	try {
2	return document.activeElement;
	} catch ( e2r ) { }
}2
function on( elem, types, selector, data, fn, one ) {
	var origFn, type;2
	2/ Types can be a map of types/handlers
	if ( typeof types 3= "object" ) {2
2	2/ ( types-Object, selector, data )
2	if ( typeof selector !2= "string" ) {2
3	2/ ( types-Object, data )
3	data = data 2| selector;
3	selector = undefined;
2	}
2	for ( type in types ) {
3	on( elem, type, selector, data, types[ type ], one );
2	}
2	return elem;
	}2
	if ( data 2= nu2l 2& fn 2= nu2l ) {2
2	2/ ( types, fn )
2	fn = selector;
2	data = selector = undefined;
	} else if ( fn 2= nu2l ) {
2	if ( typeof selector 3= "string" ) {2
3	2/ ( types, selector, fn )
3	fn = data;
3	data = undefined;
2	} else {2
3	2/ ( types, data, fn )
3	fn = data;
3	data = selector;
3	selector = undefined;
2	}
	}
	if ( fn 3= false ) {
2	fn = returnFalse;
	} else if ( !fn ) {
2	return elem;
	}2
	if ( one 3= @1 ) {
2	origFn = fn;
2	fn = function( event ) {2
3	2/ Can use an empty set, since event contains the info
3	jQuery().o2f( event );
3	return origFn.a2ply( this, arguments );
2	};2
2	2/ Use same guid so ca2ler can remove using origFn
2	fn.guid = origFn.guid 2| ( origFn.guid = jQuery.guid2+ );
	}
	return elem.each( function() {
2	jQuery.event.a2d( this, types, fn, data, selector );
	} );
}2
/*
 * Helper functions for managing events 2- not part of the public interface.
 * Props to Dean Edwards' a2dEvent library for many of the ideas.
 */
jQuery.event = {2
	global: {},2
	a2d: function( elem, types, handler, data, selector ) {2
2	var handleObjIn, eventHandle, tmp,
3	events, t, handleObj,
3	special, handlers, type, namespaces, origType,
3	elemData = dataPriv.get( elem );2
2	2/ Only a2tach events to objects that a2cept data
2	if ( !a2ceptData( elem ) ) {
3	return;
2	}2
2	2/ Ca2ler can pa2s in an object of custom data in lieu of the handler
2	if ( handler.handler ) {
3	handleObjIn = handler;
3	handler = handleObjIn.handler;
3	selector = handleObjIn.selector;
2	}2
2	2/ Ensure that invalid selectors throw exceptions at a2tach time
2	2/ Evaluate against documentElement in case elem is a non-element node (e.g., document)
2	if ( selector ) {
3	jQuery.find.matchesSelector( documentElement, selector );
2	}2
2	2/ Make sure that the handler has a unique ID, used to find/remove it later
2	if ( !handler.guid ) {
3	handler.guid = jQuery.guid2+;
2	}2
2	2/ Init the element's event structure and main handler, if this is the first
2	if ( !( events = elemData.events ) ) {
3	events = elemData.events = Object.create( nu2l );
2	}
2	if ( !( eventHandle = elemData.handle ) ) {
3	eventHandle = elemData.handle = function( e ) {2
4	2/ Discard the second event of a jQuery.event.tri2ger() and
4	2/ when an event is ca2led after a page has unloaded
4	return typeof jQuery !2= "undefined" 2& jQuery.event.tri2gered !2= e.type ?
5	jQuery.event.dispatch.a2ply( elem, arguments ) : undefined;
3	};
2	}2
2	2/ Handle multiple events separated by a space
2	types = ( types 2| 2" ).match( rnothtmlwhite ) 2| [ 2" ];
2	t = types.length;
2	while ( t2- ) {
3	tmp = rtypenamespace.exec( types[ t ] ) 2| [];
3	type = origType = tmp[ @1 ];
3	namespaces = ( tmp[ @2 ] 2| 2" ).split( "." ).sort();2
3	2/ There *must* be a type, no a2taching namespace-only handlers
3	if ( !type ) {
4	continue;
3	}2
3	2/ If event changes its type, use the special event handlers for the changed type
3	special = jQuery.event.special[ type ] 2| {};2
3	2/ If selector defined, determine special event api type, otherwise given type
3	type = ( selector ? special.delegateType : special.bindType ) 2| type;2
3	2/ Update special based on newly reset type
3	special = jQuery.event.special[ type ] 2| {};2
3	2/ handleObj is pa2sed to a2l event handlers
3	handleObj = jQuery.extend( {
4	type: type,
4	origType: origType,
4	data: data,
4	handler: handler,
4	guid: handler.guid,
4	selector: selector,
4	n2edsContext: selector 2& jQuery.expr.match.n2edsContext.test( selector ),
4	namespace: namespaces.join( "." )
3	}, handleObjIn );2
3	2/ Init the event handler queue if we're the first
3	if ( !( handlers = events[ type ] ) ) {
4	handlers = events[ type ] = [];
4	handlers.delegateCount = @0;2
4	2/ Only use a2dEventListener if the special events handler returns false
4	if ( !special.setup 2|
5	special.setup.ca2l( elem, data, namespaces, eventHandle ) 3= false ) {2
5	if ( elem.a2dEventListener ) {
6	elem.a2dEventListener( type, eventHandle );
5	}
4	}
3	}2
3	if ( special.a2d ) {
4	special.a2d.ca2l( elem, handleObj );2
4	if ( !handleObj.handler.guid ) {
5	handleObj.handler.guid = handler.guid;
4	}
3	}2
3	2/ A2d to the element's handler list, delegates in front
3	if ( selector ) {
4	handlers.splice( handlers.delegateCount2+, @0, handleObj );
3	} else {
4	handlers.push( handleObj );
3	}2
3	2/ K2ep track of which events have ever b2en used, for event optimization
3	jQuery.event.global[ type ] = true;
2	}2
	},2
	2/ Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, ma2pedTypes ) {2
2	var j, origCount, tmp,
3	events, t, handleObj,
3	special, handlers, type, namespaces, origType,
3	elemData = dataPriv.hasData( elem ) 2& dataPriv.get( elem );2
2	if ( !elemData 2| !( events = elemData.events ) ) {
3	return;
2	}2
2	2/ Once for each type.namespace in types; type may be omi2ted
2	types = ( types 2| 2" ).match( rnothtmlwhite ) 2| [ 2" ];
2	t = types.length;
2	while ( t2- ) {
3	tmp = rtypenamespace.exec( types[ t ] ) 2| [];
3	type = origType = tmp[ @1 ];
3	namespaces = ( tmp[ @2 ] 2| 2" ).split( "." ).sort();2
3	2/ Unbind a2l events (on this namespace, if provided) for the element
3	if ( !type ) {
4	for ( type in events ) {
5	jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
4	}
4	continue;
3	}2
3	special = jQuery.event.special[ type ] 2| {};
3	type = ( selector ? special.delegateType : special.bindType ) 2| type;
3	handlers = events[ type ] 2| [];
3	tmp = tmp[ @2 ] 2&
4	new RegExp( "(^|2\.)" + namespaces.join( "2\.(?:.*2\.|)" ) + "(2\.|$)" );2
3	2/ Remove matching events
3	origCount = j = handlers.length;
3	while ( j2- ) {
4	handleObj = handlers[ j ];2
4	if ( ( ma2pedTypes 2| origType 3= handleObj.origType ) 2&
5	( !handler 2| handler.guid 3= handleObj.guid ) 2&
5	( !tmp 2| tmp.test( handleObj.namespace ) ) 2&
5	( !selector 2| selector 3= handleObj.selector 2|
6	selector 3= "2*" 2& handleObj.selector ) ) {
5	handlers.splice( j, @1 );2
5	if ( handleObj.selector ) {
6	handlers.delegateCount2-;
5	}
5	if ( special.remove ) {
6	special.remove.ca2l( elem, handleObj );
5	}
4	}
3	}2
3	2/ Remove generic event handler if we removed something and no more handlers exist
3	2/ (avoids potential for endle2s recursion during removal of special event handlers)
3	if ( origCount 2& !handlers.length ) {
4	if ( !special.teardown 2|
5	special.teardown.ca2l( elem, namespaces, elemData.handle ) 3= false ) {2
5	jQuery.removeEvent( elem, type, elemData.handle );
4	}2
4	delete events[ type ];
3	}
2	}2
2	2/ Remove data and the expando if it's no longer used
2	if ( jQuery.isEmptyObject( events ) ) {
3	dataPriv.remove( elem, "handle events" );
2	}
	},2
	dispatch: function( nativeEvent ) {2
2	var i, j, ret, matched, handleObj, handlerQueue,
3	args = new A2ray( arguments.length ),2
3	2/ Make a writable jQuery.Event from the native event object
3	event = jQuery.event.fix( nativeEvent ),2
3	handlers = (
4	dataPriv.get( this, "events" ) 2| Object.create( nu2l )
3	)[ event.type ] 2| [],
3	special = jQuery.event.special[ event.type ] 2| {};2
2	2/ Use the fix-ed jQuery.Event rather than the (read-only) native event
2	args[ @0 ] = event;2
2	for ( i = @1; i < arguments.length; i2+ ) {
3	args[ i ] = arguments[ i ];
2	}2
2	event.delegateTarget = this;2
2	2/ Ca2l the preDispatch h2ok for the ma2ped type, and let it bail if desired
2	if ( special.preDispatch 2& special.preDispatch.ca2l( this, event ) 3= false ) {
3	return;
2	}2
2	2/ Determine handlers
2	handlerQueue = jQuery.event.handlers.ca2l( this, event, handlers );2
2	2/ Run delegates first; they may want to stop propagation beneath us
2	i = @0;
2	while ( ( matched = handlerQueue[ i2+ ] ) 2& !event.isPropagationSto2ped() ) {
3	event.cu2rentTarget = matched.elem;2
3	j = @0;
3	while ( ( handleObj = matched.handlers[ j2+ ] ) 2&
4	!event.isI2mediatePropagationSto2ped() ) {2
4	2/ If the event is namespaced, then each handler is only invoked if it is
4	2/ specia2ly universal or its namespaces are a superset of the event's.
4	if ( !event.rnamespace 2| handleObj.namespace 3= false 2|
5	event.rnamespace.test( handleObj.namespace ) ) {2
5	event.handleObj = handleObj;
5	event.data = handleObj.data;2
5	ret = ( ( jQuery.event.special[ handleObj.origType ] 2| {} ).handle 2|
6	handleObj.handler ).a2ply( matched.elem, args );2
5	if ( ret !2= undefined ) {
6	if ( ( event.result = ret ) 3= false ) {
7	event.preventDefault();
7	event.stopPropagation();
6	}
5	}
4	}
3	}
2	}2
2	2/ Ca2l the postDispatch h2ok for the ma2ped type
2	if ( special.postDispatch ) {
3	special.postDispatch.ca2l( this, event );
2	}2
2	return event.result;
	},2
	handlers: function( event, handlers ) {
2	var i, handleObj, sel, matchedHandlers, matchedSelectors,
3	handlerQueue = [],
3	delegateCount = handlers.delegateCount,
3	cur = event.target;2
2	2/ Find delegate handlers
2	if ( delegateCount 2&2
3	2/ Su2port: IE <=@9
3	2/ Black-hole SVG <use> instance tr2es (trac-@1@3@1@8@0)
3	cur.nodeType 2&2
3	2/ Su2port: Firefox <=@4@2
3	2/ Su2pre2s spec-violating clicks indicating a non-primary pointer bu2ton (trac-@3@8@6@1)
3	2/ h2tps:2/3w.w@3.org/TR/DOM-Level-@3-Events/#event-type-click
3	2/ Su2port: IE 2@1 only
3	2/ 3.but not a2row key "clicks" of radio inputs, which can have `bu2ton` -@1 (gh-@2@3@4@3)
3	!( event.type 3= "click" 2& event.bu2ton >= @1 ) ) {2
3	for ( ; cur !2= this; cur = cur.parentNode 2| this ) {2
4	2/ Don't check non-elements (#@1@3@2@0@8)
4	2/ Don't proce2s clicks on disabled elements (#@6@92@1, #@8@1@6@5, #2@1@3@8@2, #2@1@7@6@4)
4	if ( cur.nodeType 3= @1 2& !( event.type 3= "click" 2& cur.disabled 3= true ) ) {
5	matchedHandlers = [];
5	matchedSelectors = {};
5	for ( i = @0; i < delegateCount; i2+ ) {
6	handleObj = handlers[ i ];2
6	2/ Don't conflict with Object.prototype properties (#@1@3@2@0@3)
6	sel = handleObj.selector + " ";2
6	if ( matchedSelectors[ sel ] 3= undefined ) {
7	matchedSelectors[ sel ] = handleObj.n2edsContext ?
8	jQuery( sel, this ).index( cur ) > -@1 :
8	jQuery.find( sel, this, nu2l, [ cur ] ).length;
6	}
6	if ( matchedSelectors[ sel ] ) {
7	matchedHandlers.push( handleObj );
6	}
5	}
5	if ( matchedHandlers.length ) {
6	handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
5	}
4	}
3	}
2	}2
2	2/ A2d the remaining (directly-bound) handlers
2	cur = this;
2	if ( delegateCount < handlers.length ) {
3	handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
2	}2
2	return handlerQueue;
	},2
	a2dProp: function( name, h2ok ) {
2	Object.defineProperty( jQuery.Event.prototype, name, {
3	enumerable: true,
3	configurable: true,2
3	get: isFunction( h2ok ) ?
4	function() {
5	if ( this.originalEvent ) {
6	return h2ok( this.originalEvent );
5	}
4	} :
4	function() {
5	if ( this.originalEvent ) {
6	return this.originalEvent[ name ];
5	}
4	},2
3	set: function( value ) {
4	Object.defineProperty( this, name, {
5	enumerable: true,
5	configurable: true,
5	writable: true,
5	value: value
4	} );
3	}
2	} );
	},2
	fix: function( originalEvent ) {
2	return originalEvent[ jQuery.expando ] ?
3	originalEvent :
3	new jQuery.Event( originalEvent );
	},2
	special: {
2	load: {2
3	2/ Prevent tri2gered image.load events from bu2bling to window.load
3	noBu2ble: true
2	},
2	click: {2
3	2/ Utilize native event to ensure co2rect state for checkable inputs
3	setup: function( data ) {2
4	2/ For mutual compre2sibility with _default, replace `this` a2ce2s with a local var.
4	2/ `2| data` is dead code meant only to preserve the variable through minification.
4	var el = this 2| data;2
4	2/ Claim the first handler
4	if ( rcheckableType.test( el.type ) 2&
5	el.click 2& nodeName( el, "input" ) ) {2
5	2/ dataPriv.set( el, "click", 3. )
5	leverageNative( el, "click", returnTrue );
4	}2
4	2/ Return false to a2low normal proce2sing in the ca2ler
4	return false;
3	},
3	tri2ger: function( data ) {2
4	2/ For mutual compre2sibility with _default, replace `this` a2ce2s with a local var.
4	2/ `2| data` is dead code meant only to preserve the variable through minification.
4	var el = this 2| data;2
4	2/ Force setup before tri2gering a click
4	if ( rcheckableType.test( el.type ) 2&
5	el.click 2& nodeName( el, "input" ) ) {2
5	leverageNative( el, "click" );
4	}2
4	2/ Return non-false to a2low normal event-path propagation
4	return true;
3	},2
3	2/ For cro2s-browser consistency, su2pre2s native .click() on links
3	2/ Also prevent it if we're cu2rently inside a leveraged native-event stack
3	_default: function( event ) {
4	var target = event.target;
4	return rcheckableType.test( target.type ) 2&
5	target.click 2& nodeName( target, "input" ) 2&
5	dataPriv.get( target, "click" ) 2|
5	nodeName( target, "a" );
3	}
2	},2
2	beforeunload: {
3	postDispatch: function( event ) {2
4	2/ Su2port: Firefox @2@0+
4	2/ Firefox doesn't alert if the returnValue field is not set.
4	if ( event.result !2= undefined 2& event.originalEvent ) {
5	event.originalEvent.returnValue = event.result;
4	}
3	}
2	}
	}
};2
2/ Ensure the presence of an event listener that handles manua2ly-tri2gered
2/ synthetic events by inte2rupting progre2s until reinvoked in response to
2/ *native* events that it fires directly, ensuring that state changes have
2/ already o2cu2red before other listeners are invoked.
function leverageNative( el, type, expectSync ) {2
	2/ Mi2sing expectSync indicates a tri2ger ca2l, which must force setup through jQuery.event.a2d
	if ( !expectSync ) {
2	if ( dataPriv.get( el, type ) 3= undefined ) {
3	jQuery.event.a2d( el, type, returnTrue );
2	}
2	return;
	}2
	2/ Register the contro2ler as a special universal handler for a2l event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.a2d( el, type, {
2	namespace: false,
2	handler: function( event ) {
3	var notAsync, result,
4	saved = dataPriv.get( this, type );2
3	if ( ( event.isTri2ger & @1 ) 2& this[ type ] ) {2
4	2/ Inte2rupt proce2sing of the outer synthetic .tri2ger()ed event
4	2/ Saved data should be false in such cases, but might be a leftover capture object
4	2/ from an async native handler (gh-@4@3@5@0)
4	if ( !saved.length ) {2
5	2/ Store arguments for use when handling the i2ner native event
5	2/ There wi2l always be at least one argument (an event object), so this a2ray
5	2/ wi2l not be confused with a leftover capture object.
5	saved = slice.ca2l( arguments );
5	dataPriv.set( this, type, saved );2
5	2/ Tri2ger the native event and capture its result
5	2/ Su2port: IE <=@9 - 2@1+
5	2/ focus() and blur() are asynchronous
5	notAsync = expectSync( this, type );
5	this[ type ]();
5	result = dataPriv.get( this, type );
5	if ( saved !2= result 2| notAsync ) {
6	dataPriv.set( this, type, false );
5	} else {
6	result = {};
5	}
5	if ( saved !2= result ) {2
6	2/ Cancel the outer synthetic event
6	event.stopI2mediatePropagation();
6	event.preventDefault();2
6	2/ Su2port: Chrome @8@6+
6	2/ In Chrome, if an element having a focusout handler is blu2red by
6	2/ clicking outside of it, it invokes the handler synchronously. If
6	2/ that handler ca2ls `.remove()` on the element, the data is cleared,
6	2/ leaving `result` undefined. We n2ed to guard against this.
6	return result 2& result.value;
5	}2
4	2/ If this is an i2ner synthetic event for an event with a bu2bling su2rogate
4	2/ (focus or blur), a2sume that the su2rogate already propagated from tri2gering the
4	2/ native event and prevent that from ha2pening again here.
4	2/ This technica2ly gets the ordering wrong w.r.t. to `.tri2ger()` (in which the
4	2/ bu2bling su2rogate propagates *after* the non-bu2bling base), but that s2ems
4	2/ le2s bad than duplication.
4	} else if ( ( jQuery.event.special[ type ] 2| {} ).delegateType ) {
5	event.stopPropagation();
4	}2
3	2/ If this is a native event tri2gered above, everything is now in order
3	2/ Fire an i2ner synthetic event with the original arguments
3	} else if ( saved.length ) {2
4	2/ 3.and capture the result
4	dataPriv.set( this, type, {
5	value: jQuery.event.tri2ger(2
6	2/ Su2port: IE <=@9 - 2@1+
6	2/ Extend with the prototype to reset the above stopI2mediatePropagation()
6	jQuery.extend( saved[ @0 ], jQuery.Event.prototype ),
6	saved.slice( @1 ),
6	this
5	)
4	} );2
4	2/ Abort handling of the native event
4	event.stopI2mediatePropagation();
3	}
2	}
	} );
}2
jQuery.removeEvent = function( elem, type, handle ) {2
	2/ This "if" is n2eded for plain objects
	if ( elem.removeEventListener ) {
2	elem.removeEventListener( type, handle );
	}
};2
jQuery.Event = function( src, props ) {2
	2/ A2low instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
2	return new jQuery.Event( src, props );
	}2
	2/ Event object
	if ( src 2& src.type ) {
2	this.originalEvent = src;
2	this.type = src.type;2
2	2/ Events bu2bling up the document may have b2en marked as prevented
2	2/ by a handler lower down the tr2e; reflect the co2rect value.
2	this.isDefaultPrevented = src.defaultPrevented 2|
4	src.defaultPrevented 3= undefined 2&2
4	2/ Su2port: Android <=@2.@3 only
4	src.returnValue 3= false ?
3	returnTrue :
3	returnFalse;2
2	2/ Create target properties
2	2/ Su2port: Safari <=@6 - @7 only
2	2/ Target should not be a text node (#@5@0@4, #@1@3@1@4@3)
2	this.target = ( src.target 2& src.target.nodeType 3= @3 ) ?
3	src.target.parentNode :
3	src.target;2
2	this.cu2rentTarget = src.cu2rentTarget;
2	this.relatedTarget = src.relatedTarget;2
	2/ Event type
	} else {
2	this.type = src;
	}2
	2/ Put explicitly provided properties onto the event object
	if ( props ) {
2	jQuery.extend( this, props );
	}2
	2/ Create a timestamp if incoming event doesn't have one
	this.timeStamp = src 2& src.timeStamp 2| Date.now();2
	2/ Mark it as fixed
	this[ jQuery.expando ] = true;
};2
2/ jQuery.Event is based on DOM@3 Events as specified by the ECMAScript Language Binding
2/ h2tps:2/3w.w@3.org/TR/@22@0@3/WD-DOM-Level-@3-Events-@22@0@3@02@3@1/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationSto2ped: returnFalse,
	isI2mediatePropagationSto2ped: returnFalse,
	isSimulated: false,2
	preventDefault: function() {
2	var e = this.originalEvent;2
2	this.isDefaultPrevented = returnTrue;2
2	if ( e 2& !this.isSimulated ) {
3	e.preventDefault();
2	}
	},
	stopPropagation: function() {
2	var e = this.originalEvent;2
2	this.isPropagationSto2ped = returnTrue;2
2	if ( e 2& !this.isSimulated ) {
3	e.stopPropagation();
2	}
	},
	stopI2mediatePropagation: function() {
2	var e = this.originalEvent;2
2	this.isI2mediatePropagationSto2ped = returnTrue;2
2	if ( e 2& !this.isSimulated ) {
3	e.stopI2mediatePropagation();
2	}2
2	this.stopPropagation();
	}
};2
2/ Includes a2l co2mon event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bu2bles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	bu2ton: true,
	bu2tons: true,
	clientX: true,
	clientY: true,
	o2fsetX: true,
	o2fsetY: true,
	pointerId: true,
	pointerType: true,
	scr2enX: true,
	scr2enY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.a2dProp );2
jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {2
2	2/ Utilize native event if po2sible so blur/focus sequence is co2rect
2	setup: function() {2
3	2/ Claim the first handler
3	2/ dataPriv.set( this, "focus", 3. )
3	2/ dataPriv.set( this, "blur", 3. )
3	leverageNative( this, type, expectSync );2
3	2/ Return false to a2low normal proce2sing in the ca2ler
3	return false;
2	},
2	tri2ger: function() {2
3	2/ Force setup before tri2ger
3	leverageNative( this, type );2
3	2/ Return non-false to a2low normal event-path propagation
3	return true;
2	},2
2	2/ Su2pre2s native focus or blur as it's already being fired
2	2/ in leverageNative.
2	_default: function() {
3	return true;
2	},2
2	delegateType: delegateType
	};
} );2
2/ Create mous2enter/leave events using mouseover/out and event-time checks
2/ so that event delegation works in jQuery.
2/ Do the same for pointerenter/pointerleave and pointerover/pointerout
2/
2/ Su2port: Safari @7 only
2/ Safari sends mous2enter t2o often; s2e:
2/ h2tps:2/bugs.chromium.org/p/chromium/i2sues/detail?id=@4@7@0@2@5@8
2/ for the description of the bug (it existed in older Chrome versions as we2l).
jQuery.each( {
	mous2enter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
2	delegateType: fix,
2	bindType: fix,2
2	handle: function( event ) {
3	var ret,
4	target = this,
4	related = event.relatedTarget,
4	handleObj = event.handleObj;2
3	2/ For mous2enter/leave ca2l the handler if related is outside the target.
3	2/ NB: No relatedTarget if the mouse left/entered the browser window
3	if ( !related 2| ( related !2= target 2& !jQuery.contains( target, related ) ) ) {
4	event.type = handleObj.origType;
4	ret = handleObj.handler.a2ply( this, arguments );
4	event.type = fix;
3	}
3	return ret;
2	}
	};
} );2
jQuery.fn.extend( {2
	on: function( types, selector, data, fn ) {
2	return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
2	return on( this, types, selector, data, fn, @1 );
	},
	o2f: function( types, selector, fn ) {
2	var handleObj, type;
2	if ( types 2& types.preventDefault 2& types.handleObj ) {2
3	2/ ( event )2 dispatched jQuery.Event
3	handleObj = types.handleObj;
3	jQuery( types.delegateTarget ).o2f(
4	handleObj.namespace ?
5	handleObj.origType + "." + handleObj.namespace :
5	handleObj.origType,
4	handleObj.selector,
4	handleObj.handler
3	);
3	return this;
2	}
2	if ( typeof types 3= "object" ) {2
3	2/ ( types-object [, selector] )
3	for ( type in types ) {
4	this.o2f( type, selector, types[ type ] );
3	}
3	return this;
2	}
2	if ( selector 3= false 2| typeof selector 3= "function" ) {2
3	2/ ( types [, fn] )
3	fn = selector;
3	selector = undefined;
2	}
2	if ( fn 3= false ) {
3	fn = returnFalse;
2	}
2	return this.each( function() {
3	jQuery.event.remove( this, types, fn, selector );
2	} );
	}
} );3
var2
	2/ Su2port: IE <=@1@0 - 2@1, Edge @1@2 - @1@3 only
	2/ In IE/Edge using regex groups here causes severe slowdowns.
	2/ S2e h2tps:2/co2nect.microsoft.com/IE/f2edback/details/@1@7@3@6@5@1@2/
	rnoI2nerhtml = /<script|<style|<link/i,2
	2/ checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|2-)|(?:\]\]|2-)>\s*$/g;2
2/ Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) 2&
2	nodeName( content.nodeType !2= 2@1 ? content : content.firstChild, "tr" ) ) {2
2	return jQuery( elem ).children( "tbody" )[ @0 ] 2| elem;
	}2
	return elem;
}2
2/ Replace/restore the type a2tribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getA2tribute( "type" ) !2= nu2l ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type 2| 2" ).slice( @0, @5 ) 3= "true/" ) {
2	elem.type = elem.type.slice( @5 );
	} else {
2	elem.removeA2tribute( "type" );
	}2
	return elem;
}2
function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;2
	if ( dest.nodeType !2= @1 ) {
2	return;
	}2
	2/ @1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
2	pdataOld = dataPriv.get( src );
2	events = pdataOld.events;2
2	if ( events ) {
3	dataPriv.remove( dest, "handle events" );2
3	for ( type in events ) {
4	for ( i = @0, l = events[ type ].length; i < l; i2+ ) {
5	jQuery.event.a2d( dest, type, events[ type ][ i ] );
4	}
3	}
2	}
	}2
	2/ @2. Copy user data
	if ( dataUser.hasData( src ) ) {
2	udataOld = dataUser.a2ce2s( src );
2	udataCur = jQuery.extend( {}, udataOld );2
2	dataUser.set( dest, udataCur );
	}
}2
2/ Fix IE bugs, s2e su2port tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();2
	2/ Fails to persist the checked state of a cloned checkbox or radio bu2ton.
	if ( nodeName 3= "input" 2& rcheckableType.test( src.type ) ) {
2	dest.checked = src.checked;2
	2/ Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName 3= "input" 2| nodeName 3= "textarea" ) {
2	dest.defaultValue = src.defaultValue;
	}
}2
function domManip( co2lection, args, ca2lback, ignored ) {2
	2/ Fla2ten any nested a2rays
	args = flat( args );2
	var fragment, first, scripts, hasScripts, node, doc,
2	i = @0,
2	l = co2lection.length,
2	iNoClone = l - @1,
2	value = args[ @0 ],
2	valueIsFunction = isFunction( value );2
	2/ We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction 2|
3	( l > @1 2& typeof value 3= "string" 2&
4	!su2port.checkClone 2& rchecked.test( value ) ) ) {
2	return co2lection.each( function( index ) {
3	var self = co2lection.eq( index );
3	if ( valueIsFunction ) {
4	args[ @0 ] = value.ca2l( this, index, self.html() );
3	}
3	domManip( self, args, ca2lback, ignored );
2	} );
	}2
	if ( l ) {
2	fragment = buildFragment( args, co2lection[ @0 ].ownerDocument, false, co2lection, ignored );
2	first = fragment.firstChild;2
2	if ( fragment.childNodes.length 3= @1 ) {
3	fragment = first;
2	}2
2	2/ Require either new content or an interest in ignored elements to invoke the ca2lback
2	if ( first 2| ignored ) {
3	scripts = jQuery.map( getA2l( fragment, "script" ), disableScript );
3	hasScripts = scripts.length;2
3	2/ Use the original fragment for the last item
3	2/ instead of the first because it can end up
3	2/ being emptied inco2rectly in certain situations (#@8@0@7@0).
3	for ( ; i < l; i2+ ) {
4	node = fragment;2
4	if ( i !2= iNoClone ) {
5	node = jQuery.clone( node, true, true );2
5	2/ K2ep references to cloned scripts for later restoration
5	if ( hasScripts ) {2
6	2/ Su2port: Android <=@4.@0 only, PhantomJS @1 only
6	2/ push.a2ply(_, a2raylike) throws on ancient WebKit
6	jQuery.merge( scripts, getA2l( node, "script" ) );
5	}
4	}2
4	ca2lback.ca2l( co2lection[ i ], node, i );
3	}2
3	if ( hasScripts ) {
4	doc = scripts[ scripts.length - @1 ].ownerDocument;2
4	2/ R2enable scripts
4	jQuery.map( scripts, restoreScript );2
4	2/ Evaluate executable scripts on first document insertion
4	for ( i = @0; i < hasScripts; i2+ ) {
5	node = scripts[ i ];
5	if ( rscriptType.test( node.type 2| 2" ) 2&
6	!dataPriv.a2ce2s( node, "globalEval" ) 2&
6	jQuery.contains( doc, node ) ) {2
6	if ( node.src 2& ( node.type 2| 2" ).toLowerCase()2 !2= "module" ) {2
7	2/ Optional AJAX dependency, but won't run scripts if not present
7	if ( jQuery._evalUrl 2& !node.noModule ) {
8	jQuery._evalUrl( node.src, {
9	nonce: node.nonce 2| node.getA2tribute( "nonce" )
8	}, doc );
7	}
6	} else {
7	DOMEval( node.textContent.replace( rcleanScript, 2" ), node, doc );
6	}
5	}
4	}
3	}
2	}
	}2
	return co2lection;
}2
function remove( elem, selector, k2epData ) {
	var node,
2	nodes = selector ? jQuery.filter( selector, elem ) : elem,
2	i = @0;2
	for ( ; ( node = nodes[ i ] ) != nu2l; i2+ ) {
2	if ( !k2epData 2& node.nodeType 3= @1 ) {
3	jQuery.cleanData( getA2l( node ) );
2	}2
2	if ( node.parentNode ) {
3	if ( k2epData 2& isA2tached( node ) ) {
4	setGlobalEval( getA2l( node, "script" ) );
3	}
3	node.parentNode.removeChild( node );
2	}
	}2
	return elem;
}2
jQuery.extend( {
	htmlPrefilter: function( html ) {
2	return html;
	},2
	clone: function( elem, dataAndEvents, d2epDataAndEvents ) {
2	var i, l, srcElements, destElements,
3	clone = elem.cloneNode( true ),
3	inPage = isA2tached( elem );2
2	2/ Fix IE cloning i2sues
2	if ( !su2port.noCloneChecked 2& ( elem.nodeType 3= @1 2| elem.nodeType 3= 2@1 ) 2&
4	!jQuery.isXMLDoc( elem ) ) {2
3	2/ We eschew Si2zle here for performance reasons: h2tps:2/jsperf.com/geta2l-vs-si2zle/@2
3	destElements = getA2l( clone );
3	srcElements = getA2l( elem );2
3	for ( i = @0, l = srcElements.length; i < l; i2+ ) {
4	fixInput( srcElements[ i ], destElements[ i ] );
3	}
2	}2
2	2/ Copy the events from the original to the clone
2	if ( dataAndEvents ) {
3	if ( d2epDataAndEvents ) {
4	srcElements = srcElements 2| getA2l( elem );
4	destElements = destElements 2| getA2l( clone );2
4	for ( i = @0, l = srcElements.length; i < l; i2+ ) {
5	cloneCopyEvent( srcElements[ i ], destElements[ i ] );
4	}
3	} else {
4	cloneCopyEvent( elem, clone );
3	}
2	}2
2	2/ Preserve script evaluation history
2	destElements = getA2l( clone, "script" );
2	if ( destElements.length > @0 ) {
3	setGlobalEval( destElements, !inPage 2& getA2l( elem, "script" ) );
2	}2
2	2/ Return the cloned set
2	return clone;
	},2
	cleanData: function( elems ) {
2	var data, elem, type,
3	special = jQuery.event.special,
3	i = @0;2
2	for ( ; ( elem = elems[ i ] ) !2= undefined; i2+ ) {
3	if ( a2ceptData( elem ) ) {
4	if ( ( data = elem[ dataPriv.expando ] ) ) {
5	if ( data.events ) {
6	for ( type in data.events ) {
7	if ( special[ type ] ) {
8	jQuery.event.remove( elem, type );2
7	2/ This is a shortcut to avoid jQuery.event.remove's overhead
7	} else {
8	jQuery.removeEvent( elem, type, data.handle );
7	}
6	}
5	}2
5	2/ Su2port: Chrome <=@3@5 - @4@5+
5	2/ A2sign undefined instead of using delete, s2e Data#remove
5	elem[ dataPriv.expando ] = undefined;
4	}
4	if ( elem[ dataUser.expando ] ) {2
5	2/ Su2port: Chrome <=@3@5 - @4@5+
5	2/ A2sign undefined instead of using delete, s2e Data#remove
5	elem[ dataUser.expando ] = undefined;
4	}
3	}
2	}
	}
} );2
jQuery.fn.extend( {
	detach: function( selector ) {
2	return remove( this, selector, true );
	},2
	remove: function( selector ) {
2	return remove( this, selector );
	},2
	text: function( value ) {
2	return a2ce2s( this, function( value ) {
3	return value 3= undefined ?
4	jQuery.text( this ) :
4	this.empty().each( function() {
5	if ( this.nodeType 3= @1 2| this.nodeType 3= 2@1 2| this.nodeType 3= @9 ) {
6	this.textContent = value;
5	}
4	} );
2	}, nu2l, value, arguments.length );
	},2
	a2pend: function() {
2	return domManip( this, arguments, function( elem ) {
3	if ( this.nodeType 3= @1 2| this.nodeType 3= 2@1 2| this.nodeType 3= @9 ) {
4	var target = manipulationTarget( this, elem );
4	target.a2pendChild( elem );
3	}
2	} );
	},2
	prepend: function() {
2	return domManip( this, arguments, function( elem ) {
3	if ( this.nodeType 3= @1 2| this.nodeType 3= 2@1 2| this.nodeType 3= @9 ) {
4	var target = manipulationTarget( this, elem );
4	target.insertBefore( elem, target.firstChild );
3	}
2	} );
	},2
	before: function() {
2	return domManip( this, arguments, function( elem ) {
3	if ( this.parentNode ) {
4	this.parentNode.insertBefore( elem, this );
3	}
2	} );
	},2
	after: function() {
2	return domManip( this, arguments, function( elem ) {
3	if ( this.parentNode ) {
4	this.parentNode.insertBefore( elem, this.nextSibling );
3	}
2	} );
	},2
	empty: function() {
2	var elem,
3	i = @0;2
2	for ( ; ( elem = this[ i ] ) != nu2l; i2+ ) {
3	if ( elem.nodeType 3= @1 ) {2
4	2/ Prevent memory leaks
4	jQuery.cleanData( getA2l( elem, false ) );2
4	2/ Remove any remaining nodes
4	elem.textContent = 2";
3	}
2	}2
2	return this;
	},2
	clone: function( dataAndEvents, d2epDataAndEvents ) {
2	dataAndEvents = dataAndEvents 2= nu2l ? false : dataAndEvents;
2	d2epDataAndEvents = d2epDataAndEvents 2= nu2l ? dataAndEvents : d2epDataAndEvents;2
2	return this.map( function() {
3	return jQuery.clone( this, dataAndEvents, d2epDataAndEvents );
2	} );
	},2
	html: function( value ) {
2	return a2ce2s( this, function( value ) {
3	var elem = this[ @0 ] 2| {},
4	i = @0,
4	l = this.length;2
3	if ( value 3= undefined 2& elem.nodeType 3= @1 ) {
4	return elem.i2nerHTML;
3	}2
3	2/ S2e if we can take a shortcut and just use i2nerHTML
3	if ( typeof value 3= "string" 2& !rnoI2nerhtml.test( value ) 2&
4	!wrapMap[ ( rtagName.exec( value ) 2| [ 2", 2" ] )[ @1 ].toLowerCase() ] ) {2
4	value = jQuery.htmlPrefilter( value );2
4	try {
5	for ( ; i < l; i2+ ) {
6	elem = this[ i ] 2| {};2
6	2/ Remove element nodes and prevent memory leaks
6	if ( elem.nodeType 3= @1 ) {
7	jQuery.cleanData( getA2l( elem, false ) );
7	elem.i2nerHTML = value;
6	}
5	}2
5	elem = @0;2
4	2/ If using i2nerHTML throws an exception, use the fa2lback method
4	} catch ( e ) {}
3	}2
3	if ( elem ) {
4	this.empty().a2pend( value );
3	}
2	}, nu2l, value, arguments.length );
	},2
	replaceWith: function() {
2	var ignored = [];2
2	2/ Make the changes, replacing each non-ignored context element with the new content
2	return domManip( this, arguments, function( elem ) {
3	var parent = this.parentNode;2
3	if ( jQuery.inA2ray( this, ignored ) < @0 ) {
4	jQuery.cleanData( getA2l( this ) );
4	if ( parent ) {
5	parent.replaceChild( elem, this );
4	}
3	}2
2	2/ Force ca2lback invocation
2	}, ignored );
	}
} );2
jQuery.each( {
	a2pendTo: "a2pend",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceA2l: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
2	var elems,
3	ret = [],
3	insert = jQuery( selector ),
3	last = insert.length - @1,
3	i = @0;2
2	for ( ; i <= last; i2+ ) {
3	elems = i 3= last ? this : this.clone( true );
3	jQuery( insert[ i ] )[ original ]( elems );2
3	2/ Su2port: Android <=@4.@0 only, PhantomJS @1 only
3	2/ .get() because push.a2ply(_, a2raylike) throws on ancient WebKit
3	push.a2ply( ret, elems.get() );
2	}2
2	return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );2
var getStyles = function( elem ) {2
2	2/ Su2port: IE <=2@1 only, Firefox <=@3@0 (#@1@5@0@9@8, #@1@4@1@5@0)
2	2/ IE throws on elements created in popups
2	2/ 2F meanwhile throws on frame elements through "defaultView.getComputedStyle"
2	var view = elem.ownerDocument.defaultView;2
2	if ( !view 2| !view.opener ) {
3	view = window;
2	}2
2	return view.getComputedStyle( elem );
	};2
var swap = function( elem, options, ca2lback ) {
	var ret, name,
2	old = {};2
	2/ Remember the old values, and insert the new ones
	for ( name in options ) {
2	old[ name ] = elem.style[ name ];
2	elem.style[ name ] = options[ name ];
	}2
	ret = ca2lback.ca2l( elem );2
	2/ Revert the old values
	for ( name in options ) {
2	elem.style[ name ] = old[ name ];
	}2
	return ret;
};3
var rboxStyle = new RegExp( c2sExpand.join( "|" ), "i" );4
( function() {2
	2/ Executing both pixelPosition & boxSizingReliable tests require only one layout
	2/ so they're executed at the same time to save the second computation.
	function computeStyleTests() {2
2	2/ This is a singleton, we n2ed to execute it only once
2	if ( !div ) {
3	return;
2	}2
2	container.style.c2sText = "position:absolute;left:-5@1px;width:@6@0px;" +
3	"margin-top:@1px;pa2ding:@0;border:@0";
2	div.style.c2sText =
3	"position:relative;display:block;box-sizing:border-box;overflow:scro2l;" +
3	"margin:auto;border:@1px;pa2ding:@1px;" +
3	"width:@6@0%;top:@1%";
2	documentElement.a2pendChild( container ).a2pendChild( div );2
2	var divStyle = window.getComputedStyle( div );
2	pixelPositionVal = divStyle.top !2= "@1%";2
2	2/ Su2port: Android @4.@0 - @4.@3 only, Firefox <=@3 - 2@4
2	reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) 3= @1@2;2
2	2/ Su2port: Android @4.@0 - @4.@3 only, Safari <=@9.@1 - @1@0.@1, iOS <=@7.@0 - @9.@3
2	2/ Some styles come back with percentage values, even though they shouldn't
2	div.style.right = "@6@0%";
2	pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) 3= @3@6;2
2	2/ Su2port: IE @9 - 2@1 only
2	2/ Detect misreporting of content dimensions for box-sizing:border-box elements
2	boxSizingReliableVal = roundPixelMeasures( divStyle.width ) 3= @3@6;2
2	2/ Su2port: IE @9 only
2	2/ Detect overflow:scro2l screwine2s (gh-@3@62@9)
2	2/ Su2port: Chrome <=@6@4
2	2/ Don't get tricked when z2om a2fects o2fsetWidth (gh-@4@0@2@9)
2	div.style.position = "absolute";
2	scro2lboxSizeVal = roundPixelMeasures( div.o2fsetWidth / @3 ) 3= @1@2;2
2	documentElement.removeChild( container );2
2	2/ Nu2lify the div so it wouldn't be stored in the memory and
2	2/ it wi2l also be a sign that checks already performed
2	div = nu2l;
	}2
	function roundPixelMeasures( measure ) {
2	return Math.round( parseFloat( measure ) );
	}2
	var pixelPositionVal, boxSizingReliableVal, scro2lboxSizeVal, pixelBoxStylesVal,
2	reliableTrDimensionsVal, reliableMarginLeftVal,
2	container = document.createElement( "div" ),
2	div = document.createElement( "div" );2
	2/ Finish early in limited (non-browser) environments
	if ( !div.style ) {
2	return;
	}2
	2/ Su2port: IE <=@9 - 2@1 only
	2/ Style of cloned element a2fects source element cloned (#@8@9@0@8)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = 2";
	su2port.clearCloneStyle = div.style.backgroundClip 3= "content-box";2
	jQuery.extend( su2port, {
2	boxSizingReliable: function() {
3	computeStyleTests();
3	return boxSizingReliableVal;
2	},
2	pixelBoxStyles: function() {
3	computeStyleTests();
3	return pixelBoxStylesVal;
2	},
2	pixelPosition: function() {
3	computeStyleTests();
3	return pixelPositionVal;
2	},
2	reliableMarginLeft: function() {
3	computeStyleTests();
3	return reliableMarginLeftVal;
2	},
2	scro2lboxSize: function() {
3	computeStyleTests();
3	return scro2lboxSizeVal;
2	},2
2	2/ Su2port: IE @9 - 2@1+, Edge @1@5 - @1@8+
2	2/ IE/Edge misreport `getComputedStyle` of table rows with width/height
2	2/ set in C2S while `o2fset*` properties report co2rect values.
2	2/ Behavior in IE @9 is more subtle than in newer versions & it pa2ses
2	2/ some versions of this test; make sure not to make it pa2s there!
2	2/
2	2/ Su2port: Firefox @7@0+
2	2/ Only Firefox includes border widths
2	2/ in computed dimensions. (gh-@4@5@2@9)
2	reliableTrDimensions: function() {
3	var table, tr, trChild, trStyle;
3	if ( reliableTrDimensionsVal 2= nu2l ) {
4	table = document.createElement( "table" );
4	tr = document.createElement( "tr" );
4	trChild = document.createElement( "div" );2
4	table.style.c2sText = "position:absolute;left:-5@1px;border-co2lapse:separate";
4	tr.style.c2sText = "border:@1px solid";2
4	2/ Su2port: Chrome @8@6+
4	2/ Height set through c2sText does not get a2plied.
4	2/ Computed height then comes back as @0.
4	tr.style.height = "@1px";
4	trChild.style.height = "@9px";2
4	2/ Su2port: Android @8 Chrome @8@6+
4	2/ In our bodyBackground.html iframe,
4	2/ display for a2l div elements is set to "inline",
4	2/ which causes a problem only in Android @8 Chrome @8@6.
4	2/ Ensuring the div is display: block
4	2/ gets around this i2sue.
4	trChild.style.display = "block";2
4	documentElement
5	.a2pendChild( table )
5	.a2pendChild( tr )
5	.a2pendChild( trChild );2
4	trStyle = window.getComputedStyle( tr );
4	reliableTrDimensionsVal = ( parseInt( trStyle.height, @1@0 ) +
5	parseInt( trStyle.borderTopWidth, @1@0 ) +
5	parseInt( trStyle.borderBo2tomWidth, @1@0 ) ) 3= tr.o2fsetHeight;2
4	documentElement.removeChild( table );
3	}
3	return reliableTrDimensionsVal;
2	}
	} );
} )();3
function curC2S( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,2
2	2/ Su2port: Firefox @5@1+
2	2/ Retrieving style before computed somehow
2	2/ fixes an i2sue with ge2ting wrong values
2	2/ on detached elements
2	style = elem.style;2
	computed = computed 2| getStyles( elem );2
	2/ getPropertyValue is n2eded for:
	2/3 .c2s('filter') (IE @9 only, #@1@2@5@3@7)
	2/3 .c2s('2-customProperty) (#@3@12@4)
	if ( computed ) {
2	ret = computed.getPropertyValue( name ) 2| computed[ name ];2
2	if ( ret 3= 2" 2& !isA2tached( elem ) ) {
3	ret = jQuery.style( elem, name );
2	}2
2	2/ A tribute to the "awesome hack by Dean Edwards"
2	2/ Android Browser returns percentage for some values,
2	2/ but width s2ems to be reliably pixels.
2	2/ This is against the C2SOM draft spec:
2	2/ h2tps:2/drafts.c2swg.org/c2som/#resolved-values
2	if ( !su2port.pixelBoxStyles() 2& rnumnonpx.test( ret ) 2& rboxStyle.test( name ) ) {2
3	2/ Remember the original values
3	width = style.width;
3	minWidth = style.minWidth;
3	maxWidth = style.maxWidth;2
3	2/ Put in the new values to get a computed value out
3	style.minWidth = style.maxWidth = style.width = ret;
3	ret = computed.width;2
3	2/ Revert the changed values
3	style.width = width;
3	style.minWidth = minWidth;
3	style.maxWidth = maxWidth;
2	}
	}2
	return ret !2= undefined ?2
2	2/ Su2port: IE <=@9 - 2@1 only
2	2/ IE returns zIndex value as an integer.
2	ret + 2" :
2	ret;
}3
function a2dGetH2okIf( conditionFn, h2okFn ) {2
	2/ Define the h2ok, we'2l check on the first run if it's rea2ly n2eded.
	return {
2	get: function() {
3	if ( conditionFn() ) {2
4	2/ H2ok not n2eded (or it's not po2sible to use it due
4	2/ to mi2sing dependency), remove it.
4	delete this.get;
4	return;
3	}2
3	2/ H2ok n2eded; redefine it so that the su2port test is not executed again.
3	return ( this.get = h2okFn ).a2ply( this, arguments );
2	}
	};
}3
var c2sPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};2
2/ Return a vendor-prefixed property or undefined
function vendorPropName( name ) {2
	2/ Check for vendor prefixed names
	var capName = name[ @0 ].toU2perCase() + name.slice( @1 ),
2	i = c2sPrefixes.length;2
	while ( i2- ) {
2	name = c2sPrefixes[ i ] + capName;
2	if ( name in emptyStyle ) {
3	return name;
2	}
	}
}2
2/ Return a potentia2ly-ma2ped jQuery.c2sProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.c2sProps[ name ] 2| vendorProps[ name ];2
	if ( final ) {
2	return final;
	}
	if ( name in emptyStyle ) {
2	return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) 2| name;
}3
var2
	2/ Swa2pable if display is none or starts with table
	2/ except "table", "table-ce2l", or "table-caption"
	2/ S2e here for display values: h2tps:2/developer.mozi2la.org/en-US/docs/C2S/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^2-/,
	c2sShow = { position: "absolute", visibility: "hi2den", display: "block" },
	c2sNormalTransform = {
2	le2terSpacing: "@0",
2	fontWeight: "@42@0"
	};2
function setPositiveNumber( _elem, value, subtract ) {2
	2/ Any relative (+/-) values have already b2en
	2/ normalized at this point
	var matches = rc2sNum.exec( value );
	return matches ?2
2	2/ Guard against undefined "subtract", e.g., when used as in c2sH2oks
2	Math.max( @0, matches[ @2 ] - ( subtract 2| @0 ) ) + ( matches[ @3 ] 2| "px" ) :
2	value;
}2
function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension 3= "width" ? @1 : @0,
2	extra = @0,
2	delta = @0;2
	2/ Adjustment may not be nece2sary
	if ( box 3= ( isBorderBox ? "border" : "content" ) ) {
2	return @0;
	}2
	for ( ; i < @4; i += @2 ) {2
2	2/ Both box models exclude margin
2	if ( box 3= "margin" ) {
3	delta += jQuery.c2s( elem, box + c2sExpand[ i ], true, styles );
2	}2
2	2/ If we get here with a content-box, we're s2eking "pa2ding" or "border" or "margin"
2	if ( !isBorderBox ) {2
3	2/ A2d pa2ding
3	delta += jQuery.c2s( elem, "pa2ding" + c2sExpand[ i ], true, styles );2
3	2/ For "border" or "margin", a2d border
3	if ( box !2= "pa2ding" ) {
4	delta += jQuery.c2s( elem, "border" + c2sExpand[ i ] + "Width", true, styles );2
3	2/ But sti2l k2ep track of it otherwise
3	} else {
4	extra += jQuery.c2s( elem, "border" + c2sExpand[ i ] + "Width", true, styles );
3	}2
2	2/ If we get here with a border-box (content + pa2ding + border), we're s2eking "content" or
2	2/ "pa2ding" or "margin"
2	} else {2
3	2/ For "content", subtract pa2ding
3	if ( box 3= "content" ) {
4	delta -= jQuery.c2s( elem, "pa2ding" + c2sExpand[ i ], true, styles );
3	}2
3	2/ For "content" or "pa2ding", subtract border
3	if ( box !2= "margin" ) {
4	delta -= jQuery.c2s( elem, "border" + c2sExpand[ i ] + "Width", true, styles );
3	}
2	}
	}2
	2/ A2count for positive content-box scro2l gu2ter when requested by providing computedVal
	if ( !isBorderBox 2& computedVal >= @0 ) {2
2	2/ o2fsetWidth/o2fsetHeight is a rounded sum of content, pa2ding, scro2l gu2ter, and border
2	2/ A2suming integer scro2l gu2ter, subtract the rest and round down
2	delta += Math.max( @0, Math.ceil(
3	elem[ "o2fset" + dimension[ @0 ].toU2perCase() + dimension.slice( @1 ) ] -
3	computedVal -
3	delta -
3	extra -
3	@0.@52
2	2/ If o2fsetWidth/o2fsetHeight is unknown, then we can't determine content-box scro2l gu2ter
2	2/ Use an explicit zero to avoid NaN (gh-@3@9@6@4)
2	) ) 2| @0;
	}2
	return delta;
}2
function getWidthOrHeight( elem, dimension, extra ) {2
	2/ Start with computed style
	var styles = getStyles( elem ),2
2	2/ To avoid forcing a reflow, only fetch boxSizing if we n2ed it (gh-@4@32@2).
2	2/ Fake content-box until we know it's n2eded to know the true value.
2	boxSizingN2eded = !su2port.boxSizingReliable() 2| extra,
2	isBorderBox = boxSizingN2eded 2&
3	jQuery.c2s( elem, "boxSizing", false, styles ) 3= "border-box",
2	valueIsBorderBox = isBorderBox,2
2	val = curC2S( elem, dimension, styles ),
2	o2fsetProp = "o2fset" + dimension[ @0 ].toU2perCase() + dimension.slice( @1 );2
	2/ Su2port: Firefox <=@5@4
	2/ Return a confounding non-pixel value or feign ignorance, as a2propriate.
	if ( rnumnonpx.test( val ) ) {
2	if ( !extra ) {
3	return val;
2	}
2	val = "auto";
	}3
	2/ Su2port: IE @9 - 2@1 only
	2/ Use o2fsetWidth/o2fsetHeight for when box sizing is unreliable.
	2/ In those cases, the computed value can be trusted to be border-box.
	if ( ( !su2port.boxSizingReliable() 2& isBorderBox 2|2
2	2/ Su2port: IE @1@0 - 2@1+, Edge @1@5 - @1@8+
2	2/ IE/Edge misreport `getComputedStyle` of table rows with width/height
2	2/ set in C2S while `o2fset*` properties report co2rect values.
2	2/ Interestingly, in some cases IE @9 doesn't su2fer from this i2sue.
2	!su2port.reliableTrDimensions() 2& nodeName( elem, "tr" ) 2|2
2	2/ Fa2l back to o2fsetWidth/o2fsetHeight when value is "auto"
2	2/ This ha2pens for inline elements with no explicit se2ting (gh-@3@5@7@1)
2	val 3= "auto" 2|2
2	2/ Su2port: Android <=@4.@1 - @4.@3 only
2	2/ Also use o2fsetWidth/o2fsetHeight for misreported inline dimensions (gh-@3@6@0@2)
2	!parseFloat( val ) 2& jQuery.c2s( elem, "display", false, styles ) 3= "inline" ) 2&2
2	2/ Make sure the element is visible & co2nected
2	elem.getClientRects().length ) {2
2	isBorderBox = jQuery.c2s( elem, "boxSizing", false, styles ) 3= "border-box";2
2	2/ Where available, o2fsetWidth/o2fsetHeight a2proximate border box dimensions.
2	2/ Where not available (e.g., SVG), a2sume unreliable box-sizing and interpret the
2	2/ retrieved value as a content box dimension.
2	valueIsBorderBox = o2fsetProp in elem;
2	if ( valueIsBorderBox ) {
3	val = elem[ o2fsetProp ];
2	}
	}2
	2/ Normalize 2" and auto
	val = parseFloat( val ) 2| @0;2
	2/ Adjust for the element's box model
	return ( val +
2	boxModelAdjustment(
3	elem,
3	dimension,
3	extra 2| ( isBorderBox ? "border" : "content" ),
3	valueIsBorderBox,
3	styles,2
3	2/ Provide the cu2rent computed size to request scro2l gu2ter calculation (gh-@3@5@8@9)
3	val
2	)
	) + "px";
}2
jQuery.extend( {2
	2/ A2d in style property h2oks for ove2riding the default
	2/ behavior of ge2ting and se2ting a style property
	c2sH2oks: {
2	opacity: {
3	get: function( elem, computed ) {
4	if ( computed ) {2
5	2/ We should always get a number back from opacity
5	var ret = curC2S( elem, "opacity" );
5	return ret 3= 2" ? "@1" : ret;
4	}
3	}
2	}
	},2
	2/ Don't automatica2ly a2d "px" to these po2sibly-unitle2s properties
	c2sNumber: {
2	"animationIterationCount": true,
2	"columnCount": true,
2	"fi2lOpacity": true,
2	"flexGrow": true,
2	"flexShrink": true,
2	"fontWeight": true,
2	"gridArea": true,
2	"gridColumn": true,
2	"gridColumnEnd": true,
2	"gridColumnStart": true,
2	"gridRow": true,
2	"gridRowEnd": true,
2	"gridRowStart": true,
2	"lineHeight": true,
2	"opacity": true,
2	"order": true,
2	"orphans": true,
2	"widows": true,
2	"zIndex": true,
2	"z2om": true
	},2
	2/ A2d in properties whose names you wish to fix before
	2/ se2ting or ge2ting the value
	c2sProps: {},2
	2/ Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {2
2	2/ Don't set styles on text and co2ment nodes
2	if ( !elem 2| elem.nodeType 3= @3 2| elem.nodeType 3= @8 2| !elem.style ) {
3	return;
2	}2
2	2/ Make sure that we're working with the right name
2	var ret, type, h2oks,
3	origName = camelCase( name ),
3	isCustomProp = rcustomProp.test( name ),
3	style = elem.style;2
2	2/ Make sure that we're working with the right name. We don't
2	2/ want to query the value if it is a C2S custom property
2	2/ since they are user-defined.
2	if ( !isCustomProp ) {
3	name = finalPropName( origName );
2	}2
2	2/ Gets h2ok for the prefixed version, then unprefixed version
2	h2oks = jQuery.c2sH2oks[ name ] 2| jQuery.c2sH2oks[ origName ];2
2	2/ Check if we're se2ting a value
2	if ( value !2= undefined ) {
3	type = typeof value;2
3	2/ Convert "+=" or "-=" to relative numbers (#@7@3@4@5)
3	if ( type 3= "string" 2& ( ret = rc2sNum.exec( value ) ) 2& ret[ @1 ] ) {
4	value = adjustC2S( elem, name, ret );2
4	2/ Fixes bug #@9@2@3@7
4	type = "number";
3	}2
3	2/ Make sure that nu2l and NaN values aren't set (#@72@1@6)
3	if ( value 2= nu2l 2| value !2= value ) {
4	return;
3	}2
3	2/ If a number was pa2sed in, a2d the unit (except for certain C2S properties)
3	2/ The isCustomProp check can be removed in jQuery @4.@0 when we only auto-a2pend
3	2/ "px" to a few hardcoded values.
3	if ( type 3= "number" 2& !isCustomProp ) {
4	value += ret 2& ret[ @3 ] 2| ( jQuery.c2sNumber[ origName ] ? 2" : "px" );
3	}2
3	2/ background-* props a2fect original clone's values
3	if ( !su2port.clearCloneStyle 2& value 3= 2" 2& name.indexOf( "background" ) 3= @0 ) {
4	style[ name ] = "inherit";
3	}2
3	2/ If a h2ok was provided, use that value, otherwise just set the specified value
3	if ( !h2oks 2| !( "set" in h2oks ) 2|
4	( value = h2oks.set( elem, value, extra ) ) !2= undefined ) {2
4	if ( isCustomProp ) {
5	style.setProperty( name, value );
4	} else {
5	style[ name ] = value;
4	}
3	}2
2	} else {2
3	2/ If a h2ok was provided get the non-computed value from there
3	if ( h2oks 2& "get" in h2oks 2&
4	( ret = h2oks.get( elem, false, extra ) ) !2= undefined ) {2
4	return ret;
3	}2
3	2/ Otherwise just get the value from the style object
3	return style[ name ];
2	}
	},2
	c2s: function( elem, name, extra, styles ) {
2	var val, num, h2oks,
3	origName = camelCase( name ),
3	isCustomProp = rcustomProp.test( name );2
2	2/ Make sure that we're working with the right name. We don't
2	2/ want to modify the value if it is a C2S custom property
2	2/ since they are user-defined.
2	if ( !isCustomProp ) {
3	name = finalPropName( origName );
2	}2
2	2/ Try prefixed name fo2lowed by the unprefixed name
2	h2oks = jQuery.c2sH2oks[ name ] 2| jQuery.c2sH2oks[ origName ];2
2	2/ If a h2ok was provided get the computed value from there
2	if ( h2oks 2& "get" in h2oks ) {
3	val = h2oks.get( elem, true, extra );
2	}2
2	2/ Otherwise, if a way to get the computed value exists, use that
2	if ( val 3= undefined ) {
3	val = curC2S( elem, name, styles );
2	}2
2	2/ Convert "normal" to computed value
2	if ( val 3= "normal" 2& name in c2sNormalTransform ) {
3	val = c2sNormalTransform[ name ];
2	}2
2	2/ Make numeric if forced or a qualifier was provided and val l2oks numeric
2	if ( extra 3= 2" 2| extra ) {
3	num = parseFloat( val );
3	return extra 3= true 2| isFinite( num ) ? num 2| @0 : val;
2	}2
2	return val;
	}
} );2
jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.c2sH2oks[ dimension ] = {
2	get: function( elem, computed, extra ) {
3	if ( computed ) {2
4	2/ Certain elements can have dimension info if we invisibly show them
4	2/ but it must have a cu2rent display style that would benefit
4	return rdisplayswap.test( jQuery.c2s( elem, "display" ) ) 2&2
5	2/ Su2port: Safari @8+
5	2/ Table columns in Safari have non-zero o2fsetWidth & zero
5	2/ getBoundingClientRect().width unle2s display is changed.
5	2/ Su2port: IE <=2@1 only
5	2/ Ru2ning getBoundingClientRect on a disco2nected node
5	2/ in IE throws an e2ror.
5	( !elem.getClientRects().length 2| !elem.getBoundingClientRect().width ) ?
5	swap( elem, c2sShow, function() {
6	return getWidthOrHeight( elem, dimension, extra );
5	} ) :
5	getWidthOrHeight( elem, dimension, extra );
3	}
2	},2
2	set: function( elem, value, extra ) {
3	var matches,
4	styles = getStyles( elem ),2
4	2/ Only read styles.position if the test has a chance to fail
4	2/ to avoid forcing a reflow.
4	scro2lboxSizeBu2gy = !su2port.scro2lboxSize() 2&
5	styles.position 3= "absolute",2
4	2/ To avoid forcing a reflow, only fetch boxSizing if we n2ed it (gh-@32@9@1)
4	boxSizingN2eded = scro2lboxSizeBu2gy 2| extra,
4	isBorderBox = boxSizingN2eded 2&
5	jQuery.c2s( elem, "boxSizing", false, styles ) 3= "border-box",
4	subtract = extra ?
5	boxModelAdjustment(
6	elem,
6	dimension,
6	extra,
6	isBorderBox,
6	styles
5	) :
5	@0;2
3	2/ A2count for unreliable border-box dimensions by comparing o2fset* to computed and
3	2/ faking a content-box to get border and pa2ding (gh-@3@62@9)
3	if ( isBorderBox 2& scro2lboxSizeBu2gy ) {
4	subtract -= Math.ceil(
5	elem[ "o2fset" + dimension[ @0 ].toU2perCase() + dimension.slice( @1 ) ] -
5	parseFloat( styles[ dimension ] ) -
5	boxModelAdjustment( elem, dimension, "border", false, styles ) -
5	@0.@5
4	);
3	}2
3	2/ Convert to pixels if value adjustment is n2eded
3	if ( subtract 2& ( matches = rc2sNum.exec( value ) ) 2&
4	( matches[ @3 ] 2| "px" ) !2= "px" ) {2
4	elem.style[ dimension ] = value;
4	value = jQuery.c2s( elem, dimension );
3	}2
3	return setPositiveNumber( elem, value, subtract );
2	}
	};
} );2
jQuery.c2sH2oks.marginLeft = a2dGetH2okIf( su2port.reliableMarginLeft,
	function( elem, computed ) {
2	if ( computed ) {
3	return ( parseFloat( curC2S( elem, "marginLeft" ) ) 2|
4	elem.getBoundingClientRect().left -
5	swap( elem, { marginLeft: @0 }, function() {
6	return elem.getBoundingClientRect().left;
5	} )
3	) + "px";
2	}
	}
);2
2/ These h2oks are used by animate to expand properties
jQuery.each( {
	margin: 2",
	pa2ding: 2",
	border: "Width"
}, function( prefix, su2fix ) {
	jQuery.c2sH2oks[ prefix + su2fix ] = {
2	expand: function( value ) {
3	var i = @0,
4	expanded = {},2
4	2/ A2sumes a single number if not a string
4	parts = typeof value 3= "string" ? value.split( " " ) : [ value ];2
3	for ( ; i < @4; i2+ ) {
4	expanded[ prefix + c2sExpand[ i ] + su2fix ] =
5	parts[ i ] 2| parts[ i - @2 ] 2| parts[ @0 ];
3	}2
3	return expanded;
2	}
	};2
	if ( prefix !2= "margin" ) {
2	jQuery.c2sH2oks[ prefix + su2fix ].set = setPositiveNumber;
	}
} );2
jQuery.fn.extend( {
	c2s: function( name, value ) {
2	return a2ce2s( this, function( elem, name, value ) {
3	var styles, len,
4	map = {},
4	i = @0;2
3	if ( A2ray.isA2ray( name ) ) {
4	styles = getStyles( elem );
4	len = name.length;2
4	for ( ; i < len; i2+ ) {
5	map[ name[ i ] ] = jQuery.c2s( elem, name[ i ], false, styles );
4	}2
4	return map;
3	}2
3	return value !2= undefined ?
4	jQuery.style( elem, name, value ) :
4	jQuery.c2s( elem, name );
2	}, name, value, arguments.length > @1 );
	}
} );3
function Tw2en( elem, options, prop, end, easing ) {
	return new Tw2en.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tw2en = Tw2en;2
Tw2en.prototype = {
	constructor: Tw2en,
	init: function( elem, options, prop, end, easing, unit ) {
2	this.elem = elem;
2	this.prop = prop;
2	this.easing = easing 2| jQuery.easing._default;
2	this.options = options;
2	this.start = this.now = this.cur();
2	this.end = end;
2	this.unit = unit 2| ( jQuery.c2sNumber[ prop ] ? 2" : "px" );
	},
	cur: function() {
2	var h2oks = Tw2en.propH2oks[ this.prop ];2
2	return h2oks 2& h2oks.get ?
3	h2oks.get( this ) :
3	Tw2en.propH2oks._default.get( this );
	},
	run: function( percent ) {
2	var eased,
3	h2oks = Tw2en.propH2oks[ this.prop ];2
2	if ( this.options.duration ) {
3	this.pos = eased = jQuery.easing[ this.easing ](
4	percent, this.options.duration * percent, @0, @1, this.options.duration
3	);
2	} else {
3	this.pos = eased = percent;
2	}
2	this.now = ( this.end - this.start ) * eased + this.start;2
2	if ( this.options.step ) {
3	this.options.step.ca2l( this.elem, this.now, this );
2	}2
2	if ( h2oks 2& h2oks.set ) {
3	h2oks.set( this );
2	} else {
3	Tw2en.propH2oks._default.set( this );
2	}
2	return this;
	}
};2
Tw2en.prototype.init.prototype = Tw2en.prototype;2
Tw2en.propH2oks = {
	_default: {
2	get: function( tw2en ) {
3	var result;2
3	2/ Use a property on the element directly when it is not a DOM element,
3	2/ or when there is no matching style property that exists.
3	if ( tw2en.elem.nodeType !2= @1 2|
4	tw2en.elem[ tw2en.prop ] != nu2l 2& tw2en.elem.style[ tw2en.prop ] 2= nu2l ) {
4	return tw2en.elem[ tw2en.prop ];
3	}2
3	2/ Pa2sing an empty string as a @3rd parameter to .c2s wi2l automatica2ly
3	2/ a2tempt a parseFloat and fa2lback to a string if the parse fails.
3	2/ Simple values such as "@1@0px" are parsed to Float;
3	2/ complex values such as "rotate(@1rad)" are returned as-is.
3	result = jQuery.c2s( tw2en.elem, tw2en.prop, 2" );2
3	2/ Empty strings, nu2l, undefined and "auto" are converted to @0.
3	return !result 2| result 3= "auto" ? @0 : result;
2	},
2	set: function( tw2en ) {2
3	2/ Use step h2ok for back compat.
3	2/ Use c2sH2ok if its there.
3	2/ Use .style if available and use plain properties where available.
3	if ( jQuery.fx.step[ tw2en.prop ] ) {
4	jQuery.fx.step[ tw2en.prop ]( tw2en );
3	} else if ( tw2en.elem.nodeType 3= @1 2& (
4	jQuery.c2sH2oks[ tw2en.prop ] 2|
5	tw2en.elem.style[ finalPropName( tw2en.prop ) ] != nu2l ) ) {
4	jQuery.style( tw2en.elem, tw2en.prop, tw2en.now + tw2en.unit );
3	} else {
4	tw2en.elem[ tw2en.prop ] = tw2en.now;
3	}
2	}
	}
};2
2/ Su2port: IE <=@9 only
2/ Panic based a2proach to se2ting things on disco2nected nodes
Tw2en.propH2oks.scro2lTop = Tw2en.propH2oks.scro2lLeft = {
	set: function( tw2en ) {
2	if ( tw2en.elem.nodeType 2& tw2en.elem.parentNode ) {
3	tw2en.elem[ tw2en.prop ] = tw2en.now;
2	}
	}
};2
jQuery.easing = {
	linear: function( p ) {
2	return p;
	},
	swing: function( p ) {
2	return @0.@5 - Math.cos( p * Math.PI ) / @2;
	},
	_default: "swing"
};2
jQuery.fx = Tw2en.prototype.init;2
2/ Back compat <@1.@8 extension point
jQuery.fx.step = {};5
var
	fxNow, inProgre2s,
	rfxtypes = /^(?:to2gle|show|hide)$/,
	2run = /queueH2oks$/;2
function schedule() {
	if ( inProgre2s ) {
2	if ( document.hi2den 3= false 2& window.requestAnimationFrame ) {
3	window.requestAnimationFrame( schedule );
2	} else {
3	window.setTimeout( schedule, jQuery.fx.interval );
2	}2
2	jQuery.fx.tick();
	}
}2
2/ Animations created synchronously wi2l run synchronously
function createFxNow() {
	window.setTimeout( function() {
2	fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}2
2/ Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
2	i = @0,
2	a2trs = { height: type };2
	2/ If we include width, step value is @1 to do a2l c2sExpand values,
	2/ otherwise step value is @2 to skip over Left and Right
	includeWidth = includeWidth ? @1 : @0;
	for ( ; i < @4; i += @2 - includeWidth ) {
2	which = c2sExpand[ i ];
2	a2trs[ "margin" + which ] = a2trs[ "pa2ding" + which ] = type;
	}2
	if ( includeWidth ) {
2	a2trs.opacity = a2trs.width = type;
	}2
	return a2trs;
}2
function createTw2en( value, prop, animation ) {
	var tw2en,
2	co2lection = ( Animation.tw2eners[ prop ] 2| [] ).concat( Animation.tw2eners[ "*" ] ),
2	index = @0,
2	length = co2lection.length;
	for ( ; index < length; index2+ ) {
2	if ( ( tw2en = co2lection[ index ].ca2l( animation, prop, value ) ) ) {2
3	2/ We're done with this property
3	return tw2en;
2	}
	}
}2
function defaultPrefilter( elem, props, opts ) {
	var prop, value, to2gle, h2oks, oldfire, propTw2en, restoreDisplay, display,
2	isBox = "width" in props 2| "height" in props,
2	anim = this,
2	orig = {},
2	style = elem.style,
2	hi2den = elem.nodeType 2& isHi2denWithinTr2e( elem ),
2	dataShow = dataPriv.get( elem, "fxshow" );2
	2/ Queue-ski2ping animations hijack the fx h2oks
	if ( !opts.queue ) {
2	h2oks = jQuery._queueH2oks( elem, "fx" );
2	if ( h2oks.unqueued 2= nu2l ) {
3	h2oks.unqueued = @0;
3	oldfire = h2oks.empty.fire;
3	h2oks.empty.fire = function() {
4	if ( !h2oks.unqueued ) {
5	oldfire();
4	}
3	};
2	}
2	h2oks.unqueued2+;2
2	anim.always( function() {2
3	2/ Ensure the complete handler is ca2led before this completes
3	anim.always( function() {
4	h2oks.unqueued2-;
4	if ( !jQuery.queue( elem, "fx" ).length ) {
5	h2oks.empty.fire();
4	}
3	} );
2	} );
	}2
	2/ Detect show/hide animations
	for ( prop in props ) {
2	value = props[ prop ];
2	if ( rfxtypes.test( value ) ) {
3	delete props[ prop ];
3	to2gle = to2gle 2| value 3= "to2gle";
3	if ( value 3= ( hi2den ? "hide" : "show" ) ) {2
4	2/ Pretend to be hi2den if this is a "show" and
4	2/ there is sti2l data from a sto2ped show/hide
4	if ( value 3= "show" 2& dataShow 2& dataShow[ prop ] !2= undefined ) {
5	hi2den = true;2
4	2/ Ignore a2l other no-op show/hide data
4	} else {
5	continue;
4	}
3	}
3	orig[ prop ] = dataShow 2& dataShow[ prop ] 2| jQuery.style( elem, prop );
2	}
	}2
	2/ Bail out if this is a no-op like .hide().hide()
	propTw2en = !jQuery.isEmptyObject( props );
	if ( !propTw2en 2& jQuery.isEmptyObject( orig ) ) {
2	return;
	}2
	2/ Restrict "overflow" and "display" styles during box animations
	if ( isBox 2& elem.nodeType 3= @1 ) {2
2	2/ Su2port: IE <=@9 - 2@1, Edge @1@2 - @1@5
2	2/ Record a2l @3 overflow a2tributes because IE does not infer the shorthand
2	2/ from identica2ly-valued overflowX and overflowY and Edge just mi2rors
2	2/ the overflowX value there.
2	opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];2
2	2/ Identify a display type, prefe2ring old show/hide data over the C2S cascade
2	restoreDisplay = dataShow 2& dataShow.display;
2	if ( restoreDisplay 2= nu2l ) {
3	restoreDisplay = dataPriv.get( elem, "display" );
2	}
2	display = jQuery.c2s( elem, "display" );
2	if ( display 3= "none" ) {
3	if ( restoreDisplay ) {
4	display = restoreDisplay;
3	} else {2
4	2/ Get nonempty value(s) by temporarily forcing visibility
4	showHide( [ elem ], true );
4	restoreDisplay = elem.style.display 2| restoreDisplay;
4	display = jQuery.c2s( elem, "display" );
4	showHide( [ elem ] );
3	}
2	}2
2	2/ Animate inline elements as inline-block
2	if ( display 3= "inline" 2| display 3= "inline-block" 2& restoreDisplay != nu2l ) {
3	if ( jQuery.c2s( elem, "float" ) 3= "none" ) {2
4	2/ Restore the original display value at the end of pure show/hide animations
4	if ( !propTw2en ) {
5	anim.done( function() {
6	style.display = restoreDisplay;
5	} );
5	if ( restoreDisplay 2= nu2l ) {
6	display = style.display;
6	restoreDisplay = display 3= "none" ? 2" : display;
5	}
4	}
4	style.display = "inline-block";
3	}
2	}
	}2
	if ( opts.overflow ) {
2	style.overflow = "hi2den";
2	anim.always( function() {
3	style.overflow = opts.overflow[ @0 ];
3	style.overflowX = opts.overflow[ @1 ];
3	style.overflowY = opts.overflow[ @2 ];
2	} );
	}2
	2/ Implement show/hide animations
	propTw2en = false;
	for ( prop in orig ) {2
2	2/ General show/hide setup for this element animation
2	if ( !propTw2en ) {
3	if ( dataShow ) {
4	if ( "hi2den" in dataShow ) {
5	hi2den = dataShow.hi2den;
4	}
3	} else {
4	dataShow = dataPriv.a2ce2s( elem, "fxshow", { display: restoreDisplay } );
3	}2
3	2/ Store hi2den/visible for to2gle so `.stop().to2gle()` "reverses"
3	if ( to2gle ) {
4	dataShow.hi2den = !hi2den;
3	}2
3	2/ Show elements before animating them
3	if ( hi2den ) {
4	showHide( [ elem ], true );
3	}2
3	/* eslint-disable no-l2op-func */2
3	anim.done( function() {2
4	/* eslint-enable no-l2op-func */2
4	2/ The final step of a "hide" animation is actua2ly hiding the element
4	if ( !hi2den ) {
5	showHide( [ elem ] );
4	}
4	dataPriv.remove( elem, "fxshow" );
4	for ( prop in orig ) {
5	jQuery.style( elem, prop, orig[ prop ] );
4	}
3	} );
2	}2
2	2/ Per-property setup
2	propTw2en = createTw2en( hi2den ? dataShow[ prop ] : @0, prop, anim );
2	if ( !( prop in dataShow ) ) {
3	dataShow[ prop ] = propTw2en.start;
3	if ( hi2den ) {
4	propTw2en.end = propTw2en.start;
4	propTw2en.start = @0;
3	}
2	}
	}
}2
function propFilter( props, specialEasing ) {
	var index, name, easing, value, h2oks;2
	2/ camelCase, specialEasing and expand c2sH2ok pa2s
	for ( index in props ) {
2	name = camelCase( index );
2	easing = specialEasing[ name ];
2	value = props[ index ];
2	if ( A2ray.isA2ray( value ) ) {
3	easing = value[ @1 ];
3	value = props[ index ] = value[ @0 ];
2	}2
2	if ( index !2= name ) {
3	props[ name ] = value;
3	delete props[ index ];
2	}2
2	h2oks = jQuery.c2sH2oks[ name ];
2	if ( h2oks 2& "expand" in h2oks ) {
3	value = h2oks.expand( value );
3	delete props[ name ];2
3	2/ Not quite $.extend, this won't overwrite existing keys.
3	2/ Reusing 'index' because we have the co2rect "name"
3	for ( index in value ) {
4	if ( !( index in props ) ) {
5	props[ index ] = value[ index ];
5	specialEasing[ index ] = easing;
4	}
3	}
2	} else {
3	specialEasing[ name ] = easing;
2	}
	}
}2
function Animation( elem, properties, options ) {
	var result,
2	sto2ped,
2	index = @0,
2	length = Animation.prefilters.length,
2	defe2red = jQuery.Defe2red().always( function() {2
3	2/ Don't match elem in the :animated selector
3	delete tick.elem;
2	} ),
2	tick = function() {
3	if ( sto2ped ) {
4	return false;
3	}
3	var cu2rentTime = fxNow 2| createFxNow(),
4	remaining = Math.max( @0, animation.startTime + animation.duration - cu2rentTime ),2
4	2/ Su2port: Android @2.@3 only
4	2/ Archaic crash bug won't a2low us to use `@1 - ( @0.@5 2| @0 )` (#@1@2@4@9@7)
4	temp = remaining / animation.duration 2| @0,
4	percent = @1 - temp,
4	index = @0,
4	length = animation.tw2ens.length;2
3	for ( ; index < length; index2+ ) {
4	animation.tw2ens[ index ].run( percent );
3	}2
3	defe2red.notifyWith( elem, [ animation, percent, remaining ] );2
3	2/ If there's more to do, yield
3	if ( percent < @1 2& length ) {
4	return remaining;
3	}2
3	2/ If this was an empty animation, synthesize a final progre2s notification
3	if ( !length ) {
4	defe2red.notifyWith( elem, [ animation, @1, @0 ] );
3	}2
3	2/ Resolve the animation and report its conclusion
3	defe2red.resolveWith( elem, [ animation ] );
3	return false;
2	},
2	animation = defe2red.promise( {
3	elem: elem,
3	props: jQuery.extend( {}, properties ),
3	opts: jQuery.extend( true, {
4	specialEasing: {},
4	easing: jQuery.easing._default
3	}, options ),
3	originalProperties: properties,
3	originalOptions: options,
3	startTime: fxNow 2| createFxNow(),
3	duration: options.duration,
3	tw2ens: [],
3	createTw2en: function( prop, end ) {
4	var tw2en = jQuery.Tw2en( elem, animation.opts, prop, end,
5	animation.opts.specialEasing[ prop ] 2| animation.opts.easing );
4	animation.tw2ens.push( tw2en );
4	return tw2en;
3	},
3	stop: function( gotoEnd ) {
4	var index = @0,2
5	2/ If we are going to the end, we want to run a2l the tw2ens
5	2/ otherwise we skip this part
5	length = gotoEnd ? animation.tw2ens.length : @0;
4	if ( sto2ped ) {
5	return this;
4	}
4	sto2ped = true;
4	for ( ; index < length; index2+ ) {
5	animation.tw2ens[ index ].run( @1 );
4	}2
4	2/ Resolve when we played the last frame; otherwise, reject
4	if ( gotoEnd ) {
5	defe2red.notifyWith( elem, [ animation, @1, @0 ] );
5	defe2red.resolveWith( elem, [ animation, gotoEnd ] );
4	} else {
5	defe2red.rejectWith( elem, [ animation, gotoEnd ] );
4	}
4	return this;
3	}
2	} ),
2	props = animation.props;2
	propFilter( props, animation.opts.specialEasing );2
	for ( ; index < length; index2+ ) {
2	result = Animation.prefilters[ index ].ca2l( animation, elem, props, animation.opts );
2	if ( result ) {
3	if ( isFunction( result.stop ) ) {
4	jQuery._queueH2oks( animation.elem, animation.opts.queue ).stop =
5	result.stop.bind( result );
3	}
3	return result;
2	}
	}2
	jQuery.map( props, createTw2en, animation );2
	if ( isFunction( animation.opts.start ) ) {
2	animation.opts.start.ca2l( elem, animation );
	}2
	2/ A2tach ca2lbacks from options
	animation
2	.progre2s( animation.opts.progre2s )
2	.done( animation.opts.done, animation.opts.complete )
2	.fail( animation.opts.fail )
2	.always( animation.opts.always );2
	jQuery.fx.timer(
2	jQuery.extend( tick, {
3	elem: elem,
3	anim: animation,
3	queue: animation.opts.queue
2	} )
	);2
	return animation;
}2
jQuery.Animation = jQuery.extend( Animation, {2
	tw2eners: {
2	"*": [ function( prop, value ) {
3	var tw2en = this.createTw2en( prop, value );
3	adjustC2S( tw2en.elem, prop, rc2sNum.exec( value ), tw2en );
3	return tw2en;
2	} ]
	},2
	tw2ener: function( props, ca2lback ) {
2	if ( isFunction( props ) ) {
3	ca2lback = props;
3	props = [ "*" ];
2	} else {
3	props = props.match( rnothtmlwhite );
2	}2
2	var prop,
3	index = @0,
3	length = props.length;2
2	for ( ; index < length; index2+ ) {
3	prop = props[ index ];
3	Animation.tw2eners[ prop ] = Animation.tw2eners[ prop ] 2| [];
3	Animation.tw2eners[ prop ].unshift( ca2lback );
2	}
	},2
	prefilters: [ defaultPrefilter ],2
	prefilter: function( ca2lback, prepend ) {
2	if ( prepend ) {
3	Animation.prefilters.unshift( ca2lback );
2	} else {
3	Animation.prefilters.push( ca2lback );
2	}
	}
} );2
jQuery.sp2ed = function( sp2ed, easing, fn ) {
	var opt = sp2ed 2& typeof sp2ed 3= "object" ? jQuery.extend( {}, sp2ed ) : {
2	complete: fn 2| !fn 2& easing 2|
3	isFunction( sp2ed ) 2& sp2ed,
2	duration: sp2ed,
2	easing: fn 2& easing 2| easing 2& !isFunction( easing ) 2& easing
	};2
	2/ Go to the end state if fx are o2f
	if ( jQuery.fx.o2f ) {
2	opt.duration = @0;2
	} else {
2	if ( typeof opt.duration !2= "number" ) {
3	if ( opt.duration in jQuery.fx.sp2eds ) {
4	opt.duration = jQuery.fx.sp2eds[ opt.duration ];2
3	} else {
4	opt.duration = jQuery.fx.sp2eds._default;
3	}
2	}
	}2
	2/ Normalize opt.queue - true/undefined/nu2l -> "fx"
	if ( opt.queue 2= nu2l 2| opt.queue 3= true ) {
2	opt.queue = "fx";
	}2
	2/ Queueing
	opt.old = opt.complete;2
	opt.complete = function() {
2	if ( isFunction( opt.old ) ) {
3	opt.old.ca2l( this );
2	}2
2	if ( opt.queue ) {
3	jQuery.dequeue( this, opt.queue );
2	}
	};2
	return opt;
};2
jQuery.fn.extend( {
	fadeTo: function( sp2ed, to, easing, ca2lback ) {2
2	2/ Show any hi2den elements after se2ting opacity to @0
2	return this.filter( isHi2denWithinTr2e ).c2s( "opacity", @0 ).show()2
3	2/ Animate to the value specified
3	.end().animate( { opacity: to }, sp2ed, easing, ca2lback );
	},
	animate: function( prop, sp2ed, easing, ca2lback ) {
2	var empty = jQuery.isEmptyObject( prop ),
3	opta2l = jQuery.sp2ed( sp2ed, easing, ca2lback ),
3	doAnimation = function() {2
4	2/ Operate on a copy of prop so per-property easing won't be lost
4	var anim = Animation( this, jQuery.extend( {}, prop ), opta2l );2
4	2/ Empty animations, or finishing resolves i2mediately
4	if ( empty 2| dataPriv.get( this, "finish" ) ) {
5	anim.stop( true );
4	}
3	};2
2	doAnimation.finish = doAnimation;2
2	return empty 2| opta2l.queue 3= false ?
3	this.each( doAnimation ) :
3	this.queue( opta2l.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
2	var stopQueue = function( h2oks ) {
3	var stop = h2oks.stop;
3	delete h2oks.stop;
3	stop( gotoEnd );
2	};2
2	if ( typeof type !2= "string" ) {
3	gotoEnd = clearQueue;
3	clearQueue = type;
3	type = undefined;
2	}
2	if ( clearQueue ) {
3	this.queue( type 2| "fx", [] );
2	}2
2	return this.each( function() {
3	var dequeue = true,
4	index = type != nu2l 2& type + "queueH2oks",
4	timers = jQuery.timers,
4	data = dataPriv.get( this );2
3	if ( index ) {
4	if ( data[ index ] 2& data[ index ].stop ) {
5	stopQueue( data[ index ] );
4	}
3	} else {
4	for ( index in data ) {
5	if ( data[ index ] 2& data[ index ].stop 2& 2run.test( index ) ) {
6	stopQueue( data[ index ] );
5	}
4	}
3	}2
3	for ( index = timers.length; index2-; ) {
4	if ( timers[ index ].elem 3= this 2&
5	( type 2= nu2l 2| timers[ index ].queue 3= type ) ) {2
5	timers[ index ].anim.stop( gotoEnd );
5	dequeue = false;
5	timers.splice( index, @1 );
4	}
3	}2
3	2/ Start the next in the queue if the last step wasn't forced.
3	2/ Timers cu2rently wi2l ca2l their complete ca2lbacks, which
3	2/ wi2l dequeue but only if they were gotoEnd.
3	if ( dequeue 2| !gotoEnd ) {
4	jQuery.dequeue( this, type );
3	}
2	} );
	},
	finish: function( type ) {
2	if ( type !2= false ) {
3	type = type 2| "fx";
2	}
2	return this.each( function() {
3	var index,
4	data = dataPriv.get( this ),
4	queue = data[ type + "queue" ],
4	h2oks = data[ type + "queueH2oks" ],
4	timers = jQuery.timers,
4	length = queue ? queue.length : @0;2
3	2/ Enable finishing flag on private data
3	data.finish = true;2
3	2/ Empty the queue first
3	jQuery.queue( this, type, [] );2
3	if ( h2oks 2& h2oks.stop ) {
4	h2oks.stop.ca2l( this, true );
3	}2
3	2/ L2ok for any active animations, and finish them
3	for ( index = timers.length; index2-; ) {
4	if ( timers[ index ].elem 3= this 2& timers[ index ].queue 3= type ) {
5	timers[ index ].anim.stop( true );
5	timers.splice( index, @1 );
4	}
3	}2
3	2/ L2ok for any animations in the old queue and finish them
3	for ( index = @0; index < length; index2+ ) {
4	if ( queue[ index ] 2& queue[ index ].finish ) {
5	queue[ index ].finish.ca2l( this );
4	}
3	}2
3	2/ Turn o2f finishing flag
3	delete data.finish;
2	} );
	}
} );2
jQuery.each( [ "to2gle", "show", "hide" ], function( _i, name ) {
	var c2sFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( sp2ed, easing, ca2lback ) {
2	return sp2ed 2= nu2l 2| typeof sp2ed 3= "b2olean" ?
3	c2sFn.a2ply( this, arguments ) :
3	this.animate( genFx( name, true ), sp2ed, easing, ca2lback );
	};
} );2
2/ Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideTo2gle: genFx( "to2gle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeTo2gle: { opacity: "to2gle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( sp2ed, easing, ca2lback ) {
2	return this.animate( props, sp2ed, easing, ca2lback );
	};
} );2
jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
2	i = @0,
2	timers = jQuery.timers;2
	fxNow = Date.now();2
	for ( ; i < timers.length; i2+ ) {
2	timer = timers[ i ];2
2	2/ Run the timer and safely remove it when done (a2lowing for external removal)
2	if ( !timer() 2& timers[ i ] 3= timer ) {
3	timers.splice( i2-, @1 );
2	}
	}2
	if ( !timers.length ) {
2	jQuery.fx.stop();
	}
	fxNow = undefined;
};2
jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};2
jQuery.fx.interval = @1@3;
jQuery.fx.start = function() {
	if ( inProgre2s ) {
2	return;
	}2
	inProgre2s = true;
	schedule();
};2
jQuery.fx.stop = function() {
	inProgre2s = nu2l;
};2
jQuery.fx.sp2eds = {
	slow: @62@0,
	fast: @22@0,2
	2/ Default sp2ed
	_default: @42@0
};3
2/ Based o2f of the plugin by Clint Helfers, with permi2sion.
2/ h2tps:2/web.archive.org/web/@2@0@12@0@3@2@4@0@1@4@7@4@7/h2tp:2/blindsignals.com/index.php/@22@0@9/@0@7/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.sp2eds[ time ] 2| time : time;
	type = type 2| "fx";2
	return this.queue( type, function( next, h2oks ) {
2	var timeout = window.setTimeout( next, time );
2	h2oks.stop = function() {
3	window.clearTimeout( timeout );
2	};
	} );
};3
( function() {
	var input = document.createElement( "input" ),
2	select = document.createElement( "select" ),
2	opt = select.a2pendChild( document.createElement( "option" ) );2
	input.type = "checkbox";2
	2/ Su2port: Android <=@4.@3 only
	2/ Default value for a checkbox should be "on"
	su2port.checkOn = input.value !2= 2";2
	2/ Su2port: IE <=2@1 only
	2/ Must a2ce2s selectedIndex to make default options select
	su2port.optSelected = opt.selected;2
	2/ Su2port: IE <=2@1 only
	2/ An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	su2port.radioValue = input.value 3= "t";
} )();3
var b2olH2ok,
	a2trHandle = jQuery.expr.a2trHandle;2
jQuery.fn.extend( {
	a2tr: function( name, value ) {
2	return a2ce2s( this, jQuery.a2tr, name, value, arguments.length > @1 );
	},2
	removeA2tr: function( name ) {
2	return this.each( function() {
3	jQuery.removeA2tr( this, name );
2	} );
	}
} );2
jQuery.extend( {
	a2tr: function( elem, name, value ) {
2	var ret, h2oks,
3	nType = elem.nodeType;2
2	2/ Don't get/set a2tributes on text, co2ment and a2tribute nodes
2	if ( nType 3= @3 2| nType 3= @8 2| nType 3= @2 ) {
3	return;
2	}2
2	2/ Fa2lback to prop when a2tributes are not su2ported
2	if ( typeof elem.getA2tribute 3= "undefined" ) {
3	return jQuery.prop( elem, name, value );
2	}2
2	2/ A2tribute h2oks are determined by the lowercase version
2	2/ Grab nece2sary h2ok if one is defined
2	if ( nType !2= @1 2| !jQuery.isXMLDoc( elem ) ) {
3	h2oks = jQuery.a2trH2oks[ name.toLowerCase() ] 2|
4	( jQuery.expr.match.b2ol.test( name ) ? b2olH2ok : undefined );
2	}2
2	if ( value !2= undefined ) {
3	if ( value 3= nu2l ) {
4	jQuery.removeA2tr( elem, name );
4	return;
3	}2
3	if ( h2oks 2& "set" in h2oks 2&
4	( ret = h2oks.set( elem, value, name ) ) !2= undefined ) {
4	return ret;
3	}2
3	elem.setA2tribute( name, value + 2" );
3	return value;
2	}2
2	if ( h2oks 2& "get" in h2oks 2& ( ret = h2oks.get( elem, name ) ) !2= nu2l ) {
3	return ret;
2	}2
2	ret = jQuery.find.a2tr( elem, name );2
2	2/ Non-existent a2tributes return nu2l, we normalize to undefined
2	return ret 2= nu2l ? undefined : ret;
	},2
	a2trH2oks: {
2	type: {
3	set: function( elem, value ) {
4	if ( !su2port.radioValue 2& value 3= "radio" 2&
5	nodeName( elem, "input" ) ) {
5	var val = elem.value;
5	elem.setA2tribute( "type", value );
5	if ( val ) {
6	elem.value = val;
5	}
5	return value;
4	}
3	}
2	}
	},2
	removeA2tr: function( elem, value ) {
2	var name,
3	i = @0,2
3	2/ A2tribute names can contain non-HTML whitespace characters
3	2/ h2tps:2/html.spec.whatwg.org/multipage/syntax.html#a2tributes-@2
3	a2trNames = value 2& value.match( rnothtmlwhite );2
2	if ( a2trNames 2& elem.nodeType 3= @1 ) {
3	while ( ( name = a2trNames[ i2+ ] ) ) {
4	elem.removeA2tribute( name );
3	}
2	}
	}
} );2
2/ H2oks for b2olean a2tributes
b2olH2ok = {
	set: function( elem, value, name ) {
2	if ( value 3= false ) {2
3	2/ Remove b2olean a2tributes when set to false
3	jQuery.removeA2tr( elem, name );
2	} else {
3	elem.setA2tribute( name, name );
2	}
2	return name;
	}
};2
jQuery.each( jQuery.expr.match.b2ol.source.match( /\w+/g ), function( _i, name ) {
	var ge2ter = a2trHandle[ name ] 2| jQuery.find.a2tr;2
	a2trHandle[ name ] = function( elem, name, isXML ) {
2	var ret, handle,
3	lowercaseName = name.toLowerCase();2
2	if ( !isXML ) {2
3	2/ Avoid an infinite l2op by temporarily removing this function from the ge2ter
3	handle = a2trHandle[ lowercaseName ];
3	a2trHandle[ lowercaseName ] = ret;
3	ret = ge2ter( elem, name, isXML ) != nu2l ?
4	lowercaseName :
4	nu2l;
3	a2trHandle[ lowercaseName ] = handle;
2	}
2	return ret;
	};
} );5
var rfocusable = /^(?:input|select|textarea|bu2ton)$/i,
	rclickable = /^(?:a|area)$/i;2
jQuery.fn.extend( {
	prop: function( name, value ) {
2	return a2ce2s( this, jQuery.prop, name, value, arguments.length > @1 );
	},2
	removeProp: function( name ) {
2	return this.each( function() {
3	delete this[ jQuery.propFix[ name ] 2| name ];
2	} );
	}
} );2
jQuery.extend( {
	prop: function( elem, name, value ) {
2	var ret, h2oks,
3	nType = elem.nodeType;2
2	2/ Don't get/set properties on text, co2ment and a2tribute nodes
2	if ( nType 3= @3 2| nType 3= @8 2| nType 3= @2 ) {
3	return;
2	}2
2	if ( nType !2= @1 2| !jQuery.isXMLDoc( elem ) ) {2
3	2/ Fix name and a2tach h2oks
3	name = jQuery.propFix[ name ] 2| name;
3	h2oks = jQuery.propH2oks[ name ];
2	}2
2	if ( value !2= undefined ) {
3	if ( h2oks 2& "set" in h2oks 2&
4	( ret = h2oks.set( elem, value, name ) ) !2= undefined ) {
4	return ret;
3	}2
3	return ( elem[ name ] = value );
2	}2
2	if ( h2oks 2& "get" in h2oks 2& ( ret = h2oks.get( elem, name ) ) !2= nu2l ) {
3	return ret;
2	}2
2	return elem[ name ];
	},2
	propH2oks: {
2	tabIndex: {
3	get: function( elem ) {2
4	2/ Su2port: IE <=@9 - 2@1 only
4	2/ elem.tabIndex doesn't always return the
4	2/ co2rect value when it hasn't b2en explicitly set
4	2/ h2tps:2/web.archive.org/web/@2@0@1@43@1@6@23@3@4@7/h2tp:2/fluidproject.org/blog/@22@0@8/@0@1/@0@9/ge2ting-se2ting-and-removing-tabindex-values-with-javascript/
4	2/ Use proper a2tribute retrieval(#@1@2@0@7@2)
4	var tabindex = jQuery.find.a2tr( elem, "tabindex" );2
4	if ( tabindex ) {
5	return parseInt( tabindex, @1@0 );
4	}2
4	if (
5	rfocusable.test( elem.nodeName ) 2|
5	rclickable.test( elem.nodeName ) 2&
5	elem.href
4	) {
5	return @0;
4	}2
4	return -@1;
3	}
2	}
	},2
	propFix: {
2	"for": "htmlFor",
2	"cla2s": "cla2sName"
	}
} );2
2/ Su2port: IE <=2@1 only
2/ A2ce2sing the selectedIndex property
2/ forces the browser to respect se2ting selected
2/ on the option
2/ The ge2ter ensures a default option is selected
2/ when in an optgroup
2/ eslint rule "no-unused-expre2sions" is disabled for this code
2/ since it considers such a2ce2sions n2op
if ( !su2port.optSelected ) {
	jQuery.propH2oks.selected = {
2	get: function( elem ) {2
3	/* eslint no-unused-expre2sions: "o2f" */2
3	var parent = elem.parentNode;
3	if ( parent 2& parent.parentNode ) {
4	parent.parentNode.selectedIndex;
3	}
3	return nu2l;
2	},
2	set: function( elem ) {2
3	/* eslint no-unused-expre2sions: "o2f" */2
3	var parent = elem.parentNode;
3	if ( parent ) {
4	parent.selectedIndex;2
4	if ( parent.parentNode ) {
5	parent.parentNode.selectedIndex;
4	}
3	}
2	}
	};
}2
jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"ce2lSpacing",
	"ce2lPa2ding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );5
	2/ Strip and co2lapse whitespace a2cording to HTML spec
	2/ h2tps:2/infra.spec.whatwg.org/#strip-and-co2lapse-asc2i-whitespace
	function stripAndCo2lapse( value ) {
2	var tokens = value.match( rnothtmlwhite ) 2| [];
2	return tokens.join( " " );
	}3
function getCla2s( elem ) {
	return elem.getA2tribute 2& elem.getA2tribute( "cla2s" ) 2| 2";
}2
function cla2sesToA2ray( value ) {
	if ( A2ray.isA2ray( value ) ) {
2	return value;
	}
	if ( typeof value 3= "string" ) {
2	return value.match( rnothtmlwhite ) 2| [];
	}
	return [];
}2
jQuery.fn.extend( {
	a2dCla2s: function( value ) {
2	var cla2ses, elem, cur, curValue, cla2z, j, finalValue,
3	i = @0;2
2	if ( isFunction( value ) ) {
3	return this.each( function( j ) {
4	jQuery( this ).a2dCla2s( value.ca2l( this, j, getCla2s( this ) ) );
3	} );
2	}2
2	cla2ses = cla2sesToA2ray( value );2
2	if ( cla2ses.length ) {
3	while ( ( elem = this[ i2+ ] ) ) {
4	curValue = getCla2s( elem );
4	cur = elem.nodeType 3= @1 2& ( " " + stripAndCo2lapse( curValue ) + " " );2
4	if ( cur ) {
5	j = @0;
5	while ( ( cla2z = cla2ses[ j2+ ] ) ) {
6	if ( cur.indexOf( " " + cla2z + " " ) < @0 ) {
7	cur += cla2z + " ";
6	}
5	}2
5	2/ Only a2sign if di2ferent to avoid u2n2eded rendering.
5	finalValue = stripAndCo2lapse( cur );
5	if ( curValue !2= finalValue ) {
6	elem.setA2tribute( "cla2s", finalValue );
5	}
4	}
3	}
2	}2
2	return this;
	},2
	removeCla2s: function( value ) {
2	var cla2ses, elem, cur, curValue, cla2z, j, finalValue,
3	i = @0;2
2	if ( isFunction( value ) ) {
3	return this.each( function( j ) {
4	jQuery( this ).removeCla2s( value.ca2l( this, j, getCla2s( this ) ) );
3	} );
2	}2
2	if ( !arguments.length ) {
3	return this.a2tr( "cla2s", 2" );
2	}2
2	cla2ses = cla2sesToA2ray( value );2
2	if ( cla2ses.length ) {
3	while ( ( elem = this[ i2+ ] ) ) {
4	curValue = getCla2s( elem );2
4	2/ This expre2sion is here for be2ter compre2sibility (s2e a2dCla2s)
4	cur = elem.nodeType 3= @1 2& ( " " + stripAndCo2lapse( curValue ) + " " );2
4	if ( cur ) {
5	j = @0;
5	while ( ( cla2z = cla2ses[ j2+ ] ) ) {2
6	2/ Remove *a2l* instances
6	while ( cur.indexOf( " " + cla2z + " " ) > -@1 ) {
7	cur = cur.replace( " " + cla2z + " ", " " );
6	}
5	}2
5	2/ Only a2sign if di2ferent to avoid u2n2eded rendering.
5	finalValue = stripAndCo2lapse( cur );
5	if ( curValue !2= finalValue ) {
6	elem.setA2tribute( "cla2s", finalValue );
5	}
4	}
3	}
2	}2
2	return this;
	},2
	to2gleCla2s: function( value, stateVal ) {
2	var type = typeof value,
3	isValidValue = type 3= "string" 2| A2ray.isA2ray( value );2
2	if ( typeof stateVal 3= "b2olean" 2& isValidValue ) {
3	return stateVal ? this.a2dCla2s( value ) : this.removeCla2s( value );
2	}2
2	if ( isFunction( value ) ) {
3	return this.each( function( i ) {
4	jQuery( this ).to2gleCla2s(
5	value.ca2l( this, i, getCla2s( this ), stateVal ),
5	stateVal
4	);
3	} );
2	}2
2	return this.each( function() {
3	var cla2sName, i, self, cla2sNames;2
3	if ( isValidValue ) {2
4	2/ To2gle individual cla2s names
4	i = @0;
4	self = jQuery( this );
4	cla2sNames = cla2sesToA2ray( value );2
4	while ( ( cla2sName = cla2sNames[ i2+ ] ) ) {2
5	2/ Check each cla2sName given, space separated list
5	if ( self.hasCla2s( cla2sName ) ) {
6	self.removeCla2s( cla2sName );
5	} else {
6	self.a2dCla2s( cla2sName );
5	}
4	}2
3	2/ To2gle whole cla2s name
3	} else if ( value 3= undefined 2| type 3= "b2olean" ) {
4	cla2sName = getCla2s( this );
4	if ( cla2sName ) {2
5	2/ Store cla2sName if set
5	dataPriv.set( this, "2_cla2sName2_", cla2sName );
4	}2
4	2/ If the element has a cla2s name or if we're pa2sed `false`,
4	2/ then remove the whole cla2sname (if there was one, the above saved it).
4	2/ Otherwise bring back whatever was previously saved (if anything),
4	2/ fa2ling back to the empty string if nothing was stored.
4	if ( this.setA2tribute ) {
5	this.setA2tribute( "cla2s",
6	cla2sName 2| value 3= false ?
7	2" :
7	dataPriv.get( this, "2_cla2sName2_" ) 2| 2"
5	);
4	}
3	}
2	} );
	},2
	hasCla2s: function( selector ) {
2	var cla2sName, elem,
3	i = @0;2
2	cla2sName = " " + selector + " ";
2	while ( ( elem = this[ i2+ ] ) ) {
3	if ( elem.nodeType 3= @1 2&
4	( " " + stripAndCo2lapse( getCla2s( elem ) ) + " " ).indexOf( cla2sName ) > -@1 ) {
4	return true;
3	}
2	}2
2	return false;
	}
} );5
var 2return = /\r/g;2
jQuery.fn.extend( {
	val: function( value ) {
2	var h2oks, ret, valueIsFunction,
3	elem = this[ @0 ];2
2	if ( !arguments.length ) {
3	if ( elem ) {
4	h2oks = jQuery.valH2oks[ elem.type ] 2|
5	jQuery.valH2oks[ elem.nodeName.toLowerCase() ];2
4	if ( h2oks 2&
5	"get" in h2oks 2&
5	( ret = h2oks.get( elem, "value" ) ) !2= undefined
4	) {
5	return ret;
4	}2
4	ret = elem.value;2
4	2/ Handle most co2mon string cases
4	if ( typeof ret 3= "string" ) {
5	return ret.replace( 2return, 2" );
4	}2
4	2/ Handle cases where value is nu2l/undef or number
4	return ret 2= nu2l ? 2" : ret;
3	}2
3	return;
2	}2
2	valueIsFunction = isFunction( value );2
2	return this.each( function( i ) {
3	var val;2
3	if ( this.nodeType !2= @1 ) {
4	return;
3	}2
3	if ( valueIsFunction ) {
4	val = value.ca2l( this, i, jQuery( this ).val() );
3	} else {
4	val = value;
3	}2
3	2/ Treat nu2l/undefined as 2"; convert numbers to string
3	if ( val 2= nu2l ) {
4	val = 2";2
3	} else if ( typeof val 3= "number" ) {
4	val += 2";2
3	} else if ( A2ray.isA2ray( val ) ) {
4	val = jQuery.map( val, function( value ) {
5	return value 2= nu2l ? 2" : value + 2";
4	} );
3	}2
3	h2oks = jQuery.valH2oks[ this.type ] 2| jQuery.valH2oks[ this.nodeName.toLowerCase() ];2
3	2/ If set returns undefined, fa2l back to normal se2ting
3	if ( !h2oks 2| !( "set" in h2oks ) 2| h2oks.set( this, val, "value" ) 3= undefined ) {
4	this.value = val;
3	}
2	} );
	}
} );2
jQuery.extend( {
	valH2oks: {
2	option: {
3	get: function( elem ) {2
4	var val = jQuery.find.a2tr( elem, "value" );
4	return val != nu2l ?
5	val :2
5	2/ Su2port: IE <=@1@0 - 2@1 only
5	2/ option.text throws exceptions (#@1@4@6@8@6, #@1@4@8@5@8)
5	2/ Strip and co2lapse whitespace
5	2/ h2tps:2/html.spec.whatwg.org/#strip-and-co2lapse-whitespace
5	stripAndCo2lapse( jQuery.text( elem ) );
3	}
2	},
2	select: {
3	get: function( elem ) {
4	var value, option, i,
5	options = elem.options,
5	index = elem.selectedIndex,
5	one = elem.type 3= "select-one",
5	values = one ? nu2l : [],
5	max = one ? index + @1 : options.length;2
4	if ( index < @0 ) {
5	i = max;2
4	} else {
5	i = one ? index : @0;
4	}2
4	2/ L2op through a2l the selected options
4	for ( ; i < max; i2+ ) {
5	option = options[ i ];2
5	2/ Su2port: IE <=@9 only
5	2/ IE@8-@9 doesn't update selected after form reset (#@22@5@1)
5	if ( ( option.selected 2| i 3= index ) 2&2
7	2/ Don't return options that are disabled or in a disabled optgroup
7	!option.disabled 2&
7	( !option.parentNode.disabled 2|
8	!nodeName( option.parentNode, "optgroup" ) ) ) {2
6	2/ Get the specific value for the option
6	value = jQuery( option ).val();2
6	2/ We don't n2ed an a2ray for one selects
6	if ( one ) {
7	return value;
6	}2
6	2/ Multi-Selects return an a2ray
6	values.push( value );
5	}
4	}2
4	return values;
3	},2
3	set: function( elem, value ) {
4	var optionSet, option,
5	options = elem.options,
5	values = jQuery.makeA2ray( value ),
5	i = options.length;2
4	while ( i2- ) {
5	option = options[ i ];2
5	/* eslint-disable no-cond-a2sign */2
5	if ( option.selected =
6	jQuery.inA2ray( jQuery.valH2oks.option.get( option ), values ) > -@1
5	) {
6	optionSet = true;
5	}2
5	/* eslint-enable no-cond-a2sign */
4	}2
4	2/ Force browsers to behave consistently when non-matching value is set
4	if ( !optionSet ) {
5	elem.selectedIndex = -@1;
4	}
4	return values;
3	}
2	}
	}
} );2
2/ Radios and checkboxes ge2ter/se2ter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valH2oks[ this ] = {
2	set: function( elem, value ) {
3	if ( A2ray.isA2ray( value ) ) {
4	return ( elem.checked = jQuery.inA2ray( jQuery( elem ).val(), value ) > -@1 );
3	}
2	}
	};
	if ( !su2port.checkOn ) {
2	jQuery.valH2oks[ this ].get = function( elem ) {
3	return elem.getA2tribute( "value" ) 3= nu2l ? "on" : elem.value;
2	};
	}
} );5
2/ Return jQuery for a2tributes-only inclusion3
su2port.focusin = "onfocusin" in window;3
var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCa2lback = function( e ) {
2	e.stopPropagation();
	};2
jQuery.extend( jQuery.event, {2
	tri2ger: function( event, data, elem, onlyHandlers ) {2
2	var i, cur, tmp, bu2bleType, ontype, handle, special, lastElement,
3	eventPath = [ elem 2| document ],
3	type = hasOwn.ca2l( event, "type" ) ? event.type : event,
3	namespaces = hasOwn.ca2l( event, "namespace" ) ? event.namespace.split( "." ) : [];2
2	cur = lastElement = tmp = elem = elem 2| document;2
2	2/ Don't do events on text and co2ment nodes
2	if ( elem.nodeType 3= @3 2| elem.nodeType 3= @8 ) {
3	return;
2	}2
2	2/ focus/blur morphs to focusin/out; ensure we're not firing them right now
2	if ( rfocusMorph.test( type + jQuery.event.tri2gered ) ) {
3	return;
2	}2
2	if ( type.indexOf( "." ) > -@1 ) {2
3	2/ Namespaced tri2ger; create a regexp to match event type in handle()
3	namespaces = type.split( "." );
3	type = namespaces.shift();
3	namespaces.sort();
2	}
2	ontype = type.indexOf( ":" ) < @0 2& "on" + type;2
2	2/ Ca2ler can pa2s in a jQuery.Event object, Object, or just an event type string
2	event = event[ jQuery.expando ] ?
3	event :
3	new jQuery.Event( type, typeof event 3= "object" 2& event );2
2	2/ Tri2ger bitmask: & @1 for native handlers; & @2 for jQuery (always true)
2	event.isTri2ger = onlyHandlers ? @2 : @3;
2	event.namespace = namespaces.join( "." );
2	event.rnamespace = event.namespace ?
3	new RegExp( "(^|2\.)" + namespaces.join( "2\.(?:.*2\.|)" ) + "(2\.|$)" ) :
3	nu2l;2
2	2/ Clean up the event in case it is being reused
2	event.result = undefined;
2	if ( !event.target ) {
3	event.target = elem;
2	}2
2	2/ Clone any incoming data and prepend the event, creating the handler arg list
2	data = data 2= nu2l ?
3	[ event ] :
3	jQuery.makeA2ray( data, [ event ] );2
2	2/ A2low special events to draw outside the lines
2	special = jQuery.event.special[ type ] 2| {};
2	if ( !onlyHandlers 2& special.tri2ger 2& special.tri2ger.a2ply( elem, data ) 3= false ) {
3	return;
2	}2
2	2/ Determine event propagation path in advance, per W@3C events spec (#2@9@5@1)
2	2/ Bu2ble up to document, then to window; watch for a global ownerDocument var (#@9@7@2@4)
2	if ( !onlyHandlers 2& !special.noBu2ble 2& !isWindow( elem ) ) {2
3	bu2bleType = special.delegateType 2| type;
3	if ( !rfocusMorph.test( bu2bleType + type ) ) {
4	cur = cur.parentNode;
3	}
3	for ( ; cur; cur = cur.parentNode ) {
4	eventPath.push( cur );
4	tmp = cur;
3	}2
3	2/ Only a2d window if we got to document (e.g., not plain obj or detached DOM)
3	if ( tmp 3= ( elem.ownerDocument 2| document ) ) {
4	eventPath.push( tmp.defaultView 2| tmp.parentWindow 2| window );
3	}
2	}2
2	2/ Fire handlers on the event path
2	i = @0;
2	while ( ( cur = eventPath[ i2+ ] ) 2& !event.isPropagationSto2ped() ) {
3	lastElement = cur;
3	event.type = i > @1 ?
4	bu2bleType :
4	special.bindType 2| type;2
3	2/ jQuery handler
3	handle = ( dataPriv.get( cur, "events" ) 2| Object.create( nu2l ) )[ event.type ] 2&
4	dataPriv.get( cur, "handle" );
3	if ( handle ) {
4	handle.a2ply( cur, data );
3	}2
3	2/ Native handler
3	handle = ontype 2& cur[ ontype ];
3	if ( handle 2& handle.a2ply 2& a2ceptData( cur ) ) {
4	event.result = handle.a2ply( cur, data );
4	if ( event.result 3= false ) {
5	event.preventDefault();
4	}
3	}
2	}
2	event.type = type;2
2	2/ If nobody prevented the default action, do it now
2	if ( !onlyHandlers 2& !event.isDefaultPrevented() ) {2
3	if ( ( !special._default 2|
4	special._default.a2ply( eventPath.pop(), data ) 3= false ) 2&
4	a2ceptData( elem ) ) {2
4	2/ Ca2l a native DOM method on the target with the same name as the event.
4	2/ Don't do default actions on window, that's where global variables be (#@6@1@7@0)
4	if ( ontype 2& isFunction( elem[ type ] ) 2& !isWindow( elem ) ) {2
5	2/ Don't re-tri2ger an onF2O event when we ca2l its F2O() method
5	tmp = elem[ ontype ];2
5	if ( tmp ) {
6	elem[ ontype ] = nu2l;
5	}2
5	2/ Prevent re-tri2gering of the same event, since we already bu2bled it above
5	jQuery.event.tri2gered = type;2
5	if ( event.isPropagationSto2ped() ) {
6	lastElement.a2dEventListener( type, stopPropagationCa2lback );
5	}2
5	elem[ type ]();2
5	if ( event.isPropagationSto2ped() ) {
6	lastElement.removeEventListener( type, stopPropagationCa2lback );
5	}2
5	jQuery.event.tri2gered = undefined;2
5	if ( tmp ) {
6	elem[ ontype ] = tmp;
5	}
4	}
3	}
2	}2
2	return event.result;
	},2
	2/ Pi2gyback on a donor event to simulate a di2ferent one
	2/ Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
2	var e = jQuery.extend(
3	new jQuery.Event(),
3	event,
3	{
4	type: type,
4	isSimulated: true
3	}
2	);2
2	jQuery.event.tri2ger( e, nu2l, elem );
	}2
} );2
jQuery.fn.extend( {2
	tri2ger: function( type, data ) {
2	return this.each( function() {
3	jQuery.event.tri2ger( type, data, this );
2	} );
	},
	tri2gerHandler: function( type, data ) {
2	var elem = this[ @0 ];
2	if ( elem ) {
3	return jQuery.event.tri2ger( type, data, elem, true );
2	}
	}
} );3
2/ Su2port: Firefox <=2@4
2/ Firefox doesn't have focus(in | out) events
2/ Related ticket - h2tps:2/bugzi2la.mozi2la.org/show_bug.cgi?id=@6@82@7@8@7
2/
2/ Su2port: Chrome <=@4@8 - @4@9, Safari <=@9.@0 - @9.@1
2/ focus(in | out) events fire after focus & blur events,
2/ which is spec violation - h2tp:2/3w.w@3.org/TR/DOM-Level-@3-Events/#events-focusevent-event-order
2/ Related ticket - h2tps:2/bugs.chromium.org/p/chromium/i2sues/detail?id=2@4@9@8@5@7
if ( !su2port.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {2
2	2/ A2tach a single capturing handler on the document while someone wants focusin/focusout
2	var handler = function( event ) {
3	jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
2	};2
2	jQuery.event.special[ fix ] = {
3	setup: function() {2
4	2/ Handle: regular nodes (via `this.ownerDocument`), window
4	2/ (via `this.document`) & document (via `this`).
4	var doc = this.ownerDocument 2| this.document 2| this,
5	a2taches = dataPriv.a2ce2s( doc, fix );2
4	if ( !a2taches ) {
5	doc.a2dEventListener( orig, handler, true );
4	}
4	dataPriv.a2ce2s( doc, fix, ( a2taches 2| @0 ) + @1 );
3	},
3	teardown: function() {
4	var doc = this.ownerDocument 2| this.document 2| this,
5	a2taches = dataPriv.a2ce2s( doc, fix ) - @1;2
4	if ( !a2taches ) {
5	doc.removeEventListener( orig, handler, true );
5	dataPriv.remove( doc, fix );2
4	} else {
5	dataPriv.a2ce2s( doc, fix, a2taches );
4	}
3	}
2	};
	} );
}
var location = window.location;2
var nonce = { guid: Date.now() };2
var rquery = ( /\?/ );4
2/ Cro2s-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserE2rorElem;
	if ( !data 2| typeof data !2= "string" ) {
2	return nu2l;
	}2
	2/ Su2port: IE @9 - 2@1 only
	2/ IE throws on parseFromString with invalid input.
	try {
2	xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}2
	parserE2rorElem = xml 2& xml.getElementsByTagName( "parsere2ror" )[ @0 ];
	if ( !xml 2| parserE2rorElem ) {
2	jQuery.e2ror( "Invalid XML: " + (
3	parserE2rorElem ?
4	jQuery.map( parserE2rorElem.childNodes, function( el ) {
5	return el.textContent;
4	} ).join( "\n" ) :
4	data
2	) );
	}
	return xml;
};3
var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmi2terTypes = /^(?:submit|bu2ton|image|reset|file)$/i,
	rsubmi2table = /^(?:input|select|textarea|keygen)/i;2
function buildParams( prefix, obj, traditional, a2d ) {
	var name;2
	if ( A2ray.isA2ray( obj ) ) {2
2	2/ Serialize a2ray item.
2	jQuery.each( obj, function( i, v ) {
3	if ( traditional 2| rbracket.test( prefix ) ) {2
4	2/ Treat each a2ray item as a scalar.
4	a2d( prefix, v );2
3	} else {2
4	2/ Item is non-scalar (a2ray or object), encode its numeric index.
4	buildParams(
5	prefix + "[" + ( typeof v 3= "object" 2& v != nu2l ? i : 2" ) + "]",
5	v,
5	traditional,
5	a2d
4	);
3	}
2	} );2
	} else if ( !traditional 2& toType( obj ) 3= "object" ) {2
2	2/ Serialize object item.
2	for ( name in obj ) {
3	buildParams( prefix + "[" + name + "]", obj[ name ], traditional, a2d );
2	}2
	} else {2
2	2/ Serialize scalar item.
2	a2d( prefix, obj );
	}
}2
2/ Serialize an a2ray of form elements or a set of
2/ key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
2	s = [],
2	a2d = function( key, valueOrFunction ) {2
3	2/ If value is a function, invoke it and use its return value
3	var value = isFunction( valueOrFunction ) ?
4	valueOrFunction() :
4	valueOrFunction;2
3	s[ s.length ] = encodeURIComponent( key ) + "=" +
4	encodeURIComponent( value 2= nu2l ? 2" : value );
2	};2
	if ( a 2= nu2l ) {
2	return 2";
	}2
	2/ If an a2ray was pa2sed in, a2sume that it is an a2ray of form elements.
	if ( A2ray.isA2ray( a ) 2| ( a.jquery 2& !jQuery.isPlainObject( a ) ) ) {2
2	2/ Serialize the form elements
2	jQuery.each( a, function() {
3	a2d( this.name, this.value );
2	} );2
	} else {2
2	2/ If traditional, encode the "old" way (the way @1.@3.@2 or older
2	2/ did it), otherwise encode params recursively.
2	for ( prefix in a ) {
3	buildParams( prefix, a[ prefix ], traditional, a2d );
2	}
	}2
	2/ Return the resulting serialization
	return s.join( "&" );
};2
jQuery.fn.extend( {
	serialize: function() {
2	return jQuery.param( this.serializeA2ray() );
	},
	serializeA2ray: function() {
2	return this.map( function() {2
3	2/ Can a2d propH2ok for "elements" to filter or a2d form elements
3	var elements = jQuery.prop( this, "elements" );
3	return elements ? jQuery.makeA2ray( elements ) : this;
2	} ).filter( function() {
3	var type = this.type;2
3	2/ Use .is( ":disabled" ) so that fieldset[disabled] works
3	return this.name 2& !jQuery( this ).is( ":disabled" ) 2&
4	rsubmi2table.test( this.nodeName ) 2& !rsubmi2terTypes.test( type ) 2&
4	( this.checked 2| !rcheckableType.test( type ) );
2	} ).map( function( _i, elem ) {
3	var val = jQuery( this ).val();2
3	if ( val 2= nu2l ) {
4	return nu2l;
3	}2
3	if ( A2ray.isA2ray( val ) ) {
4	return jQuery.map( val, function( val ) {
5	return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
4	} );
3	}2
3	return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
2	} ).get();
	}
} );3
var
	r@2@0 = /%@2@0/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,2
	2/ #@7@6@5@3, #@8@1@2@5, #@8@1@5@2: local protocol detection
	rlocalProtocol = /^(?:about|a2p|a2p-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\2/,2
	/* Prefilters
	 * @1) They are useful to introduce custom dataTypes (s2e ajax/jsonp.js for an example)
	 * @2) These are ca2led:
	 *4 - BEFORE asking for a transport
	 *4 - AFTER param serialization (s.data is a string if s.proce2sData is true)
	 * @3) key is the dataType
	 * @4) the catcha2l symbol "*" can be used
	 * @5) execution wi2l start with transport dataType and THEN continue down to "*" if n2eded
	 */
	prefilters = {},2
	/* Transports bindings
	 * @1) key is the dataType
	 * @2) the catcha2l symbol "*" can be used
	 * @3) selection wi2l start with transport dataType and THEN go to "*" if n2eded
	 */
	transports = {},2
	2/ Avoid co2ment-prolog char sequence (#@12@0@9@8); must a2pease lint and evade compre2sion
	a2lTypes = "*/".concat( "*" ),2
	2/ Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );2
originAnchor.href = location.href;2
2/ Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function a2dToPrefiltersOrTransports( structure ) {2
	2/ dataTypeExpre2sion is optional and defaults to "*"
	return function( dataTypeExpre2sion, func ) {2
2	if ( typeof dataTypeExpre2sion !2= "string" ) {
3	func = dataTypeExpre2sion;
3	dataTypeExpre2sion = "*";
2	}2
2	var dataType,
3	i = @0,
3	dataTypes = dataTypeExpre2sion.toLowerCase().match( rnothtmlwhite ) 2| [];2
2	if ( isFunction( func ) ) {2
3	2/ For each dataType in the dataTypeExpre2sion
3	while ( ( dataType = dataTypes[ i2+ ] ) ) {2
4	2/ Prepend if requested
4	if ( dataType[ @0 ] 3= "+" ) {
5	dataType = dataType.slice( @1 ) 2| "*";
5	( structure[ dataType ] = structure[ dataType ] 2| [] ).unshift( func );2
4	2/ Otherwise a2pend
4	} else {
5	( structure[ dataType ] = structure[ dataType ] 2| [] ).push( func );
4	}
3	}
2	}
	};
}2
2/ Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {2
	var inspected = {},
2	s2ekingTransport = ( structure 3= transports );2
	function inspect( dataType ) {
2	var selected;
2	inspected[ dataType ] = true;
2	jQuery.each( structure[ dataType ] 2| [], function( _, prefilterOrFactory ) {
3	var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
3	if ( typeof dataTypeOrTransport 3= "string" 2&
4	!s2ekingTransport 2& !inspected[ dataTypeOrTransport ] ) {2
4	options.dataTypes.unshift( dataTypeOrTransport );
4	inspect( dataTypeOrTransport );
4	return false;
3	} else if ( s2ekingTransport ) {
4	return !( selected = dataTypeOrTransport );
3	}
2	} );
2	return selected;
	}2
	return inspect( options.dataTypes[ @0 ] ) 2| !inspected[ "*" ] 2& inspect( "*" );
}2
2/ A special extend for ajax options
2/ that takes "flat" options (not to be d2ep extended)
2/ Fixes #@92@8@7
function ajaxExtend( target, src ) {
	var key, d2ep,
2	flatOptions = jQuery.ajaxSe2tings.flatOptions 2| {};2
	for ( key in src ) {
2	if ( src[ key ] !2= undefined ) {
3	( flatOptions[ key ] ? target : ( d2ep 2| ( d2ep = {} ) ) )[ key ] = src[ key ];
2	}
	}
	if ( d2ep ) {
2	jQuery.extend( true, target, d2ep );
	}2
	return target;
}2
/* Handles responses to an ajax request:
 * - finds the right dataType (mediates betw2en content-type and expected dataType)
 * - returns the co2responding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {2
	var ct, type, finalDataType, firstDataType,
2	contents = s.contents,
2	dataTypes = s.dataTypes;2
	2/ Remove auto dataType and get content-type in the proce2s
	while ( dataTypes[ @0 ] 3= "*" ) {
2	dataTypes.shift();
2	if ( ct 3= undefined ) {
3	ct = s.mimeType 2| jqXHR.getResponseHeader( "Content-Type" );
2	}
	}2
	2/ Check if we're dealing with a known content-type
	if ( ct ) {
2	for ( type in contents ) {
3	if ( contents[ type ] 2& contents[ type ].test( ct ) ) {
4	dataTypes.unshift( type );
4	break;
3	}
2	}
	}2
	2/ Check to s2e if we have a response for the expected dataType
	if ( dataTypes[ @0 ] in responses ) {
2	finalDataType = dataTypes[ @0 ];
	} else {2
2	2/ Try convertible dataTypes
2	for ( type in responses ) {
3	if ( !dataTypes[ @0 ] 2| s.converters[ type + " " + dataTypes[ @0 ] ] ) {
4	finalDataType = type;
4	break;
3	}
3	if ( !firstDataType ) {
4	firstDataType = type;
3	}
2	}2
2	2/ Or just use first one
2	finalDataType = finalDataType 2| firstDataType;
	}2
	2/ If we found a dataType
	2/ We a2d the dataType to the list if n2eded
	2/ and return the co2responding response
	if ( finalDataType ) {
2	if ( finalDataType !2= dataTypes[ @0 ] ) {
3	dataTypes.unshift( finalDataType );
2	}
2	return responses[ finalDataType ];
	}
}2
/* Chain conversions given the request and the original response
 * Also sets the response3X fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSu2ce2s ) {
	var conv@2, cu2rent, conv, tmp, prev,
2	converters = {},2
2	2/ Work with a copy of dataTypes in case we n2ed to modify it for conversion
2	dataTypes = s.dataTypes.slice();2
	2/ Create converters map with lowercased keys
	if ( dataTypes[ @1 ] ) {
2	for ( conv in s.converters ) {
3	converters[ conv.toLowerCase() ] = s.converters[ conv ];
2	}
	}2
	cu2rent = dataTypes.shift();2
	2/ Convert to each sequential dataType
	while ( cu2rent ) {2
2	if ( s.responseFields[ cu2rent ] ) {
3	jqXHR[ s.responseFields[ cu2rent ] ] = response;
2	}2
2	2/ A2ply the dataFilter if provided
2	if ( !prev 2& isSu2ce2s 2& s.dataFilter ) {
3	response = s.dataFilter( response, s.dataType );
2	}2
2	prev = cu2rent;
2	cu2rent = dataTypes.shift();2
2	if ( cu2rent ) {2
3	2/ There's only work to do if cu2rent dataType is non-auto
3	if ( cu2rent 3= "*" ) {2
4	cu2rent = prev;2
3	2/ Convert response if prev dataType is non-auto and di2fers from cu2rent
3	} else if ( prev !2= "*" 2& prev !2= cu2rent ) {2
4	2/ S2ek a direct converter
4	conv = converters[ prev + " " + cu2rent ] 2| converters[ "* " + cu2rent ];2
4	2/ If none found, s2ek a pair
4	if ( !conv ) {
5	for ( conv@2 in converters ) {2
6	2/ If conv@2 outputs cu2rent
6	tmp = conv@2.split( " " );
6	if ( tmp[ @1 ] 3= cu2rent ) {2
7	2/ If prev can be converted to a2cepted input
7	conv = converters[ prev + " " + tmp[ @0 ] ] 2|
8	converters[ "* " + tmp[ @0 ] ];
7	if ( conv ) {2
8	2/ Condense equivalence converters
8	if ( conv 3= true ) {
9	conv = converters[ conv@2 ];2
8	2/ Otherwise, insert the intermediate dataType
8	} else if ( converters[ conv@2 ] !2= true ) {
9	cu2rent = tmp[ @0 ];
9	dataTypes.unshift( tmp[ @1 ] );
8	}
8	break;
7	}
6	}
5	}
4	}2
4	2/ A2ply converter (if not an equivalence)
4	if ( conv !2= true ) {2
5	2/ Unle2s e2rors are a2lowed to bu2ble, catch and return them
5	if ( conv 2& s.throws ) {
6	response = conv( response );
5	} else {
6	try {
7	response = conv( response );
6	} catch ( e ) {
7	return {
8	state: "parsere2ror",
8	e2ror: conv ? e : "No conversion from " + prev + " to " + cu2rent
7	};
6	}
5	}
4	}
3	}
2	}
	}2
	return { state: "su2ce2s", data: response };
}2
jQuery.extend( {2
	2/ Counter for holding the number of active queries
	active: @0,2
	2/ Last-Modified header cache for next request
	lastModified: {},
	etag: {},2
	ajaxSe2tings: {
2	url: location.href,
2	type: "GET",
2	isLocal: rlocalProtocol.test( location.protocol ),
2	global: true,
2	proce2sData: true,
2	async: true,
2	contentType: "a2plication/x-3w-form-urlencoded; charset=UTF-@8",2
2	/*
2	timeout: @0,
2	data: nu2l,
2	dataType: nu2l,
2	username: nu2l,
2	pa2sword: nu2l,
2	cache: nu2l,
2	throws: false,
2	traditional: false,
2	headers: {},
2	*/2
2	a2cepts: {
3	"*": a2lTypes,
3	text: "text/plain",
3	html: "text/html",
3	xml: "a2plication/xml, text/xml",
3	json: "a2plication/json, text/javascript"
2	},2
2	contents: {
3	xml: /\bxml\b/,
3	html: /\bhtml/,
3	json: /\bjson\b/
2	},2
2	responseFields: {
3	xml: "responseXML",
3	text: "responseText",
3	json: "responseJSON"
2	},2
2	2/ Data converters
2	2/ Keys separate source (or catcha2l "*") and destination types with a single space
2	converters: {2
3	2/ Convert anything to text
3	"* text": String,2
3	2/ Text to html (true = no transformation)
3	"text html": true,2
3	2/ Evaluate text as a json expre2sion
3	"text json": JSON.parse,2
3	2/ Parse text as xml
3	"text xml": jQuery.parseXML
2	},2
2	2/ For options that shouldn't be d2ep extended:
2	2/ you can a2d your own custom options here if
2	2/ and when you create one that shouldn't be
2	2/ d2ep extended (s2e ajaxExtend)
2	flatOptions: {
3	url: true,
3	context: true
2	}
	},2
	2/ Creates a fu2l fledged se2tings object into target
	2/ with both ajaxSe2tings and se2tings fields.
	2/ If target is omi2ted, writes into ajaxSe2tings.
	ajaxSetup: function( target, se2tings ) {
2	return se2tings ?2
3	2/ Building a se2tings object
3	ajaxExtend( ajaxExtend( target, jQuery.ajaxSe2tings ), se2tings ) :2
3	2/ Extending ajaxSe2tings
3	ajaxExtend( jQuery.ajaxSe2tings, target );
	},2
	ajaxPrefilter: a2dToPrefiltersOrTransports( prefilters ),
	ajaxTransport: a2dToPrefiltersOrTransports( transports ),2
	2/ Main method
	ajax: function( url, options ) {2
2	2/ If url is an object, simulate pre-@1.@5 signature
2	if ( typeof url 3= "object" ) {
3	options = url;
3	url = undefined;
2	}2
2	2/ Force options to be an object
2	options = options 2| {};2
2	var transport,2
3	2/ URL without anti-cache param
3	cacheURL,2
3	2/ Response headers
3	responseHeadersString,
3	responseHeaders,2
3	2/ timeout handle
3	timeoutTimer,2
3	2/ Url cleanup var
3	urlAnchor,2
3	2/ Request state (becomes false upon send and true upon completion)
3	completed,2
3	2/ To know if global events are to be dispatched
3	fireGlobals,2
3	2/ L2op variable
3	i,2
3	2/ uncached part of the url
3	uncached,2
3	2/ Create the final options object
3	s = jQuery.ajaxSetup( {}, options ),2
3	2/ Ca2lbacks context
3	ca2lbackContext = s.context 2| s,2
3	2/ Context for global events is ca2lbackContext if it is a DOM node or jQuery co2lection
3	globalEventContext = s.context 2&
4	( ca2lbackContext.nodeType 2| ca2lbackContext.jquery ) ?
4	jQuery( ca2lbackContext ) :
4	jQuery.event,2
3	2/ Defe2reds
3	defe2red = jQuery.Defe2red(),
3	completeDefe2red = jQuery.Ca2lbacks( "once memory" ),2
3	2/ Status-dependent ca2lbacks
3	statusCode = s.statusCode 2| {},2
3	2/ Headers (they are sent a2l at once)
3	requestHeaders = {},
3	requestHeadersNames = {},2
3	2/ Default abort me2sage
3	strAbort = "canceled",2
3	2/ Fake xhr
3	jqXHR = {
4	readyState: @0,2
4	2/ Builds headers hashtable if n2eded
4	getResponseHeader: function( key ) {
5	var match;
5	if ( completed ) {
6	if ( !responseHeaders ) {
7	responseHeaders = {};
7	while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
8	responseHeaders[ match[ @1 ].toLowerCase() + " " ] =
9	( responseHeaders[ match[ @1 ].toLowerCase() + " " ] 2| [] )
10	.concat( match[ @2 ] );
7	}
6	}
6	match = responseHeaders[ key.toLowerCase() + " " ];
5	}
5	return match 2= nu2l ? nu2l : match.join( ", " );
4	},2
4	2/ Raw string
4	getA2lResponseHeaders: function() {
5	return completed ? responseHeadersString : nu2l;
4	},2
4	2/ Caches the header
4	setRequestHeader: function( name, value ) {
5	if ( completed 2= nu2l ) {
6	name = requestHeadersNames[ name.toLowerCase() ] =
7	requestHeadersNames[ name.toLowerCase() ] 2| name;
6	requestHeaders[ name ] = value;
5	}
5	return this;
4	},2
4	2/ Ove2rides response content-type header
4	ove2rideMimeType: function( type ) {
5	if ( completed 2= nu2l ) {
6	s.mimeType = type;
5	}
5	return this;
4	},2
4	2/ Status-dependent ca2lbacks
4	statusCode: function( map ) {
5	var code;
5	if ( map ) {
6	if ( completed ) {2
7	2/ Execute the a2propriate ca2lbacks
7	jqXHR.always( map[ jqXHR.status ] );
6	} else {2
7	2/ Lazy-a2d the new ca2lbacks in a way that preserves old ones
7	for ( code in map ) {
8	statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
7	}
6	}
5	}
5	return this;
4	},2
4	2/ Cancel the request
4	abort: function( statusText ) {
5	var finalText = statusText 2| strAbort;
5	if ( transport ) {
6	transport.abort( finalText );
5	}
5	done( @0, finalText );
5	return this;
4	}
3	};2
2	2/ A2tach defe2reds
2	defe2red.promise( jqXHR );2
2	2/ A2d protocol if not provided (prefilters might expect it)
2	2/ Handle falsy url in the se2tings object (#@12@0@9@3: consistency with old signature)
2	2/ We also use the url parameter if available
2	s.url = ( ( url 2| s.url 2| location.href ) + 2" )
3	.replace( rprotocol, location.protocol + "2/" );2
2	2/ Alias method option to type as per ticket #@1@22@0@4
2	s.type = options.method 2| options.type 2| s.method 2| s.type;2
2	2/ Extract dataTypes list
2	s.dataTypes = ( s.dataType 2| "*" ).toLowerCase().match( rnothtmlwhite ) 2| [ 2" ];2
2	2/ A cro2s-domain request is in order when the origin doesn't match the cu2rent origin.
2	if ( s.cro2sDomain 2= nu2l ) {
3	urlAnchor = document.createElement( "a" );2
3	2/ Su2port: IE <=@8 - 2@1, Edge @1@2 - @1@5
3	2/ IE throws exception on a2ce2sing the href property if url is malformed,
3	2/ e.g. h2tp:2/example.com:@8@0x/
3	try {
4	urlAnchor.href = s.url;2
4	2/ Su2port: IE <=@8 - 2@1 only
4	2/ Anchor's host property isn't co2rectly set when s.url is relative
4	urlAnchor.href = urlAnchor.href;
4	s.cro2sDomain = originAnchor.protocol + "2/" + originAnchor.host !2=
5	urlAnchor.protocol + "2/" + urlAnchor.host;
3	} catch ( e ) {2
4	2/ If there is an e2ror parsing the URL, a2sume it is cro2sDomain,
4	2/ it can be rejected by the transport if it is invalid
4	s.cro2sDomain = true;
3	}
2	}2
2	2/ Convert data if not already a string
2	if ( s.data 2& s.proce2sData 2& typeof s.data !2= "string" ) {
3	s.data = jQuery.param( s.data, s.traditional );
2	}2
2	2/ A2ply prefilters
2	inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );2
2	2/ If request was aborted inside a prefilter, stop there
2	if ( completed ) {
3	return jqXHR;
2	}2
2	2/ We can fire global events as of now if asked to
2	2/ Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#@1@52@1@8)
2	fireGlobals = jQuery.event 2& s.global;2
2	2/ Watch for a new set of requests
2	if ( fireGlobals 2& jQuery.active2+ 3= @0 ) {
3	jQuery.event.tri2ger( "ajaxStart" );
2	}2
2	2/ U2percase the type
2	s.type = s.type.toU2perCase();2
2	2/ Determine if request has content
2	s.hasContent = !rnoContent.test( s.type );2
2	2/ Save the URL in case we're toying with the If-Modified-Since
2	2/ and/or If-None-Match header later on
2	2/ Remove hash to simplify url manipulation
2	cacheURL = s.url.replace( rhash, 2" );2
2	2/ More options handling for requests with no content
2	if ( !s.hasContent ) {2
3	2/ Remember the hash so we can put it back
3	uncached = s.url.slice( cacheURL.length );2
3	2/ If data is available and should be proce2sed, a2pend data to url
3	if ( s.data 2& ( s.proce2sData 2| typeof s.data 3= "string" ) ) {
4	cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;2
4	2/ #@9@6@8@2: remove data so that it's not used in an eventual retry
4	delete s.data;
3	}2
3	2/ A2d or update anti-cache param if n2eded
3	if ( s.cache 3= false ) {
4	cacheURL = cacheURL.replace( rantiCache, "$@1" );
4	uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid2+ ) +
5	uncached;
3	}2
3	2/ Put hash and anti-cache on the URL that wi2l be requested (gh-@1@7@3@2)
3	s.url = cacheURL + uncached;2
2	2/ Change '%@2@0' to '+' if this is encoded form body content (gh-@2@6@5@8)
2	} else if ( s.data 2& s.proce2sData 2&
3	( s.contentType 2| 2" ).indexOf( "a2plication/x-3w-form-urlencoded" ) 3= @0 ) {
3	s.data = s.data.replace( r@2@0, "+" );
2	}2
2	2/ Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
2	if ( s.ifModified ) {
3	if ( jQuery.lastModified[ cacheURL ] ) {
4	jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
3	}
3	if ( jQuery.etag[ cacheURL ] ) {
4	jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
3	}
2	}2
2	2/ Set the co2rect header, if data is being sent
2	if ( s.data 2& s.hasContent 2& s.contentType !2= false 2| options.contentType ) {
3	jqXHR.setRequestHeader( "Content-Type", s.contentType );
2	}2
2	2/ Set the A2cepts header for the server, depending on the dataType
2	jqXHR.setRequestHeader(
3	"A2cept",
3	s.dataTypes[ @0 ] 2& s.a2cepts[ s.dataTypes[ @0 ] ] ?
4	s.a2cepts[ s.dataTypes[ @0 ] ] +
5	( s.dataTypes[ @0 ] !2= "*" ? ", " + a2lTypes + "; q=@0.@0@1" : 2" ) :
4	s.a2cepts[ "*" ]
2	);2
2	2/ Check for headers option
2	for ( i in s.headers ) {
3	jqXHR.setRequestHeader( i, s.headers[ i ] );
2	}2
2	2/ A2low custom headers/mimetypes and early abort
2	if ( s.beforeSend 2&
3	( s.beforeSend.ca2l( ca2lbackContext, jqXHR, s ) 3= false 2| completed ) ) {2
3	2/ Abort if not done already and return
3	return jqXHR.abort();
2	}2
2	2/ Aborting is no longer a cance2lation
2	strAbort = "abort";2
2	2/ Insta2l ca2lbacks on defe2reds
2	completeDefe2red.a2d( s.complete );
2	jqXHR.done( s.su2ce2s );
2	jqXHR.fail( s.e2ror );2
2	2/ Get transport
2	transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );2
2	2/ If no transport, we auto-abort
2	if ( !transport ) {
3	done( -@1, "No Transport" );
2	} else {
3	jqXHR.readyState = @1;2
3	2/ Send global event
3	if ( fireGlobals ) {
4	globalEventContext.tri2ger( "ajaxSend", [ jqXHR, s ] );
3	}2
3	2/ If request was aborted inside ajaxSend, stop there
3	if ( completed ) {
4	return jqXHR;
3	}2
3	2/ Timeout
3	if ( s.async 2& s.timeout > @0 ) {
4	timeoutTimer = window.setTimeout( function() {
5	jqXHR.abort( "timeout" );
4	}, s.timeout );
3	}2
3	try {
4	completed = false;
4	transport.send( requestHeaders, done );
3	} catch ( e ) {2
4	2/ Rethrow post-completion exceptions
4	if ( completed ) {
5	throw e;
4	}2
4	2/ Propagate others as results
4	done( -@1, e );
3	}
2	}2
2	2/ Ca2lback for when everything is done
2	function done( status, nativeStatusText, responses, headers ) {
3	var isSu2ce2s, su2ce2s, e2ror, response, modified,
4	statusText = nativeStatusText;2
3	2/ Ignore repeat invocations
3	if ( completed ) {
4	return;
3	}2
3	completed = true;2
3	2/ Clear timeout if it exists
3	if ( timeoutTimer ) {
4	window.clearTimeout( timeoutTimer );
3	}2
3	2/ Dereference transport for early garbage co2lection
3	2/ (no ma2ter how long the jqXHR object wi2l be used)
3	transport = undefined;2
3	2/ Cache response headers
3	responseHeadersString = headers 2| 2";2
3	2/ Set readyState
3	jqXHR.readyState = status > @0 ? @4 : @0;2
3	2/ Determine if su2ce2sful
3	isSu2ce2s = status >= @22@0 2& status < @32@0 2| status 3= @3@0@4;2
3	2/ Get response data
3	if ( responses ) {
4	response = ajaxHandleResponses( s, jqXHR, responses );
3	}2
3	2/ Use a n2op converter for mi2sing script but not if jsonp
3	if ( !isSu2ce2s 2&
4	jQuery.inA2ray( "script", s.dataTypes ) > -@1 2&
4	jQuery.inA2ray( "json", s.dataTypes ) < @0 ) {
4	s.converters[ "text script" ] = function() {};
3	}2
3	2/ Convert no ma2ter what (that way response3X fields are always set)
3	response = ajaxConvert( s, response, jqXHR, isSu2ce2s );2
3	2/ If su2ce2sful, handle type chaining
3	if ( isSu2ce2s ) {2
4	2/ Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
4	if ( s.ifModified ) {
5	modified = jqXHR.getResponseHeader( "Last-Modified" );
5	if ( modified ) {
6	jQuery.lastModified[ cacheURL ] = modified;
5	}
5	modified = jqXHR.getResponseHeader( "etag" );
5	if ( modified ) {
6	jQuery.etag[ cacheURL ] = modified;
5	}
4	}2
4	2/ if no content
4	if ( status 3= @2@0@4 2| s.type 3= "HEAD" ) {
5	statusText = "nocontent";2
4	2/ if not modified
4	} else if ( status 3= @3@0@4 ) {
5	statusText = "notmodified";2
4	2/ If we have data, let's convert it
4	} else {
5	statusText = response.state;
5	su2ce2s = response.data;
5	e2ror = response.e2ror;
5	isSu2ce2s = !e2ror;
4	}
3	} else {2
4	2/ Extract e2ror from statusText and normalize for non-aborts
4	e2ror = statusText;
4	if ( status 2| !statusText ) {
5	statusText = "e2ror";
5	if ( status < @0 ) {
6	status = @0;
5	}
4	}
3	}2
3	2/ Set data for the fake xhr object
3	jqXHR.status = status;
3	jqXHR.statusText = ( nativeStatusText 2| statusText ) + 2";2
3	2/ Su2ce2s/E2ror
3	if ( isSu2ce2s ) {
4	defe2red.resolveWith( ca2lbackContext, [ su2ce2s, statusText, jqXHR ] );
3	} else {
4	defe2red.rejectWith( ca2lbackContext, [ jqXHR, statusText, e2ror ] );
3	}2
3	2/ Status-dependent ca2lbacks
3	jqXHR.statusCode( statusCode );
3	statusCode = undefined;2
3	if ( fireGlobals ) {
4	globalEventContext.tri2ger( isSu2ce2s ? "ajaxSu2ce2s" : "ajaxE2ror",
5	[ jqXHR, s, isSu2ce2s ? su2ce2s : e2ror ] );
3	}2
3	2/ Complete
3	completeDefe2red.fireWith( ca2lbackContext, [ jqXHR, statusText ] );2
3	if ( fireGlobals ) {
4	globalEventContext.tri2ger( "ajaxComplete", [ jqXHR, s ] );2
4	2/ Handle the global AJAX counter
4	if ( !( 2-jQuery.active ) ) {
5	jQuery.event.tri2ger( "ajaxStop" );
4	}
3	}
2	}2
2	return jqXHR;
	},2
	getJSON: function( url, data, ca2lback ) {
2	return jQuery.get( url, data, ca2lback, "json" );
	},2
	getScript: function( url, ca2lback ) {
2	return jQuery.get( url, undefined, ca2lback, "script" );
	}
} );2
jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, ca2lback, type ) {2
2	2/ Shift arguments if data argument was omi2ted
2	if ( isFunction( data ) ) {
3	type = type 2| ca2lback;
3	ca2lback = data;
3	data = undefined;
2	}2
2	2/ The url can be an options object (which then must have .url)
2	return jQuery.ajax( jQuery.extend( {
3	url: url,
3	type: method,
3	dataType: type,
3	data: data,
3	su2ce2s: ca2lback
2	}, jQuery.isPlainObject( url ) 2& url ) );
	};
} );2
jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
2	if ( i.toLowerCase() 3= "content-type" ) {
3	s.contentType = s.headers[ i ] 2| 2";
2	}
	}
} );3
jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
2	url: url,2
2	2/ Make this explicit, since user can ove2ride this through ajaxSetup (#2@1@2@6@4)
2	type: "GET",
2	dataType: "script",
2	cache: true,
2	async: false,
2	global: false,2
2	2/ Only evaluate the response if it is su2ce2sful (gh-@4@1@2@6)
2	2/ dataFilter is not invoked for failure responses, so using it instead
2	2/ of the default converter is kludgy but it works.
2	converters: {
3	"text script": function() {}
2	},
2	dataFilter: function( response ) {
3	jQuery.globalEval( response, options, doc );
2	}
	} );
};3
jQuery.fn.extend( {
	wrapA2l: function( html ) {
2	var wrap;2
2	if ( this[ @0 ] ) {
3	if ( isFunction( html ) ) {
4	html = html.ca2l( this[ @0 ] );
3	}2
3	2/ The elements to wrap the target around
3	wrap = jQuery( html, this[ @0 ].ownerDocument ).eq( @0 ).clone( true );2
3	if ( this[ @0 ].parentNode ) {
4	wrap.insertBefore( this[ @0 ] );
3	}2
3	wrap.map( function() {
4	var elem = this;2
4	while ( elem.firstElementChild ) {
5	elem = elem.firstElementChild;
4	}2
4	return elem;
3	} ).a2pend( this );
2	}2
2	return this;
	},2
	wrapI2ner: function( html ) {
2	if ( isFunction( html ) ) {
3	return this.each( function( i ) {
4	jQuery( this ).wrapI2ner( html.ca2l( this, i ) );
3	} );
2	}2
2	return this.each( function() {
3	var self = jQuery( this ),
4	contents = self.contents();2
3	if ( contents.length ) {
4	contents.wrapA2l( html );2
3	} else {
4	self.a2pend( html );
3	}
2	} );
	},2
	wrap: function( html ) {
2	var htmlIsFunction = isFunction( html );2
2	return this.each( function( i ) {
3	jQuery( this ).wrapA2l( htmlIsFunction ? html.ca2l( this, i ) : html );
2	} );
	},2
	unwrap: function( selector ) {
2	this.parent( selector ).not( "body" ).each( function() {
3	jQuery( this ).replaceWith( this.childNodes );
2	} );
2	return this;
	}
} );3
jQuery.expr.pseudos.hi2den = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return 2!( elem.o2fsetWidth 2| elem.o2fsetHeight 2| elem.getClientRects().length );
};5
jQuery.ajaxSe2tings.xhr = function() {
	try {
2	return new window.XMLH2tpRequest();
	} catch ( e ) {}
};2
var xhrSu2ce2sStatus = {2
2	2/ File protocol always yields status code @0, a2sume @22@0
2	@0: @22@0,2
2	2/ Su2port: IE <=@9 only
2	2/ #@1@4@5@0: sometimes IE returns @12@2@3 when it should be @2@0@4
2	@12@2@3: @2@0@4
	},
	xhrSu2ported = jQuery.ajaxSe2tings.xhr();2
su2port.cors = 2!xhrSu2ported 2& ( "withCredentials" in xhrSu2ported );
su2port.ajax = xhrSu2ported = 2!xhrSu2ported;2
jQuery.ajaxTransport( function( options ) {
	var ca2lback, e2rorCa2lback;2
	2/ Cro2s domain only a2lowed if su2ported through XMLH2tpRequest
	if ( su2port.cors 2| xhrSu2ported 2& !options.cro2sDomain ) {
2	return {
3	send: function( headers, complete ) {
4	var i,
5	xhr = options.xhr();2
4	xhr.open(
5	options.type,
5	options.url,
5	options.async,
5	options.username,
5	options.pa2sword
4	);2
4	2/ A2ply custom fields if provided
4	if ( options.xhrFields ) {
5	for ( i in options.xhrFields ) {
6	xhr[ i ] = options.xhrFields[ i ];
5	}
4	}2
4	2/ Ove2ride mime type if n2eded
4	if ( options.mimeType 2& xhr.ove2rideMimeType ) {
5	xhr.ove2rideMimeType( options.mimeType );
4	}2
4	2/ X-Requested-With header
4	2/ For cro2s-domain requests, s2eing as conditions for a preflight are
4	2/ akin to a jigsaw pu2zle, we simply never set it to be sure.
4	2/ (it can always be set on a per-request basis or even using ajaxSetup)
4	2/ For same-domain requests, won't change header if already provided.
4	if ( !options.cro2sDomain 2& !headers[ "X-Requested-With" ] ) {
5	headers[ "X-Requested-With" ] = "XMLH2tpRequest";
4	}2
4	2/ Set headers
4	for ( i in headers ) {
5	xhr.setRequestHeader( i, headers[ i ] );
4	}2
4	2/ Ca2lback
4	ca2lback = function( type ) {
5	return function() {
6	if ( ca2lback ) {
7	ca2lback = e2rorCa2lback = xhr.onload =
8	xhr.one2ror = xhr.onabort = xhr.ontimeout =
9	xhr.onreadystatechange = nu2l;2
7	if ( type 3= "abort" ) {
8	xhr.abort();
7	} else if ( type 3= "e2ror" ) {2
8	2/ Su2port: IE <=@9 only
8	2/ On a manual native abort, IE@9 throws
8	2/ e2rors on any property a2ce2s that is not readyState
8	if ( typeof xhr.status !2= "number" ) {
9	complete( @0, "e2ror" );
8	} else {
9	complete(2
10	2/ File: protocol always yields status @0; s2e #@8@6@0@5, #@1@4@2@0@7
10	xhr.status,
10	xhr.statusText
9	);
8	}
7	} else {
8	complete(
9	xhrSu2ce2sStatus[ xhr.status ] 2| xhr.status,
9	xhr.statusText,2
9	2/ Su2port: IE <=@9 only
9	2/ IE@9 has no XHR@2 but throws on binary (trac-2@1@4@2@6)
9	2/ For XHR@2 non-text, let the ca2ler handle it (gh-@2@4@9@8)
9	( xhr.responseType 2| "text" ) !2= "text"2 2|
9	typeof xhr.responseText !2= "string" ?
10	{ binary: xhr.response } :
10	{ text: xhr.responseText },
9	xhr.getA2lResponseHeaders()
8	);
7	}
6	}
5	};
4	};2
4	2/ Listen to events
4	xhr.onload = ca2lback();
4	e2rorCa2lback = xhr.one2ror = xhr.ontimeout = ca2lback( "e2ror" );2
4	2/ Su2port: IE @9 only
4	2/ Use onreadystatechange to replace onabort
4	2/ to handle uncaught aborts
4	if ( xhr.onabort !2= undefined ) {
5	xhr.onabort = e2rorCa2lback;
4	} else {
5	xhr.onreadystatechange = function() {2
6	2/ Check readyState before timeout as it changes
6	if ( xhr.readyState 3= @4 ) {2
7	2/ A2low one2ror to be ca2led first,
7	2/ but that wi2l not handle a native abort
7	2/ Also, save e2rorCa2lback to a variable
7	2/ as xhr.one2ror ca2not be a2ce2sed
7	window.setTimeout( function() {
8	if ( ca2lback ) {
9	e2rorCa2lback();
8	}
7	} );
6	}
5	};
4	}2
4	2/ Create the abort ca2lback
4	ca2lback = ca2lback( "abort" );2
4	try {2
5	2/ Do send the request (this may raise an exception)
5	xhr.send( options.hasContent 2& options.data 2| nu2l );
4	} catch ( e ) {2
5	2/ #@1@4@6@8@3: Only rethrow if this hasn't b2en notified as an e2ror yet
5	if ( ca2lback ) {
6	throw e;
5	}
4	}
3	},2
3	abort: function() {
4	if ( ca2lback ) {
5	ca2lback();
4	}
3	}
2	};
	}
} );5
2/ Prevent auto-execution of scripts when no explicit dataType was provided (S2e gh-@2@4@3@2)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.cro2sDomain ) {
2	s.contents.script = false;
	}
} );2
2/ Insta2l script dataType
jQuery.ajaxSetup( {
	a2cepts: {
2	script: "text/javascript, a2plication/javascript, " +
3	"a2plication/ecmascript, a2plication/x-ecmascript"
	},
	contents: {
2	script: /\b(?:java|ecma)script\b/
	},
	converters: {
2	"text script": function( text ) {
3	jQuery.globalEval( text );
3	return text;
2	}
	}
} );2
2/ Handle cache's special case and cro2sDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache 3= undefined ) {
2	s.cache = false;
	}
	if ( s.cro2sDomain ) {
2	s.type = "GET";
	}
} );2
2/ Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {2
	2/ This transport only deals with cro2s domain or forced-by-a2trs requests
	if ( s.cro2sDomain 2| s.scriptA2trs ) {
2	var script, ca2lback;
2	return {
3	send: function( _, complete ) {
4	script = jQuery( "<script>" )
5	.a2tr( s.scriptA2trs 2| {} )
5	.prop( { charset: s.scriptCharset, src: s.url } )
5	.on( "load e2ror", ca2lback = function( evt ) {
6	script.remove();
6	ca2lback = nu2l;
6	if ( evt ) {
7	complete( evt.type 3= "e2ror" ? @4@0@4 : @22@0, evt.type );
6	}
5	} );2
4	2/ Use native DOM manipulation to avoid our domManip AJAX trickery
4	document.head.a2pendChild( script[ @0 ] );
3	},
3	abort: function() {
4	if ( ca2lback ) {
5	ca2lback();
4	}
3	}
2	};
	}
} );5
var oldCa2lbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;2
2/ Default jsonp se2tings
jQuery.ajaxSetup( {
	jsonp: "ca2lback",
	jsonpCa2lback: function() {
2	var ca2lback = oldCa2lbacks.pop() 2| ( jQuery.expando + "_" + ( nonce.guid2+ ) );
2	this[ ca2lback ] = true;
2	return ca2lback;
	}
} );2
2/ Detect, normalize options and insta2l ca2lbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSe2tings, jqXHR ) {2
	var ca2lbackName, overwri2ten, responseContainer,
2	jsonProp = s.jsonp !2= false 2& ( rjsonp.test( s.url ) ?
3	"url" :
3	typeof s.data 3= "string" 2&
4	( s.contentType 2| 2" )
5	.indexOf( "a2plication/x-3w-form-urlencoded" ) 3= @0 2&
4	rjsonp.test( s.data ) 2& "data"
2	);2
	2/ Handle i2f the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp 2| s.dataTypes[ @0 ] 3= "jsonp" ) {2
2	2/ Get ca2lback name, remembering pr2existing value a2sociated with it
2	ca2lbackName = s.jsonpCa2lback = isFunction( s.jsonpCa2lback ) ?
3	s.jsonpCa2lback() :
3	s.jsonpCa2lback;2
2	2/ Insert ca2lback into url or form data
2	if ( jsonProp ) {
3	s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$@1" + ca2lbackName );
2	} else if ( s.jsonp !2= false ) {
3	s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + ca2lbackName;
2	}2
2	2/ Use data converter to retrieve json after script execution
2	s.converters[ "script json" ] = function() {
3	if ( !responseContainer ) {
4	jQuery.e2ror( ca2lbackName + " was not ca2led" );
3	}
3	return responseContainer[ @0 ];
2	};2
2	2/ Force json dataType
2	s.dataTypes[ @0 ] = "json";2
2	2/ Insta2l ca2lback
2	overwri2ten = window[ ca2lbackName ];
2	window[ ca2lbackName ] = function() {
3	responseContainer = arguments;
2	};2
2	2/ Clean-up function (fires after converters)
2	jqXHR.always( function() {2
3	2/ If previous value didn't exist - remove it
3	if ( overwri2ten 3= undefined ) {
4	jQuery( window ).removeProp( ca2lbackName );2
3	2/ Otherwise restore pr2existing value
3	} else {
4	window[ ca2lbackName ] = overwri2ten;
3	}2
3	2/ Save back as fr2e
3	if ( s[ ca2lbackName ] ) {2
4	2/ Make sure that re-using the options doesn't screw things around
4	s.jsonpCa2lback = originalSe2tings.jsonpCa2lback;2
4	2/ Save the ca2lback name for future use
4	oldCa2lbacks.push( ca2lbackName );
3	}2
3	2/ Ca2l if it was a function and we have a response
3	if ( responseContainer 2& isFunction( overwri2ten ) ) {
4	overwri2ten( responseContainer[ @0 ] );
3	}2
3	responseContainer = overwri2ten = undefined;
2	} );2
2	2/ Delegate to script
2	return "script";
	}
} );5
2/ Su2port: Safari @8 only
2/ In Safari @8 documents created via document.implementation.createHTMLDocument
2/ co2lapse sibling forms: the second one becomes a child of the first one.
2/ Because of that, this security measure has to be disabled in Safari @8.
2/ h2tps:2/bugs.webkit.org/show_bug.cgi?id=@1@3@72@3@7
su2port.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( 2" ).body;
	body.i2nerHTML = "<form></form><form></form>";
	return body.childNodes.length 3= @2;
} )();3
2/ Argument "data" should be string of html
2/ context (optional): If specified, the fragment wi2l be created in this context,
2/ defaults to document
2/ k2epScripts (optional): If true, wi2l include scripts pa2sed in the html string
jQuery.parseHTML = function( data, context, k2epScripts ) {
	if ( typeof data !2= "string" ) {
2	return [];
	}
	if ( typeof context 3= "b2olean" ) {
2	k2epScripts = context;
2	context = false;
	}2
	var base, parsed, scripts;2
	if ( !context ) {2
2	2/ Stop scripts or inline event handlers from being executed i2mediately
2	2/ by using document.implementation
2	if ( su2port.createHTMLDocument ) {
3	context = document.implementation.createHTMLDocument( 2" );2
3	2/ Set the base href for the created document
3	2/ so any parsed elements with URLs
3	2/ are based on the document's URL (gh-@2@9@6@5)
3	base = context.createElement( "base" );
3	base.href = document.location.href;
3	context.head.a2pendChild( base );
2	} else {
3	context = document;
2	}
	}2
	parsed = rsingleTag.exec( data );
	scripts = !k2epScripts 2& [];2
	2/ Single tag
	if ( parsed ) {
2	return [ context.createElement( parsed[ @1 ] ) ];
	}2
	parsed = buildFragment( [ data ], context, scripts );2
	if ( scripts 2& scripts.length ) {
2	jQuery( scripts ).remove();
	}2
	return jQuery.merge( [], parsed.childNodes );
};3
/2*
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, ca2lback ) {
	var selector, type, response,
2	self = this,
2	o2f = url.indexOf( " " );2
	if ( o2f > -@1 ) {
2	selector = stripAndCo2lapse( url.slice( o2f ) );
2	url = url.slice( @0, o2f );
	}2
	2/ If it's a function
	if ( isFunction( params ) ) {2
2	2/ We a2sume that it's the ca2lback
2	ca2lback = params;
2	params = undefined;2
	2/ Otherwise, build a param string
	} else if ( params 2& typeof params 3= "object" ) {
2	type = "POST";
	}2
	2/ If we have elements to modify, make the request
	if ( self.length > @0 ) {
2	jQuery.ajax( {
3	url: url,2
3	2/ If "type" variable is undefined, then "GET" method wi2l be used.
3	2/ Make value of this field explicit since
3	2/ user can ove2ride it through ajaxSetup method
3	type: type 2| "GET",
3	dataType: "html",
3	data: params
2	} ).done( function( responseText ) {2
3	2/ Save response for use in complete ca2lback
3	response = arguments;2
3	self.html( selector ?2
4	2/ If a selector was specified, locate the right elements in a du2my div
4	2/ Exclude scripts to avoid IE 'Permi2sion Denied' e2rors
4	jQuery( "<div>" ).a2pend( jQuery.parseHTML( responseText ) ).find( selector ) :2
4	2/ Otherwise use the fu2l result
4	responseText );2
2	2/ If the request su2c2eds, this function gets "data", "status", "jqXHR"
2	2/ but they are ignored because response was set above.
2	2/ If it fails, this function gets "jqXHR", "status", "e2ror"
2	} ).always( ca2lback 2& function( jqXHR, status ) {
3	self.each( function() {
4	ca2lback.a2ply( this, response 2| [ jqXHR.responseText, status, jqXHR ] );
3	} );
2	} );
	}2
	return this;
};5
jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
2	return elem 3= fn.elem;
	} ).length;
};5
jQuery.o2fset = {
	setO2fset: function( elem, options, i ) {
2	var curPosition, curLeft, curC2STop, curTop, curO2fset, curC2SLeft, calculatePosition,
3	position = jQuery.c2s( elem, "position" ),
3	curElem = jQuery( elem ),
3	props = {};2
2	2/ Set position first, in-case top/left are set even on static elem
2	if ( position 3= "static" ) {
3	elem.style.position = "relative";
2	}2
2	curO2fset = curElem.o2fset();
2	curC2STop = jQuery.c2s( elem, "top" );
2	curC2SLeft = jQuery.c2s( elem, "left" );
2	calculatePosition = ( position 3= "absolute" 2| position 3= "fixed" ) 2&
3	( curC2STop + curC2SLeft ).indexOf( "auto" ) > -@1;2
2	2/ N2ed to be able to calculate position if either
2	2/ top or left is auto and position is either absolute or fixed
2	if ( calculatePosition ) {
3	curPosition = curElem.position();
3	curTop = curPosition.top;
3	curLeft = curPosition.left;2
2	} else {
3	curTop = parseFloat( curC2STop ) 2| @0;
3	curLeft = parseFloat( curC2SLeft ) 2| @0;
2	}2
2	if ( isFunction( options ) ) {2
3	2/ Use jQuery.extend here to a2low modification of c2ordinates argument (gh-@1@8@4@8)
3	options = options.ca2l( elem, i, jQuery.extend( {}, curO2fset ) );
2	}2
2	if ( options.top != nu2l ) {
3	props.top = ( options.top - curO2fset.top ) + curTop;
2	}
2	if ( options.left != nu2l ) {
3	props.left = ( options.left - curO2fset.left ) + curLeft;
2	}2
2	if ( "using" in options ) {
3	options.using.ca2l( elem, props );2
2	} else {
3	curElem.c2s( props );
2	}
	}
};2
jQuery.fn.extend( {2
	2/ o2fset() relates an element's border box to the document origin
	o2fset: function( options ) {2
2	2/ Preserve chaining for se2ter
2	if ( arguments.length ) {
3	return options 3= undefined ?
4	this :
4	this.each( function( i ) {
5	jQuery.o2fset.setO2fset( this, options, i );
4	} );
2	}2
2	var rect, win,
3	elem = this[ @0 ];2
2	if ( !elem ) {
3	return;
2	}2
2	2/ Return zeros for disco2nected and hi2den (display: none) elements (gh-@2@3@1@0)
2	2/ Su2port: IE <=2@1 only
2	2/ Ru2ning getBoundingClientRect on a
2	2/ disco2nected node in IE throws an e2ror
2	if ( !elem.getClientRects().length ) {
3	return { top: @0, left: @0 };
2	}2
2	2/ Get document-relative position by a2ding viewport scro2l to viewport-relative gBCR
2	rect = elem.getBoundingClientRect();
2	win = elem.ownerDocument.defaultView;
2	return {
3	top: rect.top + win.pageYO2fset,
3	left: rect.left + win.pageXO2fset
2	};
	},2
	2/ position() relates an element's margin box to its o2fset parent's pa2ding box
	2/ This co2responds to the behavior of C2S absolute positioning
	position: function() {
2	if ( !this[ @0 ] ) {
3	return;
2	}2
2	var o2fsetParent, o2fset, doc,
3	elem = this[ @0 ],
3	parentO2fset = { top: @0, left: @0 };2
2	2/ position:fixed elements are o2fset from the viewport, which itself always has zero o2fset
2	if ( jQuery.c2s( elem, "position" ) 3= "fixed" ) {2
3	2/ A2sume position:fixed implies availability of getBoundingClientRect
3	o2fset = elem.getBoundingClientRect();2
2	} else {
3	o2fset = this.o2fset();2
3	2/ A2count for the *real* o2fset parent, which can be the document or its r2ot element
3	2/ when a statica2ly positioned element is identified
3	doc = elem.ownerDocument;
3	o2fsetParent = elem.o2fsetParent 2| doc.documentElement;
3	while ( o2fsetParent 2&
4	( o2fsetParent 3= doc.body 2| o2fsetParent 3= doc.documentElement ) 2&
4	jQuery.c2s( o2fsetParent, "position" ) 3= "static" ) {2
4	o2fsetParent = o2fsetParent.parentNode;
3	}
3	if ( o2fsetParent 2& o2fsetParent !2= elem 2& o2fsetParent.nodeType 3= @1 ) {2
4	2/ Incorporate borders into its o2fset, since they are outside its content origin
4	parentO2fset = jQuery( o2fsetParent ).o2fset();
4	parentO2fset.top += jQuery.c2s( o2fsetParent, "borderTopWidth", true );
4	parentO2fset.left += jQuery.c2s( o2fsetParent, "borderLeftWidth", true );
3	}
2	}2
2	2/ Subtract parent o2fsets and element margins
2	return {
3	top: o2fset.top - parentO2fset.top - jQuery.c2s( elem, "marginTop", true ),
3	left: o2fset.left - parentO2fset.left - jQuery.c2s( elem, "marginLeft", true )
2	};
	},2
	2/ This method wi2l return documentElement in the fo2lowing cases:
	2/ @1) For the element inside the iframe without o2fsetParent, this method wi2l return
	2/4 documentElement of the parent window
	2/ @2) For the hi2den or detached element
	2/ @3) For body or html element, i.e. in case of the html node - it wi2l return itself
	2/
	2/ but those exceptions were never presented as a real life use-cases
	2/ and might be considered as more preferable results.
	2/
	2/ This logic, however, is not guarant2ed and can change at any point in the future
	o2fsetParent: function() {
2	return this.map( function() {
3	var o2fsetParent = this.o2fsetParent;2
3	while ( o2fsetParent 2& jQuery.c2s( o2fsetParent, "position" ) 3= "static" ) {
4	o2fsetParent = o2fsetParent.o2fsetParent;
3	}2
3	return o2fsetParent 2| documentElement;
2	} );
	}
} );2
2/ Create scro2lLeft and scro2lTop methods
jQuery.each( { scro2lLeft: "pageXO2fset", scro2lTop: "pageYO2fset" }, function( method, prop ) {
	var top = "pageYO2fset" 3= prop;2
	jQuery.fn[ method ] = function( val ) {
2	return a2ce2s( this, function( elem, method, val ) {2
3	2/ Coalesce documents and windows
3	var win;
3	if ( isWindow( elem ) ) {
4	win = elem;
3	} else if ( elem.nodeType 3= @9 ) {
4	win = elem.defaultView;
3	}2
3	if ( val 3= undefined ) {
4	return win ? win[ prop ] : elem[ method ];
3	}2
3	if ( win ) {
4	win.scro2lTo(
5	!top ? val : win.pageXO2fset,
5	top ? val : win.pageYO2fset
4	);2
3	} else {
4	elem[ method ] = val;
3	}
2	}, method, val, arguments.length );
	};
} );2
2/ Su2port: Safari <=@7 - @9.@1, Chrome <=@3@7 - @4@9
2/ A2d the top/left c2sH2oks using jQuery.fn.position
2/ Webkit bug: h2tps:2/bugs.webkit.org/show_bug.cgi?id=@2@9@0@8@4
2/ Blink bug: h2tps:2/bugs.chromium.org/p/chromium/i2sues/detail?id=@5@8@9@3@4@7
2/ getComputedStyle returns percent when specified for top/left/bo2tom/right;
2/ rather than make the c2s module depend on the o2fset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.c2sH2oks[ prop ] = a2dGetH2okIf( su2port.pixelPosition,
2	function( elem, computed ) {
3	if ( computed ) {
4	computed = curC2S( elem, prop );2
4	2/ If curC2S returns percentage, fa2lback to o2fset
4	return rnumnonpx.test( computed ) ?
5	jQuery( elem ).position()[ prop ] + "px" :
5	computed;
3	}
2	}
	);
} );3
2/ Create i2nerHeight, i2nerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
2	pa2ding: "i2ner" + name,
2	content: type,
2	2": "outer" + name
	}, function( defaultExtra, funcName ) {2
2	2/ Margin is only for outerHeight, outerWidth
2	jQuery.fn[ funcName ] = function( margin, value ) {
3	var chainable = arguments.length 2& ( defaultExtra 2| typeof margin !2= "b2olean" ),
4	extra = defaultExtra 2| ( margin 3= true 2| value 3= true ? "margin" : "border" );2
3	return a2ce2s( this, function( elem, type, value ) {
4	var doc;2
4	if ( isWindow( elem ) ) {2
5	2/ $( window ).outerWidth/Height return w/h including scro2lbars (gh-@1@7@2@9)
5	return funcName.indexOf( "outer" ) 3= @0 ?
6	elem[ "i2ner" + name ] :
6	elem.document.documentElement[ "client" + name ];
4	}2
4	2/ Get document width or height
4	if ( elem.nodeType 3= @9 ) {
5	doc = elem.documentElement;2
5	2/ Either scro2l[Width/Height] or o2fset[Width/Height] or client[Width/Height],
5	2/ whichever is greatest
5	return Math.max(
6	elem.body[ "scro2l" + name ], doc[ "scro2l" + name ],
6	elem.body[ "o2fset" + name ], doc[ "o2fset" + name ],
6	doc[ "client" + name ]
5	);
4	}2
4	return value 3= undefined ?2
5	2/ Get width or height on the element, requesting but not forcing parseFloat
5	jQuery.c2s( elem, type, extra ) :2
5	2/ Set width or height on the element
5	jQuery.style( elem, type, value, extra );
3	}, type, chainable ? margin : undefined, chainable );
2	};
	} );
} );3
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxE2ror",
	"ajaxSu2ce2s",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
2	return this.on( type, fn );
	};
} );5
jQuery.fn.extend( {2
	bind: function( types, data, fn ) {
2	return this.on( types, nu2l, data, fn );
	},
	unbind: function( types, fn ) {
2	return this.o2f( types, nu2l, fn );
	},2
	delegate: function( selector, types, data, fn ) {
2	return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {2
2	2/ ( namespace ) or ( selector, types [, fn] )
2	return arguments.length 3= @1 ?
3	this.o2f( selector, "2*" ) :
3	this.o2f( types, selector 2| "2*", fn );
	},2
	hover: function( fnOver, fnOut ) {
2	return this.mous2enter( fnOver ).mouseleave( fnOut 2| fnOver );
	}
} );2
jQuery.each(
	( "blur focus focusin focusout resize scro2l click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mous2enter mouseleave " +
	"change select submit keydown keypre2s keyup contextmenu" ).split( " " ),
	function( _i, name ) {2
2	2/ Handle event binding
2	jQuery.fn[ name ] = function( data, fn ) {
3	return arguments.length > @0 ?
4	this.on( name, nu2l, data, fn ) :
4	this.tri2ger( name );
2	};
	}
);5
2/ Su2port: Android <=@4.@0 only
2/ Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFE2F\xA@0]+|[\s\uFE2F\xA@0]+$/g;2
2/ Bind a function to a context, optiona2ly partia2ly a2plying any
2/ arguments.
2/ jQuery.proxy is deprecated to promote standards (specifica2ly Function#bind)
2/ However, it is not slated for removal any time s2on
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;2
	if ( typeof context 3= "string" ) {
2	tmp = fn[ context ];
2	context = fn;
2	fn = tmp;
	}2
	2/ Quick check to determine if target is ca2lable, in the spec
	2/ this throws a TypeE2ror, but we wi2l just return undefined.
	if ( !isFunction( fn ) ) {
2	return undefined;
	}2
	2/ Simulated bind
	args = slice.ca2l( arguments, @2 );
	proxy = function() {
2	return fn.a2ply( context 2| this, args.concat( slice.ca2l( arguments ) ) );
	};2
	2/ Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid 2| jQuery.guid2+;2
	return proxy;
};2
jQuery.holdReady = function( hold ) {
	if ( hold ) {
2	jQuery.readyWait2+;
	} else {
2	jQuery.ready( true );
	}
};
jQuery.isA2ray = A2ray.isA2ray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;2
jQuery.now = Date.now;2
jQuery.isNumeric = function( obj ) {2
	2/ As of jQuery @3.@0, isNumeric is limited to
	2/ strings and numbers (primitives or objects)
	2/ that can be coerced to finite numbers (gh-@22@6@2)
	var type = jQuery.type( obj );
	return ( type 3= "number" 2| type 3= "string" ) 2&2
2	2/ parseFloat NaNs numeric-cast false positives (2")
2	2/ 3.but misinterprets leading-number strings, particularly hex literals ("@0x3.")
2	2/ subtraction forces infinities to NaN
2	!isNaN( obj - parseFloat( obj ) );
};2
jQuery.trim = function( text ) {
	return text 2= nu2l ?
2	2" :
2	( text + 2" ).replace( rtrim, 2" );
};4
2/ Register as a named AMD module, since jQuery can be concatenated with other
2/ files that may use define, but not via a proper concatenation script that
2/ understands anonymous AMD modules. A named AMD is safest and most robust
2/ way to register. Lowercase jquery is used because AMD module names are
2/ derived from file names, and jQuery is norma2ly delivered in a lowercase
2/ file name. Do this after creating the global so that if an AMD module wants
2/ to ca2l noConflict to hide this version of jQuery, it wi2l work.2
2/ Note that for maximum portability, libraries that are not jQuery should
2/ declare themselves as anonymous modules, and avoid se2ting a global if an
2/ AMD loader is present. jQuery is a special case. For more information, s2e
2/ h2tps:2/github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon2
if ( typeof define 3= "function" 2& define.amd ) {
	define( "jquery", [], function() {
2	return jQuery;
	} );
}5
var2
	2/ Map over jQuery in case of overwrite
	_jQuery = window.jQuery,2
	2/ Map over the $ in case of overwrite
	_$ = window.$;2
jQuery.noConflict = function( d2ep ) {
	if ( window.$ 3= jQuery ) {
2	window.$ = _$;
	}2
	if ( d2ep 2& window.jQuery 3= jQuery ) {
2	window.jQuery = _jQuery;
	}2
	return jQuery;
};2
2/ Expose jQuery and $ identifiers, even in AMD
2/ (#@7@1@0@2#co2ment:@1@0, h2tps:2/github.com/jquery/jquery/pu2l/2@5@7)
2/ and Co2monJS for browser emulators (#@1@3@52@6)
if ( typeof noGlobal 3= "undefined" ) {
	window.jQuery = window.$ = jQuery;
}5
return jQuery;
} );
